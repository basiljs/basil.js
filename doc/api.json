[
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with units() to set the coordinate system to points.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 58,
                  "offset": 57
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 58,
              "offset": 57
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 58,
          "offset": 57
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 85,
        "column": 0
      },
      "end": {
        "line": 88,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 89,
          "column": 0
        },
        "end": {
          "line": 89,
          "column": 14
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "PT",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "PT",
        "scope": "static"
      }
    ],
    "namespace": ".PT"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with units() to set the coordinate system to pixels.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 58,
                  "offset": 57
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 58,
              "offset": 57
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 58,
          "offset": 57
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 91,
        "column": 0
      },
      "end": {
        "line": 94,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 95,
          "column": 0
        },
        "end": {
          "line": 95,
          "column": 14
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "PX",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "PX",
        "scope": "static"
      }
    ],
    "namespace": ".PX"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with units() to set the coordinate system to centimeters.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 63,
                  "offset": 62
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 63,
              "offset": 62
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 63,
          "offset": 62
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 97,
        "column": 0
      },
      "end": {
        "line": 100,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 101,
          "column": 0
        },
        "end": {
          "line": 101,
          "column": 14
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "CM",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "CM",
        "scope": "static"
      }
    ],
    "namespace": ".CM"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with units() to set the coordinate system to millimeters.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 63,
                  "offset": 62
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 63,
              "offset": 62
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 63,
          "offset": 62
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 103,
        "column": 0
      },
      "end": {
        "line": 106,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 107,
          "column": 0
        },
        "end": {
          "line": 107,
          "column": 14
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "MM",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "MM",
        "scope": "static"
      }
    ],
    "namespace": ".MM"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with units() to set the coordinate system to inches.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 58,
                  "offset": 57
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 58,
              "offset": 57
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 58,
          "offset": 57
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 109,
        "column": 0
      },
      "end": {
        "line": 112,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 113,
          "column": 0
        },
        "end": {
          "line": 113,
          "column": 16
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "IN",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "IN",
        "scope": "static"
      }
    ],
    "namespace": ".IN"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with colorMode() to set the color space.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 46,
          "offset": 45
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 115,
        "column": 0
      },
      "end": {
        "line": 118,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 119,
          "column": 0
        },
        "end": {
          "line": 119,
          "column": 16
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "RGB",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "RGB",
        "scope": "static"
      }
    ],
    "namespace": ".RGB"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with colorMode() to set the color space.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 46,
          "offset": 45
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 121,
        "column": 0
      },
      "end": {
        "line": 124,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 125,
          "column": 0
        },
        "end": {
          "line": 125,
          "column": 18
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "CMYK",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "CMYK",
        "scope": "static"
      }
    ],
    "namespace": ".CMYK"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with gradientMode() to set the gradient mode.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 51,
                  "offset": 50
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 51,
              "offset": 50
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 51,
          "offset": 50
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 127,
        "column": 0
      },
      "end": {
        "line": 130,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 131,
          "column": 0
        },
        "end": {
          "line": 131,
          "column": 22
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "LINEAR",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "LINEAR",
        "scope": "static"
      }
    ],
    "namespace": ".LINEAR"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with gradientMode() to set the gradient mode.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 51,
                  "offset": 50
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 51,
              "offset": 50
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 51,
          "offset": 50
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 133,
        "column": 0
      },
      "end": {
        "line": 136,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 137,
          "column": 0
        },
        "end": {
          "line": 137,
          "column": 22
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "RADIAL",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "RADIAL",
        "scope": "static"
      }
    ],
    "namespace": ".RADIAL"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Corner, used for drawing modes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 32,
          "offset": 31
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 139,
        "column": 0
      },
      "end": {
        "line": 142,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 143,
          "column": 0
        },
        "end": {
          "line": 143,
          "column": 22
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "CORNER",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "CORNER",
        "scope": "static"
      }
    ],
    "namespace": ".CORNER"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Corners, used for drawing modes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 33,
          "offset": 32
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 145,
        "column": 0
      },
      "end": {
        "line": 148,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 149,
          "column": 0
        },
        "end": {
          "line": 149,
          "column": 24
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "CORNERS",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "CORNERS",
        "scope": "static"
      }
    ],
    "namespace": ".CORNERS"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Center, used for drawing modes or used with referencePoint() to set the reference point of transformations to the center of the page item.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 139,
                  "offset": 138
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 139,
              "offset": 138
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 139,
          "offset": 138
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 151,
        "column": 0
      },
      "end": {
        "line": 154,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 155,
          "column": 0
        },
        "end": {
          "line": 155,
          "column": 22
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "CENTER",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "CENTER",
        "scope": "static"
      }
    ],
    "namespace": ".CENTER"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Radius, used for drawing modes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 32,
          "offset": 31
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 158,
        "column": 0
      },
      "end": {
        "line": 161,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 162,
          "column": 0
        },
        "end": {
          "line": 162,
          "column": 22
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "RADIUS",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "RADIUS",
        "scope": "static"
      }
    ],
    "namespace": ".RADIUS"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with referencePoint() to set the reference point of transformations to the top left of the page item.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 107,
                  "offset": 106
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 107,
              "offset": 106
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 107,
          "offset": 106
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 164,
        "column": 0
      },
      "end": {
        "line": 167,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 168,
          "column": 0
        },
        "end": {
          "line": 168,
          "column": 25
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "TOP_LEFT",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "TOP_LEFT",
        "scope": "static"
      }
    ],
    "namespace": ".TOP_LEFT"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with referencePoint() to set the reference point of transformations to the top center of the page item.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 109,
                  "offset": 108
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 109,
              "offset": 108
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 109,
          "offset": 108
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 170,
        "column": 0
      },
      "end": {
        "line": 173,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 174,
          "column": 0
        },
        "end": {
          "line": 174,
          "column": 29
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "TOP_CENTER",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "TOP_CENTER",
        "scope": "static"
      }
    ],
    "namespace": ".TOP_CENTER"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with referencePoint() to set the reference point of transformations to the top right of the page item.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 108,
                  "offset": 107
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 108,
              "offset": 107
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 108,
          "offset": 107
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 176,
        "column": 0
      },
      "end": {
        "line": 179,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 180,
          "column": 0
        },
        "end": {
          "line": 180,
          "column": 27
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "TOP_RIGHT",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "TOP_RIGHT",
        "scope": "static"
      }
    ],
    "namespace": ".TOP_RIGHT"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with referencePoint() to set the reference point of transformations to the center left of the page item.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 110,
                  "offset": 109
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 110,
              "offset": 109
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 110,
          "offset": 109
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 182,
        "column": 0
      },
      "end": {
        "line": 185,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 186,
          "column": 0
        },
        "end": {
          "line": 186,
          "column": 31
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "CENTER_LEFT",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "CENTER_LEFT",
        "scope": "static"
      }
    ],
    "namespace": ".CENTER_LEFT"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with referencePoint() to set the reference point of transformations to the center right of the page item.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 111,
                  "offset": 110
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 111,
              "offset": 110
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 111,
          "offset": 110
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 188,
        "column": 0
      },
      "end": {
        "line": 191,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 192,
          "column": 0
        },
        "end": {
          "line": 192,
          "column": 33
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "CENTER_RIGHT",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "CENTER_RIGHT",
        "scope": "static"
      }
    ],
    "namespace": ".CENTER_RIGHT"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with referencePoint() to set the reference point of transformations to the bottom left of the page item.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 110,
                  "offset": 109
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 110,
              "offset": 109
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 110,
          "offset": 109
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 194,
        "column": 0
      },
      "end": {
        "line": 197,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 198,
          "column": 0
        },
        "end": {
          "line": 198,
          "column": 31
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "BOTTOM_LEFT",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "BOTTOM_LEFT",
        "scope": "static"
      }
    ],
    "namespace": ".BOTTOM_LEFT"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with referencePoint() to set the reference point of transformations to the bottom center of the page item.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 112,
                  "offset": 111
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 112,
              "offset": 111
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 112,
          "offset": 111
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 200,
        "column": 0
      },
      "end": {
        "line": 203,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 204,
          "column": 0
        },
        "end": {
          "line": 204,
          "column": 35
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "BOTTOM_CENTER",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "BOTTOM_CENTER",
        "scope": "static"
      }
    ],
    "namespace": ".BOTTOM_CENTER"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with referencePoint() to set the reference point of transformations to the bottom right of the page item.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 111,
                  "offset": 110
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 111,
              "offset": 110
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 111,
          "offset": 110
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 206,
        "column": 0
      },
      "end": {
        "line": 209,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 210,
          "column": 0
        },
        "end": {
          "line": 210,
          "column": 33
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "BOTTOM_RIGHT",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "BOTTOM_RIGHT",
        "scope": "static"
      }
    ],
    "namespace": ".BOTTOM_RIGHT"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Close, used for endShape() modes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 34,
              "offset": 33
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 34,
          "offset": 33
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 212,
        "column": 0
      },
      "end": {
        "line": 215,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 216,
          "column": 0
        },
        "end": {
          "line": 216,
          "column": 20
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "CLOSE",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "CLOSE",
        "scope": "static"
      }
    ],
    "namespace": ".CLOSE"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Open, used for arc() modes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 28,
          "offset": 27
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 218,
        "column": 0
      },
      "end": {
        "line": 221,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 222,
          "column": 0
        },
        "end": {
          "line": 222,
          "column": 18
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "OPEN",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "OPEN",
        "scope": "static"
      }
    ],
    "namespace": ".OPEN"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Chord, used for arc() modes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 29,
          "offset": 28
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 224,
        "column": 0
      },
      "end": {
        "line": 227,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 228,
          "column": 0
        },
        "end": {
          "line": 228,
          "column": 20
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "CHORD",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "CHORD",
        "scope": "static"
      }
    ],
    "namespace": ".CHORD"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Pie, used for arc() modes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 27,
          "offset": 26
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 230,
        "column": 0
      },
      "end": {
        "line": 233,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 234,
          "column": 0
        },
        "end": {
          "line": 234,
          "column": 16
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "PIE",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "PIE",
        "scope": "static"
      }
    ],
    "namespace": ".PIE"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with canvasMode() to set the canvas to the full current page.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 67,
                  "offset": 66
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 67,
              "offset": 66
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 67,
          "offset": 66
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 236,
        "column": 0
      },
      "end": {
        "line": 239,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 240,
          "column": 0
        },
        "end": {
          "line": 240,
          "column": 18
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "PAGE",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "PAGE",
        "scope": "static"
      }
    ],
    "namespace": ".PAGE"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with canvasMode() to set the canvas to the full current page minus the margins.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 85,
                  "offset": 84
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 85,
              "offset": 84
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 85,
          "offset": 84
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 242,
        "column": 0
      },
      "end": {
        "line": 245,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 246,
          "column": 0
        },
        "end": {
          "line": 246,
          "column": 22
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "MARGIN",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "MARGIN",
        "scope": "static"
      }
    ],
    "namespace": ".MARGIN"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with canvasMode() to set the canvas to the full current page plus the bleed.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 82,
                  "offset": 81
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 82,
              "offset": 81
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 82,
          "offset": 81
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 248,
        "column": 0
      },
      "end": {
        "line": 251,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 252,
          "column": 0
        },
        "end": {
          "line": 252,
          "column": 20
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "BLEED",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "BLEED",
        "scope": "static"
      }
    ],
    "namespace": ".BLEED"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with canvasMode() to set the canvas to use the current facing pages.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 74,
                  "offset": 73
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 74,
              "offset": 73
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 74,
          "offset": 73
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 254,
        "column": 0
      },
      "end": {
        "line": 257,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 258,
          "column": 0
        },
        "end": {
          "line": 258,
          "column": 34
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "FACING_PAGES",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "FACING_PAGES",
        "scope": "static"
      }
    ],
    "namespace": ".FACING_PAGES"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with canvasMode() to set the canvas to use the current facing pages plus bleeds.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 86,
                  "offset": 85
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 86,
              "offset": 85
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 86,
          "offset": 85
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 260,
        "column": 0
      },
      "end": {
        "line": 263,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 264,
          "column": 0
        },
        "end": {
          "line": 264,
          "column": 36
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "FACING_BLEEDS",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "FACING_BLEEDS",
        "scope": "static"
      }
    ],
    "namespace": ".FACING_BLEEDS"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with canvasMode() to set the canvas to use the current facing pages minus margins.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 88,
                  "offset": 87
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 88,
              "offset": 87
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 88,
          "offset": 87
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 266,
        "column": 0
      },
      "end": {
        "line": 269,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 270,
          "column": 0
        },
        "end": {
          "line": 270,
          "column": 38
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "FACING_MARGINS",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "FACING_MARGINS",
        "scope": "static"
      }
    ],
    "namespace": ".FACING_MARGINS"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with addPage() to set the position of the new page in the book.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 69,
          "offset": 68
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 272,
        "column": 0
      },
      "end": {
        "line": 275,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 276,
          "column": 0
        },
        "end": {
          "line": 276,
          "column": 48
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "AT_BEGINNING",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "AT_BEGINNING",
        "scope": "static"
      }
    ],
    "namespace": ".AT_BEGINNING"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with addPage() to set the position of the new page in the book.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 69,
          "offset": 68
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 278,
        "column": 0
      },
      "end": {
        "line": 281,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 282,
          "column": 0
        },
        "end": {
          "line": 282,
          "column": 36
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "AT_END",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "AT_END",
        "scope": "static"
      }
    ],
    "namespace": ".AT_END"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with addPage() to set the position of the new page in the book.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 69,
          "offset": 68
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 284,
        "column": 0
      },
      "end": {
        "line": 287,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 288,
          "column": 0
        },
        "end": {
          "line": 288,
          "column": 36
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "BEFORE",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "BEFORE",
        "scope": "static"
      }
    ],
    "namespace": ".BEFORE"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with addPage() to set the position of the new page in the book.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 69,
          "offset": 68
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 290,
        "column": 0
      },
      "end": {
        "line": 293,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 294,
          "column": 0
        },
        "end": {
          "line": 294,
          "column": 34
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "AFTER",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "AFTER",
        "scope": "static"
      }
    ],
    "namespace": ".AFTER"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with addPage() to set the position of the new page in the book.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 69,
          "offset": 68
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 296,
        "column": 0
      },
      "end": {
        "line": 299,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 300,
          "column": 0
        },
        "end": {
          "line": 300,
          "column": 30
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "NONE",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "NONE",
        "scope": "static"
      }
    ],
    "namespace": ".NONE"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with arrange() to bring a page item to the front or to bring it in front of a given reference object.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 107,
                  "offset": 106
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 107,
              "offset": 106
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 107,
          "offset": 106
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 302,
        "column": 0
      },
      "end": {
        "line": 305,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 306,
          "column": 0
        },
        "end": {
          "line": 306,
          "column": 20
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "FRONT",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "FRONT",
        "scope": "static"
      }
    ],
    "namespace": ".FRONT"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with arrange() to send a page item to the back or to send it behind a given reference object.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 99,
                  "offset": 98
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 99,
              "offset": 98
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 99,
          "offset": 98
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 308,
        "column": 0
      },
      "end": {
        "line": 311,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 312,
          "column": 0
        },
        "end": {
          "line": 312,
          "column": 18
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "BACK",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "BACK",
        "scope": "static"
      }
    ],
    "namespace": ".BACK"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with arrange() to bring a page item one level forward in its layer.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 73,
                  "offset": 72
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 73,
              "offset": 72
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 73,
          "offset": 72
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 314,
        "column": 0
      },
      "end": {
        "line": 317,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 318,
          "column": 0
        },
        "end": {
          "line": 318,
          "column": 24
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "FORWARD",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "FORWARD",
        "scope": "static"
      }
    ],
    "namespace": ".FORWARD"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with arrange() to send a page item one level backward in its layer.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 73,
                  "offset": 72
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 73,
              "offset": 72
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 73,
          "offset": 72
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 320,
        "column": 0
      },
      "end": {
        "line": 323,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 324,
          "column": 0
        },
        "end": {
          "line": 324,
          "column": 26
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "BACKWARD",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "BACKWARD",
        "scope": "static"
      }
    ],
    "namespace": ".BACKWARD"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with size() to set the orientation of a given page size to portrait.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 74,
                  "offset": 73
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 74,
              "offset": 73
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 74,
          "offset": 73
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 326,
        "column": 0
      },
      "end": {
        "line": 329,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 330,
          "column": 0
        },
        "end": {
          "line": 330,
          "column": 40
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "PORTRAIT",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "PORTRAIT",
        "scope": "static"
      }
    ],
    "namespace": ".PORTRAIT"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with size() to set the orientation of a given page size to landscape.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 75,
                  "offset": 74
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 75,
              "offset": 74
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 75,
          "offset": 74
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 332,
        "column": 0
      },
      "end": {
        "line": 335,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 336,
          "column": 0
        },
        "end": {
          "line": 336,
          "column": 42
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "LANDSCAPE",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "LANDSCAPE",
        "scope": "static"
      }
    ],
    "namespace": ".LANDSCAPE"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "mode()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " to set performance mode. Disables screen redraw during processing.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "end": {
                  "line": 1,
                  "column": 86,
                  "offset": 85
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 86,
              "offset": 85
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 86,
          "offset": 85
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 338,
        "column": 0
      },
      "end": {
        "line": 341,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 342,
          "column": 0
        },
        "end": {
          "line": 342,
          "column": 22
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "SILENT",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "SILENT",
        "scope": "static"
      }
    ],
    "namespace": ".SILENT"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "mode()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " to set performance mode. Processes the document in background mode. The document will not be visible until the script is done or until the mode is changed back to ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "end": {
                  "line": 1,
                  "column": 183,
                  "offset": 182
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "VISIBLE",
              "position": {
                "start": {
                  "line": 1,
                  "column": 183,
                  "offset": 182
                },
                "end": {
                  "line": 1,
                  "column": 192,
                  "offset": 191
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ". The document will be removed from the display list and added again after the script is done. In this mode you will likely look at InDesign with no open document for quite some time – do not work in InDesign during this time. You may want to use ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 192,
                  "offset": 191
                },
                "end": {
                  "line": 1,
                  "column": 439,
                  "offset": 438
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "println(\"yourMessage\")",
              "position": {
                "start": {
                  "line": 1,
                  "column": 439,
                  "offset": 438
                },
                "end": {
                  "line": 1,
                  "column": 463,
                  "offset": 462
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " in your script and look at the console to get information about the process. Note: In order to enter this mode either a saved document needs to be open or no document at all. If you have an unsaved document open, basil will automatically save it for you. If it has not been saved before, you will be prompted to save it to your hard drive.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 463,
                  "offset": 462
                },
                "end": {
                  "line": 1,
                  "column": 803,
                  "offset": 802
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 803,
              "offset": 802
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 803,
          "offset": 802
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 344,
        "column": 0
      },
      "end": {
        "line": 347,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 348,
          "column": 0
        },
        "end": {
          "line": 348,
          "column": 22
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "HIDDEN",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "HIDDEN",
        "scope": "static"
      }
    ],
    "namespace": ".HIDDEN"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Default mode. Used with ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "mode()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " to set performance mode. Processes the document with screen redraw, use this option to see direct results during the process. This will slow down the process in terms of processing time.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "end": {
                  "line": 1,
                  "column": 220,
                  "offset": 219
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 220,
              "offset": 219
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 220,
          "offset": 219
        }
      }
    },
    "tags": [
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 350,
        "column": 0
      },
      "end": {
        "line": 353,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 354,
          "column": 0
        },
        "end": {
          "line": 354,
          "column": 24
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "VISIBLE",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "VISIBLE",
        "scope": "static"
      }
    ],
    "namespace": ".VISIBLE"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the Effects blendMode property of an object.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 50,
                  "offset": 49
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 50,
              "offset": 49
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 50,
          "offset": 49
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Sets the Effects blendMode property of an object.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "blendMode"
      },
      {
        "title": "param",
        "description": "The object to set blendMode of.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "obj"
      },
      {
        "title": "param",
        "description": "The blendMode must be one of the InDesign BlendMode enum values:\n  - `BlendMode.NORMAL`\n  - `BlendMode.MULTIPLY`\n  - `BlendMode.SCREEN`\n  - `BlendMode.OVERLAY`\n  - `BlendMode.SOFT_LIGHT`\n  - `BlendMode.HARD_LIGHT`\n  - `BlendMode.COLOR_DODGE`\n  - `BlendMode.COLOR_BURN`\n  - `BlendMode.DARKEN`\n  - `BlendMode.LIGHTEN`\n  - `BlendMode.DIFFERENCE`\n  - `BlendMode.EXCLUSION`\n  - `BlendMode.HUE`\n  - `BlendMode.SATURATION`\n  - `BlendMode.COLOR`\n  - `BlendMode.LUMINOSITY`",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "blendMode"
      }
    ],
    "loc": {
      "start": {
        "line": 998,
        "column": 0
      },
      "end": {
        "line": 1022,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1023,
          "column": 0
        },
        "end": {
          "line": 1030,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "obj",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The object to set blendMode of.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "blendMode",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The blendMode must be one of the InDesign BlendMode enum values:",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 65,
                      "offset": 64
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "indent": []
              }
            },
            {
              "type": "list",
              "ordered": false,
              "start": null,
              "loose": false,
              "children": [
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "BlendMode.NORMAL",
                          "position": {
                            "start": {
                              "line": 2,
                              "column": 5,
                              "offset": 69
                            },
                            "end": {
                              "line": 2,
                              "column": 23,
                              "offset": 87
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 5,
                          "offset": 69
                        },
                        "end": {
                          "line": 2,
                          "column": 23,
                          "offset": 87
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 65
                    },
                    "end": {
                      "line": 2,
                      "column": 23,
                      "offset": 87
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "BlendMode.MULTIPLY",
                          "position": {
                            "start": {
                              "line": 3,
                              "column": 5,
                              "offset": 92
                            },
                            "end": {
                              "line": 3,
                              "column": 25,
                              "offset": 112
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 5,
                          "offset": 92
                        },
                        "end": {
                          "line": 3,
                          "column": 25,
                          "offset": 112
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 1,
                      "offset": 88
                    },
                    "end": {
                      "line": 3,
                      "column": 25,
                      "offset": 112
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "BlendMode.SCREEN",
                          "position": {
                            "start": {
                              "line": 4,
                              "column": 5,
                              "offset": 117
                            },
                            "end": {
                              "line": 4,
                              "column": 23,
                              "offset": 135
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 5,
                          "offset": 117
                        },
                        "end": {
                          "line": 4,
                          "column": 23,
                          "offset": 135
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 1,
                      "offset": 113
                    },
                    "end": {
                      "line": 4,
                      "column": 23,
                      "offset": 135
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "BlendMode.OVERLAY",
                          "position": {
                            "start": {
                              "line": 5,
                              "column": 5,
                              "offset": 140
                            },
                            "end": {
                              "line": 5,
                              "column": 24,
                              "offset": 159
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 5,
                          "column": 5,
                          "offset": 140
                        },
                        "end": {
                          "line": 5,
                          "column": 24,
                          "offset": 159
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 136
                    },
                    "end": {
                      "line": 5,
                      "column": 24,
                      "offset": 159
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "BlendMode.SOFT_LIGHT",
                          "position": {
                            "start": {
                              "line": 6,
                              "column": 5,
                              "offset": 164
                            },
                            "end": {
                              "line": 6,
                              "column": 27,
                              "offset": 186
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 5,
                          "offset": 164
                        },
                        "end": {
                          "line": 6,
                          "column": 27,
                          "offset": 186
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 1,
                      "offset": 160
                    },
                    "end": {
                      "line": 6,
                      "column": 27,
                      "offset": 186
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "BlendMode.HARD_LIGHT",
                          "position": {
                            "start": {
                              "line": 7,
                              "column": 5,
                              "offset": 191
                            },
                            "end": {
                              "line": 7,
                              "column": 27,
                              "offset": 213
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 7,
                          "column": 5,
                          "offset": 191
                        },
                        "end": {
                          "line": 7,
                          "column": 27,
                          "offset": 213
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 1,
                      "offset": 187
                    },
                    "end": {
                      "line": 7,
                      "column": 27,
                      "offset": 213
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "BlendMode.COLOR_DODGE",
                          "position": {
                            "start": {
                              "line": 8,
                              "column": 5,
                              "offset": 218
                            },
                            "end": {
                              "line": 8,
                              "column": 28,
                              "offset": 241
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 8,
                          "column": 5,
                          "offset": 218
                        },
                        "end": {
                          "line": 8,
                          "column": 28,
                          "offset": 241
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 8,
                      "column": 1,
                      "offset": 214
                    },
                    "end": {
                      "line": 8,
                      "column": 28,
                      "offset": 241
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "BlendMode.COLOR_BURN",
                          "position": {
                            "start": {
                              "line": 9,
                              "column": 5,
                              "offset": 246
                            },
                            "end": {
                              "line": 9,
                              "column": 27,
                              "offset": 268
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 9,
                          "column": 5,
                          "offset": 246
                        },
                        "end": {
                          "line": 9,
                          "column": 27,
                          "offset": 268
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 9,
                      "column": 1,
                      "offset": 242
                    },
                    "end": {
                      "line": 9,
                      "column": 27,
                      "offset": 268
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "BlendMode.DARKEN",
                          "position": {
                            "start": {
                              "line": 10,
                              "column": 5,
                              "offset": 273
                            },
                            "end": {
                              "line": 10,
                              "column": 23,
                              "offset": 291
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 10,
                          "column": 5,
                          "offset": 273
                        },
                        "end": {
                          "line": 10,
                          "column": 23,
                          "offset": 291
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 10,
                      "column": 1,
                      "offset": 269
                    },
                    "end": {
                      "line": 10,
                      "column": 23,
                      "offset": 291
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "BlendMode.LIGHTEN",
                          "position": {
                            "start": {
                              "line": 11,
                              "column": 5,
                              "offset": 296
                            },
                            "end": {
                              "line": 11,
                              "column": 24,
                              "offset": 315
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 11,
                          "column": 5,
                          "offset": 296
                        },
                        "end": {
                          "line": 11,
                          "column": 24,
                          "offset": 315
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 11,
                      "column": 1,
                      "offset": 292
                    },
                    "end": {
                      "line": 11,
                      "column": 24,
                      "offset": 315
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "BlendMode.DIFFERENCE",
                          "position": {
                            "start": {
                              "line": 12,
                              "column": 5,
                              "offset": 320
                            },
                            "end": {
                              "line": 12,
                              "column": 27,
                              "offset": 342
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 12,
                          "column": 5,
                          "offset": 320
                        },
                        "end": {
                          "line": 12,
                          "column": 27,
                          "offset": 342
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 12,
                      "column": 1,
                      "offset": 316
                    },
                    "end": {
                      "line": 12,
                      "column": 27,
                      "offset": 342
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "BlendMode.EXCLUSION",
                          "position": {
                            "start": {
                              "line": 13,
                              "column": 5,
                              "offset": 347
                            },
                            "end": {
                              "line": 13,
                              "column": 26,
                              "offset": 368
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 13,
                          "column": 5,
                          "offset": 347
                        },
                        "end": {
                          "line": 13,
                          "column": 26,
                          "offset": 368
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 13,
                      "column": 1,
                      "offset": 343
                    },
                    "end": {
                      "line": 13,
                      "column": 26,
                      "offset": 368
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "BlendMode.HUE",
                          "position": {
                            "start": {
                              "line": 14,
                              "column": 5,
                              "offset": 373
                            },
                            "end": {
                              "line": 14,
                              "column": 20,
                              "offset": 388
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 14,
                          "column": 5,
                          "offset": 373
                        },
                        "end": {
                          "line": 14,
                          "column": 20,
                          "offset": 388
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 14,
                      "column": 1,
                      "offset": 369
                    },
                    "end": {
                      "line": 14,
                      "column": 20,
                      "offset": 388
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "BlendMode.SATURATION",
                          "position": {
                            "start": {
                              "line": 15,
                              "column": 5,
                              "offset": 393
                            },
                            "end": {
                              "line": 15,
                              "column": 27,
                              "offset": 415
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 15,
                          "column": 5,
                          "offset": 393
                        },
                        "end": {
                          "line": 15,
                          "column": 27,
                          "offset": 415
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 15,
                      "column": 1,
                      "offset": 389
                    },
                    "end": {
                      "line": 15,
                      "column": 27,
                      "offset": 415
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "BlendMode.COLOR",
                          "position": {
                            "start": {
                              "line": 16,
                              "column": 5,
                              "offset": 420
                            },
                            "end": {
                              "line": 16,
                              "column": 22,
                              "offset": 437
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 16,
                          "column": 5,
                          "offset": 420
                        },
                        "end": {
                          "line": 16,
                          "column": 22,
                          "offset": 437
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 16,
                      "column": 1,
                      "offset": 416
                    },
                    "end": {
                      "line": 16,
                      "column": 22,
                      "offset": 437
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "BlendMode.LUMINOSITY",
                          "position": {
                            "start": {
                              "line": 17,
                              "column": 5,
                              "offset": 442
                            },
                            "end": {
                              "line": 17,
                              "column": 27,
                              "offset": 464
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 17,
                          "column": 5,
                          "offset": 442
                        },
                        "end": {
                          "line": 17,
                          "column": 27,
                          "offset": 464
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 17,
                      "column": 1,
                      "offset": 438
                    },
                    "end": {
                      "line": 17,
                      "column": 27,
                      "offset": 464
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 2,
                  "column": 1,
                  "offset": 65
                },
                "end": {
                  "line": 17,
                  "column": 27,
                  "offset": 464
                },
                "indent": [
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 17,
              "column": 27,
              "offset": 464
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "blendMode",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "blendMode",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".blendMode"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Creates a new RGB / CMYK color and adds it to the document, or gets a color by name from the document. The default color mode is RGB.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 134,
                  "offset": 133
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 134,
              "offset": 133
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 134,
          "offset": 133
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Creates a new RGB / CMYK color and adds it to the document, or gets a color by name from the document. The default color mode is RGB.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "color"
      },
      {
        "title": "param",
        "description": "color: the color name. Create new color: GRAY,[name] / R,G,B,[name] / C,M,Y,K,[name]. Name is always optional.",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Numbers"
            }
          ]
        },
        "name": "Get"
      },
      {
        "title": "return",
        "description": "Found or new color",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Color"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1032,
        "column": 0
      },
      "end": {
        "line": 1040,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1041,
          "column": 0
        },
        "end": {
          "line": 1167,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "Get",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "color: the color name. Create new color: GRAY,",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 47,
                      "offset": 46
                    },
                    "indent": []
                  }
                },
                {
                  "type": "linkReference",
                  "identifier": "name",
                  "referenceType": "shortcut",
                  "children": [
                    {
                      "type": "text",
                      "value": "name",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 48,
                          "offset": 47
                        },
                        "end": {
                          "line": 1,
                          "column": 52,
                          "offset": 51
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 47,
                      "offset": 46
                    },
                    "end": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " / R,G,B,",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "end": {
                      "line": 1,
                      "column": 62,
                      "offset": 61
                    },
                    "indent": []
                  }
                },
                {
                  "type": "linkReference",
                  "identifier": "name",
                  "referenceType": "shortcut",
                  "children": [
                    {
                      "type": "text",
                      "value": "name",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 63,
                          "offset": 62
                        },
                        "end": {
                          "line": 1,
                          "column": 67,
                          "offset": 66
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 62,
                      "offset": 61
                    },
                    "end": {
                      "line": 1,
                      "column": 68,
                      "offset": 67
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " / C,M,Y,K,",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 68,
                      "offset": 67
                    },
                    "end": {
                      "line": 1,
                      "column": 79,
                      "offset": 78
                    },
                    "indent": []
                  }
                },
                {
                  "type": "linkReference",
                  "identifier": "name",
                  "referenceType": "shortcut",
                  "children": [
                    {
                      "type": "text",
                      "value": "name",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 80,
                          "offset": 79
                        },
                        "end": {
                          "line": 1,
                          "column": 84,
                          "offset": 83
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 79,
                      "offset": 78
                    },
                    "end": {
                      "line": 1,
                      "column": 85,
                      "offset": 84
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ". Name is always optional.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 85,
                      "offset": 84
                    },
                    "end": {
                      "line": 1,
                      "column": 111,
                      "offset": 110
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 111,
                  "offset": 110
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 111,
              "offset": 110
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Numbers"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Found or new color",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Color"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "color",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "color",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".color"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the colormode for creating new colors with color() to RGB or CMYK. The default color mode is RGB.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 103,
                  "offset": 102
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 103,
              "offset": 102
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 103,
          "offset": 102
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Sets the colormode for creating new colors with color() to RGB or CMYK. The default color mode is RGB.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "colorMode"
      },
      {
        "title": "param",
        "description": "RGB or CMYK.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "colorMode"
      }
    ],
    "loc": {
      "start": {
        "line": 1169,
        "column": 0
      },
      "end": {
        "line": 1176,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1177,
          "column": 0
        },
        "end": {
          "line": 1187,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "colorMode",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "RGB or CMYK.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 13,
                      "offset": 12
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 13,
              "offset": 12
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "colorMode",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "colorMode",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".colorMode"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the color or gradient used to fill shapes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 48,
              "offset": 47
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 48,
          "offset": 47
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Sets the color or gradient used to fill shapes.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "fill"
      },
      {
        "title": "param",
        "description": "Accepts a color/gradient/swatch as string name or variable. Or values: GRAY / R,G,B / C,M,Y,K.",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Color"
            },
            {
              "type": "NameExpression",
              "name": "Gradient"
            },
            {
              "type": "NameExpression",
              "name": "Swatch"
            },
            {
              "type": "NameExpression",
              "name": "Numbers"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        },
        "name": "fillColor"
      },
      {
        "title": "param",
        "description": "If created with numbers, a custom swatch name can be given.",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        },
        "name": "name"
      }
    ],
    "loc": {
      "start": {
        "line": 1189,
        "column": 0
      },
      "end": {
        "line": 1197,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1198,
          "column": 0
        },
        "end": {
          "line": 1227,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "fillColor",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Accepts a color/gradient/swatch as string name or variable. Or values: GRAY / R,G,B / C,M,Y,K.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 95,
                      "offset": 94
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 95,
                  "offset": 94
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 95,
              "offset": 94
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Color"
            },
            {
              "type": "NameExpression",
              "name": "Gradient"
            },
            {
              "type": "NameExpression",
              "name": "Swatch"
            },
            {
              "type": "NameExpression",
              "name": "Numbers"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "name",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "If created with numbers, a custom swatch name can be given.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 60,
                      "offset": 59
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 60,
              "offset": 59
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "fill",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "fill",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".fill"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the tint of the color used to fill shapes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 48,
              "offset": 47
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 48,
          "offset": 47
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Sets the tint of the color used to fill shapes.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "fillTint"
      },
      {
        "title": "param",
        "description": "Number from 0 to 100",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "tint"
      }
    ],
    "loc": {
      "start": {
        "line": 1229,
        "column": 0
      },
      "end": {
        "line": 1236,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1237,
          "column": 0
        },
        "end": {
          "line": 1244,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "tint",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Number from 0 to 100",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "fillTint",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "fillTint",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".fillTint"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Creates a new gradient and adds it to the document, or gets a gradient by name from the document.\nIf two colors are given as the first two parameters, a gradient is created that blends between these two colors. If an array of colors is used as the first parameter, a gradient with the contained colors will be created. The colors will be distributed evenly. If additionally to this array a second array of gradient stop positions is given, the colors will be positioned at the given gradient stops. Possible gradient stop positions range from 0 to 100. All parameter options allow for an additional name parameter at the end to name the new gradient. If a string is used as the only parameter, the gradient with that name will be returned, if it exists in the document.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 672,
                  "offset": 769
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 672,
              "offset": 769
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 672,
          "offset": 769
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Creates a new gradient and adds it to the document, or gets a gradient by name from the document.\nIf two colors are given as the first two parameters, a gradient is created that blends between these two colors. If an array of colors is used as the first parameter, a gradient with the contained colors will be created. The colors will be distributed evenly. If additionally to this array a second array of gradient stop positions is given, the colors will be positioned at the given gradient stops. Possible gradient stop positions range from 0 to 100. All parameter options allow for an additional name parameter at the end to name the new gradient. If a string is used as the only parameter, the gradient with that name will be returned, if it exists in the document.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "gradient"
      },
      {
        "title": "param",
        "description": "First color of the gradient. Alternatively: Array of colors/gradients or name of gradient to get.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Color"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        },
        "name": "c1"
      },
      {
        "title": "param",
        "description": "Second color of the gradient. Alternatively: Array of gradient stop positions (if first parameter is an array of colors).",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Color"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        },
        "name": "c2"
      },
      {
        "title": "param",
        "description": "Optional name of the gradient.",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        },
        "name": "name"
      },
      {
        "title": "return",
        "description": "Found or new gradient",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Gradient"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1246,
        "column": 0
      },
      "end": {
        "line": 1257,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1258,
          "column": 0
        },
        "end": {
          "line": 1357,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "c1",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "First color of the gradient. Alternatively: Array of colors/gradients or name of gradient to get.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 98,
                      "offset": 97
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 98,
                  "offset": 97
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 98,
              "offset": 97
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Color"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "c2",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Second color of the gradient. Alternatively: Array of gradient stop positions (if first parameter is an array of colors).",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 122,
                      "offset": 121
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 122,
                  "offset": 121
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 122,
              "offset": 121
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Color"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "name",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional name of the gradient.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Found or new gradient",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Gradient"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "gradient",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "gradient",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".gradient"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the gradient mode for gradient() to ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "LINEAR",
              "position": {
                "start": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "end": {
                  "line": 1,
                  "column": 50,
                  "offset": 49
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " or ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 50,
                  "offset": 49
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "RADIAL",
              "position": {
                "start": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "end": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ". The default gradient mode is ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "end": {
                  "line": 1,
                  "column": 93,
                  "offset": 92
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "LINEAR",
              "position": {
                "start": {
                  "line": 1,
                  "column": 93,
                  "offset": 92
                },
                "end": {
                  "line": 1,
                  "column": 101,
                  "offset": 100
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 101,
                  "offset": 100
                },
                "end": {
                  "line": 1,
                  "column": 102,
                  "offset": 101
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 102,
              "offset": 101
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 102,
          "offset": 101
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Sets the gradient mode for gradient() to `LINEAR` or `RADIAL`. The default gradient mode is `LINEAR`.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "gradientMode"
      },
      {
        "title": "param",
        "description": "`LINEAR` or `RADIAL`.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "gradientMode"
      }
    ],
    "loc": {
      "start": {
        "line": 1359,
        "column": 0
      },
      "end": {
        "line": 1366,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1367,
          "column": 0
        },
        "end": {
          "line": 1377,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "gradientMode",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "LINEAR",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " or ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "end": {
                      "line": 1,
                      "column": 13,
                      "offset": 12
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "RADIAL",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 13,
                      "offset": 12
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "gradientMode",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "gradientMode",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".gradientMode"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates a color or colors between two colors at a specific increment.\nThe ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 5,
                  "offset": 77
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "amt",
              "position": {
                "start": {
                  "line": 2,
                  "column": 5,
                  "offset": 77
                },
                "end": {
                  "line": 2,
                  "column": 10,
                  "offset": 82
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " parameter is the amount to interpolate between the two values where 0.0 equals the first color, 0.5 is half-way in between and 1.0 equals the second color. N.B.: Both colors must be either CMYK or RGB.",
              "position": {
                "start": {
                  "line": 2,
                  "column": 10,
                  "offset": 82
                },
                "end": {
                  "line": 2,
                  "column": 212,
                  "offset": 284
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 212,
              "offset": 284
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 212,
          "offset": 284
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Calculates a color or colors between two colors at a specific increment.\nThe `amt` parameter is the amount to interpolate between the two values where 0.0 equals the first color, 0.5 is half-way in between and 1.0 equals the second color. N.B.: Both colors must be either CMYK or RGB.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "lerpColor"
      },
      {
        "title": "param",
        "description": "Input color 1.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Color"
        },
        "name": "c1"
      },
      {
        "title": "param",
        "description": "Input color 2.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Color"
        },
        "name": "c2"
      },
      {
        "title": "param",
        "description": "The amount to interpolate between the two colors.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "amt"
      },
      {
        "title": "return",
        "description": "Interpolated color",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Color"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1379,
        "column": 0
      },
      "end": {
        "line": 1390,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1391,
          "column": 0
        },
        "end": {
          "line": 1434,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "c1",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Input color 1.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 15,
                      "offset": 14
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 15,
              "offset": 14
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Color"
        }
      },
      {
        "title": "param",
        "name": "c2",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Input color 2.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 15,
                      "offset": 14
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 15,
              "offset": 14
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Color"
        }
      },
      {
        "title": "param",
        "name": "amt",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The amount to interpolate between the two colors.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 50,
                      "offset": 49
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 50,
                  "offset": 49
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 50,
              "offset": 49
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Interpolated color",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Color"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "lerpColor",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "lerpColor",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".lerpColor"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Disables filling geometry. If both ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "noStroke()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "noFill()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "end": {
                  "line": 1,
                  "column": 63,
                  "offset": 62
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " are called, newly drawn shapes will be invisible.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 63,
                  "offset": 62
                },
                "end": {
                  "line": 1,
                  "column": 113,
                  "offset": 112
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 113,
              "offset": 112
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 113,
          "offset": 112
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Disables filling geometry. If both `noStroke()` and `noFill()` are called, newly drawn shapes will be invisible.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "noFill"
      }
    ],
    "loc": {
      "start": {
        "line": 1436,
        "column": 0
      },
      "end": {
        "line": 1441,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1442,
          "column": 0
        },
        "end": {
          "line": 1444,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "noFill",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "noFill",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".noFill"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Disables drawing the stroke. If both noStroke() and noFill() are called, newly drawn shapes will be invisible.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 111,
                  "offset": 110
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 111,
              "offset": 110
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 111,
          "offset": 110
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Disables drawing the stroke. If both noStroke() and noFill() are called, newly drawn shapes will be invisible.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "noStroke"
      }
    ],
    "loc": {
      "start": {
        "line": 1446,
        "column": 0
      },
      "end": {
        "line": 1451,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1452,
          "column": 0
        },
        "end": {
          "line": 1454,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "noStroke",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "noStroke",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".noStroke"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the opacity property of an object.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 40,
              "offset": 39
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 40,
          "offset": 39
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Sets the opacity property of an object.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "opacity"
      },
      {
        "title": "param",
        "description": "The object to set opacity of.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "obj"
      },
      {
        "title": "param",
        "description": "The opacity value from 0 to 100.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opacity"
      }
    ],
    "loc": {
      "start": {
        "line": 1456,
        "column": 0
      },
      "end": {
        "line": 1464,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1465,
          "column": 0
        },
        "end": {
          "line": 1472,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "obj",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The object to set opacity of.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "opacity",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The opacity value from 0 to 100.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "opacity",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "opacity",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".opacity"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the color or gradient used to draw lines and borders around shapes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 73,
                  "offset": 72
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 73,
              "offset": 72
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 73,
          "offset": 72
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Sets the color or gradient used to draw lines and borders around shapes.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "stroke"
      },
      {
        "title": "param",
        "description": "Accepts a color/gradient/swatch as string name or variable. Or values: GRAY / R,G,B / C,M,Y,K.",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Color"
            },
            {
              "type": "NameExpression",
              "name": "Gradient"
            },
            {
              "type": "NameExpression",
              "name": "Swatch"
            },
            {
              "type": "NameExpression",
              "name": "Numbers"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        },
        "name": "strokeColor"
      }
    ],
    "loc": {
      "start": {
        "line": 1474,
        "column": 0
      },
      "end": {
        "line": 1481,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1482,
          "column": 0
        },
        "end": {
          "line": 1510,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "strokeColor",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Accepts a color/gradient/swatch as string name or variable. Or values: GRAY / R,G,B / C,M,Y,K.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 95,
                      "offset": 94
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 95,
                  "offset": 94
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 95,
              "offset": 94
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Color"
            },
            {
              "type": "NameExpression",
              "name": "Gradient"
            },
            {
              "type": "NameExpression",
              "name": "Swatch"
            },
            {
              "type": "NameExpression",
              "name": "Numbers"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "stroke",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "stroke",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".stroke"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the tint of the color used to draw lines and borders around shapes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 73,
                  "offset": 72
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 73,
              "offset": 72
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 73,
          "offset": 72
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Sets the tint of the color used to draw lines and borders around shapes.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "strokeTint"
      },
      {
        "title": "param",
        "description": "Number from 0 to 100.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "tint"
      }
    ],
    "loc": {
      "start": {
        "line": 1512,
        "column": 0
      },
      "end": {
        "line": 1519,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1520,
          "column": 0
        },
        "end": {
          "line": 1527,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "tint",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Number from 0 to 100.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "strokeTint",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "strokeTint",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".strokeTint"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Gets a swatch by name.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 23,
          "offset": 22
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Gets a swatch by name.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "swatch"
      },
      {
        "title": "param",
        "description": "Returns the swatch color/gradient for a given name by string.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "swatchName"
      }
    ],
    "loc": {
      "start": {
        "line": 1529,
        "column": 0
      },
      "end": {
        "line": 1536,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1537,
          "column": 0
        },
        "end": {
          "line": 1553,
          "column": 1
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "swatchName",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns the swatch color/gradient for a given name by string.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 62,
                      "offset": 61
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 62,
              "offset": 61
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "swatch",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "swatch",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".swatch"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Converts a byte, char, int, or color to a String containing the equivalent binary notation. For example ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 105,
                  "offset": 104
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "color(0, 102, 153, 255)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 105,
                  "offset": 104
                },
                "end": {
                  "line": 1,
                  "column": 130,
                  "offset": 129
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " will convert to the String ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 130,
                  "offset": 129
                },
                "end": {
                  "line": 1,
                  "column": 158,
                  "offset": 157
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "\"11111111000000000110011010011001\"",
              "position": {
                "start": {
                  "line": 1,
                  "column": 158,
                  "offset": 157
                },
                "end": {
                  "line": 1,
                  "column": 194,
                  "offset": 193
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ". This function can help make your geeky debugging sessions much happier.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 194,
                  "offset": 193
                },
                "end": {
                  "line": 1,
                  "column": 267,
                  "offset": 266
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 267,
              "offset": 266
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 267,
          "offset": 266
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Converts a byte, char, int, or color to a String containing the equivalent binary notation. For example `color(0, 102, 153, 255)` will convert to the String `\"11111111000000000110011010011001\"`. This function can help make your geeky debugging sessions much happier.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "Conversion",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "binary"
      },
      {
        "title": "param",
        "description": "value to convert",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "num"
      },
      {
        "title": "param",
        "description": "number of digits to return",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "numBits"
      },
      {
        "title": "return",
        "description": "A formatted string",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1597,
        "column": 0
      },
      "end": {
        "line": 1608,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1610,
          "column": 0
        },
        "end": {
          "line": 1623,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "num",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "value to convert",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "numBits",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "number of digits to return",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A formatted string",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "binary",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "binary",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".binary"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Convert a number to a hex representation.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 42,
              "offset": 41
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 42,
          "offset": 41
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Convert a number to a hex representation.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Conversion",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "hex"
      },
      {
        "title": "param",
        "description": "The number to convert",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "value"
      },
      {
        "title": "param",
        "description": "The length of the hex number to be created, default: `8`",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "len"
      },
      {
        "title": "return",
        "description": "The hex representation as a string",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1625,
        "column": 0
      },
      "end": {
        "line": 1635,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1636,
          "column": 0
        },
        "end": {
          "line": 1639,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "value",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The number to convert",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "len",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The length of the hex number to be created, default: ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 54,
                      "offset": 53
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "8",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 54,
                      "offset": 53
                    },
                    "end": {
                      "line": 1,
                      "column": 57,
                      "offset": 56
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 57,
                  "offset": 56
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 57,
              "offset": 56
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The hex representation as a string",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "hex",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "hex",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".hex"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Converts a String representation of a binary number to its equivalent integer value. For example, ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 99,
                  "offset": 98
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "unbinary(\"00001000\")",
              "position": {
                "start": {
                  "line": 1,
                  "column": 99,
                  "offset": 98
                },
                "end": {
                  "line": 1,
                  "column": 121,
                  "offset": 120
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " will return ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 121,
                  "offset": 120
                },
                "end": {
                  "line": 1,
                  "column": 134,
                  "offset": 133
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "8",
              "position": {
                "start": {
                  "line": 1,
                  "column": 134,
                  "offset": 133
                },
                "end": {
                  "line": 1,
                  "column": 137,
                  "offset": 136
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 137,
                  "offset": 136
                },
                "end": {
                  "line": 1,
                  "column": 138,
                  "offset": 137
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 138,
              "offset": 137
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 138,
          "offset": 137
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Converts a String representation of a binary number to its equivalent integer value. For example, `unbinary(\"00001000\")` will return `8`.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Conversion",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "unbinary"
      },
      {
        "title": "param",
        "description": "value to convert",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "binaryString"
      },
      {
        "title": "return",
        "description": "The integer representation",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1641,
        "column": 0
      },
      "end": {
        "line": 1650,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1652,
          "column": 0
        },
        "end": {
          "line": 1663,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "binaryString",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "value to convert",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The integer representation",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "unbinary",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "unbinary",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".unbinary"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Convert a hex representation to a number.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 42,
              "offset": 41
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 42,
          "offset": 41
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Convert a hex representation to a number.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Conversion",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "unhex"
      },
      {
        "title": "param",
        "description": "The hex representation",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "hex"
      },
      {
        "title": "return",
        "description": "The number",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1665,
        "column": 0
      },
      "end": {
        "line": 1674,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1675,
          "column": 0
        },
        "end": {
          "line": 1682,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "hex",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The hex representation",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The number",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 11,
              "offset": 10
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "unhex",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "unhex",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".unhex"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Function parses and validates a string as JSON-object.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 55,
                  "offset": 54
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 55,
              "offset": 54
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 55,
          "offset": 54
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Function parses and validates a string as JSON-object.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "JSON",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "JSON.decode"
      },
      {
        "title": "param",
        "description": "to be parsed as JSON-object.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "String"
      },
      {
        "title": "return",
        "description": "Returns JSON-object or throws an error if invalid JSON has been provided.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "example",
        "description": "var obj = JSON.decode(str);\nvar str = JSON.encode(obj);",
        "lineNumber": 10
      }
    ],
    "loc": {
      "start": {
        "line": 2081,
        "column": 2
      },
      "end": {
        "line": 2094,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2096,
          "column": 2
        },
        "end": {
          "line": 2113,
          "column": 3
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "var obj = JSON.decode(str);\nvar str = JSON.encode(obj);"
      }
    ],
    "params": [
      {
        "title": "param",
        "name": "data",
        "lineNumber": 2096
      },
      {
        "title": "param",
        "name": "String",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "to be parsed as JSON-object.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns JSON-object or throws an error if invalid JSON has been provided.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 74,
                      "offset": 73
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 74,
                  "offset": 73
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 74,
              "offset": 73
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "JSON.decode",
    "memberof": "pub.JSON",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "JSON.decode",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".JSON.decode"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Function convert an javascript object to a JSON-string.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 56,
                  "offset": 55
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 56,
              "offset": 55
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 56,
          "offset": 55
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "JSON",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "JSON.encode"
      },
      {
        "title": "param",
        "description": "to be converted to a JSON-string",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "Object"
      },
      {
        "title": "return",
        "description": "Returns JSON-string",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      },
      {
        "title": "example",
        "description": "var str = JSON.encode(obj);\nvar obj = JSON.decode(str);",
        "lineNumber": 10
      }
    ],
    "loc": {
      "start": {
        "line": 2115,
        "column": 2
      },
      "end": {
        "line": 2128,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2130,
          "column": 2
        },
        "end": {
          "line": 2150,
          "column": 3
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "var str = JSON.encode(obj);\nvar obj = JSON.decode(str);"
      }
    ],
    "params": [
      {
        "title": "param",
        "name": "obj",
        "lineNumber": 2130
      },
      {
        "title": "param",
        "name": "Object",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "to be converted to a JSON-string",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns JSON-string",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "JSON.encode",
    "memberof": "pub.JSON",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "JSON.encode",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".JSON.encode"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Combines an array of Strings into one String, each separated by the character(s) used for the separator parameter. To join arrays of ints or floats, it's necessary to first convert them to strings using ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 204,
                  "offset": 203
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "nf()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 204,
                  "offset": 203
                },
                "end": {
                  "line": 1,
                  "column": 210,
                  "offset": 209
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " or ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 210,
                  "offset": 209
                },
                "end": {
                  "line": 1,
                  "column": 214,
                  "offset": 213
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "nfs()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 214,
                  "offset": 213
                },
                "end": {
                  "line": 1,
                  "column": 221,
                  "offset": 220
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 221,
                  "offset": 220
                },
                "end": {
                  "line": 1,
                  "column": 222,
                  "offset": 221
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 222,
              "offset": 221
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 222,
          "offset": 221
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Combines an array of Strings into one String, each separated by the character(s) used for the separator parameter. To join arrays of ints or floats, it's necessary to first convert them to strings using `nf()` or `nfs()`.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "String Functions",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "join"
      },
      {
        "title": "param",
        "description": "A string array",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        },
        "name": "array"
      },
      {
        "title": "param",
        "description": "The separator to be inserted",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "separator"
      },
      {
        "title": "return",
        "description": "The joined string",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2175,
        "column": 0
      },
      "end": {
        "line": 2185,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2187,
          "column": 0
        },
        "end": {
          "line": 2189,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "array",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A string array",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 15,
                      "offset": 14
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 15,
              "offset": 14
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      },
      {
        "title": "param",
        "name": "separator",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The separator to be inserted",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The joined string",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "join",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "join",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".join"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Utility function for formatting numbers into strings. There are two versions, one for formatting floats and one for formatting ints. The values for the digits, left, and right parameters should always be positive integers.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 223,
                  "offset": 222
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 223,
              "offset": 222
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "inlineCode",
              "value": "nf()",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 224
                },
                "end": {
                  "line": 3,
                  "column": 7,
                  "offset": 230
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is used to add zeros to the left and/or right of a number. This is typically for aligning a list of numbers. To remove digits from a floating-point number, use the ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 7,
                  "offset": 230
                },
                "end": {
                  "line": 3,
                  "column": 172,
                  "offset": 395
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "ceil()",
              "position": {
                "start": {
                  "line": 3,
                  "column": 172,
                  "offset": 395
                },
                "end": {
                  "line": 3,
                  "column": 180,
                  "offset": 403
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 180,
                  "offset": 403
                },
                "end": {
                  "line": 3,
                  "column": 182,
                  "offset": 405
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "floor()",
              "position": {
                "start": {
                  "line": 3,
                  "column": 182,
                  "offset": 405
                },
                "end": {
                  "line": 3,
                  "column": 191,
                  "offset": 414
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", or ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 191,
                  "offset": 414
                },
                "end": {
                  "line": 3,
                  "column": 196,
                  "offset": 419
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "round()",
              "position": {
                "start": {
                  "line": 3,
                  "column": 196,
                  "offset": 419
                },
                "end": {
                  "line": 3,
                  "column": 205,
                  "offset": 428
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " functions.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 205,
                  "offset": 428
                },
                "end": {
                  "line": 3,
                  "column": 216,
                  "offset": 439
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 224
            },
            "end": {
              "line": 3,
              "column": 216,
              "offset": 439
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 216,
          "offset": 439
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Utility function for formatting numbers into strings. There are two versions, one for formatting floats and one for formatting ints. The values for the digits, left, and right parameters should always be positive integers.\n\n`nf()` is used to add zeros to the left and/or right of a number. This is typically for aligning a list of numbers. To remove digits from a floating-point number, use the `ceil()`, `floor()`, or `round()` functions.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 5
      },
      {
        "title": "subcat",
        "description": "String Functions",
        "lineNumber": 6
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 7,
        "name": "nf"
      },
      {
        "title": "param",
        "description": "The Number to convert",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "value"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "leftDigits"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "rightDigits"
      },
      {
        "title": "return",
        "description": "The formatted string",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2191,
        "column": 0
      },
      "end": {
        "line": 2204,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2206,
          "column": 0
        },
        "end": {
          "line": 2208,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "value",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The Number to convert",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "leftDigits",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "rightDigits",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The formatted string",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "nf",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "nf",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".nf"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Utility function for formatting numbers into strings and placing appropriate commas to mark units of 1000. There are two versions, one for formatting ints and one for formatting an array of ints. The value for the digits parameter should always be a positive integer.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 268,
                  "offset": 267
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 268,
              "offset": 267
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 268,
          "offset": 267
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Utility function for formatting numbers into strings and placing appropriate commas to mark units of 1000. There are two versions, one for formatting ints and one for formatting an array of ints. The value for the digits parameter should always be a positive integer.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "String Functions",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "nfc"
      },
      {
        "title": "param",
        "description": "The Number to convert",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "value"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "leftDigits"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "rightDigits"
      },
      {
        "title": "return",
        "description": "The formatted string",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2210,
        "column": 0
      },
      "end": {
        "line": 2221,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2223,
          "column": 0
        },
        "end": {
          "line": 2225,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "value",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The Number to convert",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "leftDigits",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "rightDigits",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The formatted string",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "nfc",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "nfc",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".nfc"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Utility function for formatting numbers into strings. Similar to ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 66,
                  "offset": 65
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "nf()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 66,
                  "offset": 65
                },
                "end": {
                  "line": 1,
                  "column": 72,
                  "offset": 71
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " but puts a ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 72,
                  "offset": 71
                },
                "end": {
                  "line": 1,
                  "column": 84,
                  "offset": 83
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "+",
              "position": {
                "start": {
                  "line": 1,
                  "column": 84,
                  "offset": 83
                },
                "end": {
                  "line": 1,
                  "column": 87,
                  "offset": 86
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " in front of positive numbers and a ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 87,
                  "offset": 86
                },
                "end": {
                  "line": 1,
                  "column": 123,
                  "offset": 122
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "-",
              "position": {
                "start": {
                  "line": 1,
                  "column": 123,
                  "offset": 122
                },
                "end": {
                  "line": 1,
                  "column": 126,
                  "offset": 125
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " in front of negative numbers. There are two versions, one for formatting floats and one for formatting ints. The values for the digits, left, and right parameters should always be positive integers.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 126,
                  "offset": 125
                },
                "end": {
                  "line": 1,
                  "column": 325,
                  "offset": 324
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 325,
              "offset": 324
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 325,
          "offset": 324
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Utility function for formatting numbers into strings. Similar to `nf()` but puts a `+` in front of positive numbers and a `-` in front of negative numbers. There are two versions, one for formatting floats and one for formatting ints. The values for the digits, left, and right parameters should always be positive integers.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "String Functions",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "nfp"
      },
      {
        "title": "param",
        "description": "The Number to convert",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "value"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "leftDigits"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "rightDigits"
      },
      {
        "title": "return",
        "description": "The formatted string",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2227,
        "column": 0
      },
      "end": {
        "line": 2238,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2240,
          "column": 0
        },
        "end": {
          "line": 2242,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "value",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The Number to convert",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "leftDigits",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "rightDigits",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The formatted string",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "nfp",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "nfp",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".nfp"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Utility function for formatting numbers into strings. Similar to ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 66,
                  "offset": 65
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "nf()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 66,
                  "offset": 65
                },
                "end": {
                  "line": 1,
                  "column": 72,
                  "offset": 71
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " but leaves a blank space in front of positive numbers so they align with negative numbers in spite of the minus symbol. There are two versions, one for formatting floats and one for formatting ints. The values for the digits, left, and right parameters should always be positive integers.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 72,
                  "offset": 71
                },
                "end": {
                  "line": 1,
                  "column": 361,
                  "offset": 360
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 361,
              "offset": 360
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 361,
          "offset": 360
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Utility function for formatting numbers into strings. Similar to `nf()` but leaves a blank space in front of positive numbers so they align with negative numbers in spite of the minus symbol. There are two versions, one for formatting floats and one for formatting ints. The values for the digits, left, and right parameters should always be positive integers.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "String Functions",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "nfs"
      },
      {
        "title": "param",
        "description": "The Number to convert",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "value"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "leftDigits"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "rightDigits"
      },
      {
        "title": "return",
        "description": "The formatted string",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2244,
        "column": 0
      },
      "end": {
        "line": 2255,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2257,
          "column": 0
        },
        "end": {
          "line": 2259,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "value",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The Number to convert",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "leftDigits",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "rightDigits",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The formatted string",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "nfs",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "nfs",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".nfs"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "split()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function breaks a string into pieces using a character or string as the divider. The ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "end": {
                  "line": 1,
                  "column": 100,
                  "offset": 99
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "delim",
              "position": {
                "start": {
                  "line": 1,
                  "column": 100,
                  "offset": 99
                },
                "end": {
                  "line": 1,
                  "column": 107,
                  "offset": 106
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " parameter specifies the character or characters that mark the boundaries between each piece. An array of strings is returned that contains each of the pieces.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 107,
                  "offset": 106
                },
                "end": {
                  "line": 1,
                  "column": 266,
                  "offset": 265
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 266,
              "offset": 265
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 267
                },
                "end": {
                  "line": 3,
                  "column": 5,
                  "offset": 271
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "splitTokens()",
              "position": {
                "start": {
                  "line": 3,
                  "column": 5,
                  "offset": 271
                },
                "end": {
                  "line": 3,
                  "column": 20,
                  "offset": 286
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function works in a similar fashion, except that it splits using a range of characters instead of a specific character or sequence.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 20,
                  "offset": 286
                },
                "end": {
                  "line": 3,
                  "column": 152,
                  "offset": 418
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 267
            },
            "end": {
              "line": 3,
              "column": 152,
              "offset": 418
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 152,
          "offset": 418
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "The `split()` function breaks a string into pieces using a character or string as the divider. The `delim` parameter specifies the character or characters that mark the boundaries between each piece. An array of strings is returned that contains each of the pieces.\n\nThe `splitTokens()` function works in a similar fashion, except that it splits using a range of characters instead of a specific character or sequence.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 5
      },
      {
        "title": "subcat",
        "description": "String Functions",
        "lineNumber": 6
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 7,
        "name": "split"
      },
      {
        "title": "param",
        "description": "the String to be split",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "str"
      },
      {
        "title": "param",
        "description": "The string used to separate the data",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        },
        "name": "delim"
      },
      {
        "title": "return",
        "description": "Array of strings",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2261,
        "column": 0
      },
      "end": {
        "line": 2273,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2275,
          "column": 0
        },
        "end": {
          "line": 2277,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "str",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the String to be split",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      },
      {
        "title": "param",
        "name": "delim",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The string used to separate the data",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 37,
              "offset": 36
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array of strings",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "split",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "split",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".split"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "splitTokens()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function splits a string at one or many character \"tokens.\" The tokens parameter specifies the character or characters to be used as a boundary.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "end": {
                  "line": 1,
                  "column": 165,
                  "offset": 164
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 165,
              "offset": 164
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "If no tokens character is specified, any whitespace character is used to split. Whitespace characters include tab (",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 166
                },
                "end": {
                  "line": 3,
                  "column": 116,
                  "offset": 281
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "\\t",
              "position": {
                "start": {
                  "line": 3,
                  "column": 116,
                  "offset": 281
                },
                "end": {
                  "line": 3,
                  "column": 120,
                  "offset": 285
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "), line feed (",
              "position": {
                "start": {
                  "line": 3,
                  "column": 120,
                  "offset": 285
                },
                "end": {
                  "line": 3,
                  "column": 134,
                  "offset": 299
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "\\n",
              "position": {
                "start": {
                  "line": 3,
                  "column": 134,
                  "offset": 299
                },
                "end": {
                  "line": 3,
                  "column": 138,
                  "offset": 303
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "), carriage return (",
              "position": {
                "start": {
                  "line": 3,
                  "column": 138,
                  "offset": 303
                },
                "end": {
                  "line": 3,
                  "column": 158,
                  "offset": 323
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "\\r",
              "position": {
                "start": {
                  "line": 3,
                  "column": 158,
                  "offset": 323
                },
                "end": {
                  "line": 3,
                  "column": 162,
                  "offset": 327
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "), form feed (",
              "position": {
                "start": {
                  "line": 3,
                  "column": 162,
                  "offset": 327
                },
                "end": {
                  "line": 3,
                  "column": 176,
                  "offset": 341
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "\\f",
              "position": {
                "start": {
                  "line": 3,
                  "column": 176,
                  "offset": 341
                },
                "end": {
                  "line": 3,
                  "column": 180,
                  "offset": 345
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "), and space.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 180,
                  "offset": 345
                },
                "end": {
                  "line": 3,
                  "column": 193,
                  "offset": 358
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 166
            },
            "end": {
              "line": 3,
              "column": 193,
              "offset": 358
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 193,
          "offset": 358
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "The `splitTokens()` function splits a string at one or many character \"tokens.\" The tokens parameter specifies the character or characters to be used as a boundary.\n\nIf no tokens character is specified, any whitespace character is used to split. Whitespace characters include tab (`\\t`), line feed (`\\n`), carriage return (`\\r`), form feed (`\\f`), and space.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 5
      },
      {
        "title": "subcat",
        "description": "String Functions",
        "lineNumber": 6
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 7,
        "name": "splitTokens"
      },
      {
        "title": "param",
        "description": "the String to be split",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "str"
      },
      {
        "title": "param",
        "description": "list of individual characters that will be used as separators",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        },
        "name": "tokens"
      },
      {
        "title": "return",
        "description": "Array of strings",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2279,
        "column": 0
      },
      "end": {
        "line": 2291,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2293,
          "column": 0
        },
        "end": {
          "line": 2311,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "str",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the String to be split",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      },
      {
        "title": "param",
        "name": "tokens",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "list of individual characters that will be used as separators",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 62,
                      "offset": 61
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 62,
              "offset": 61
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array of strings",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "splitTokens",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "splitTokens",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".splitTokens"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Removes whitespace characters from the beginning and end of a String. In addition to standard whitespace characters such as space, carriage return, and tab, this function also removes the Unicode \"nbsp\" character.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 214,
                  "offset": 213
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 214,
              "offset": 213
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 214,
          "offset": 213
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Removes whitespace characters from the beginning and end of a String. In addition to standard whitespace characters such as space, carriage return, and tab, this function also removes the Unicode \"nbsp\" character.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "String Functions",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "trim"
      },
      {
        "title": "param",
        "description": "A string or an array of strings to be trimmed",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        },
        "name": "str"
      },
      {
        "title": "return",
        "description": "Returns the input in a trimmed way",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2331,
        "column": 0
      },
      "end": {
        "line": 2340,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2342,
          "column": 0
        },
        "end": {
          "line": 2349,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "str",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A string or an array of strings to be trimmed",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns the input in a trimmed way",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "trim",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "trim",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".trim"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Removes multiple, leading or trailing spaces and punctuation from \"words\". E.g. converts ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 90,
                  "offset": 89
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "\"word!\"",
              "position": {
                "start": {
                  "line": 1,
                  "column": 90,
                  "offset": 89
                },
                "end": {
                  "line": 1,
                  "column": 99,
                  "offset": 98
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " to ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 99,
                  "offset": 98
                },
                "end": {
                  "line": 1,
                  "column": 103,
                  "offset": 102
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "\"word\"",
              "position": {
                "start": {
                  "line": 1,
                  "column": 103,
                  "offset": 102
                },
                "end": {
                  "line": 1,
                  "column": 111,
                  "offset": 110
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ". Especially useful together with ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 111,
                  "offset": 110
                },
                "end": {
                  "line": 1,
                  "column": 145,
                  "offset": 144
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "words()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 145,
                  "offset": 144
                },
                "end": {
                  "line": 1,
                  "column": 154,
                  "offset": 153
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ";",
              "position": {
                "start": {
                  "line": 1,
                  "column": 154,
                  "offset": 153
                },
                "end": {
                  "line": 1,
                  "column": 155,
                  "offset": 154
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 155,
              "offset": 154
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 155,
          "offset": 154
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Removes multiple, leading or trailing spaces and punctuation from \"words\". E.g. converts `\"word!\"` to `\"word\"`. Especially useful together with `words()`;",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "String Functions",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "trimWord"
      },
      {
        "title": "param",
        "description": "The String to trim",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "s"
      },
      {
        "title": "return",
        "description": "The trimmed string",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2351,
        "column": 0
      },
      "end": {
        "line": 2360,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2362,
          "column": 0
        },
        "end": {
          "line": 2367,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "s",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The String to trim",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The trimmed string",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "trimWord",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "trimWord",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".trimWord"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Removes all page items (including locked ones) in the given Document, Page, Layer or Group. If the selected container is a group, the group itself will be removed as well.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 172,
                  "offset": 171
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 172,
              "offset": 171
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 172,
          "offset": 171
        }
      }
    },
    "tags": [
      {
        "title": "summary",
        "description": "Removes all page items (including locked ones) in the given Document, Page, Layer or Group.",
        "lineNumber": 1
      },
      {
        "title": "description",
        "description": "Removes all page items (including locked ones) in the given Document, Page, Layer or Group. If the selected container is a group, the group itself will be removed as well.",
        "lineNumber": 2
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "clear"
      },
      {
        "title": "param",
        "description": "The container where the PageItems sit in.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            },
            {
              "type": "NameExpression",
              "name": "Group"
            }
          ]
        },
        "name": "container"
      }
    ],
    "loc": {
      "start": {
        "line": 2571,
        "column": 0
      },
      "end": {
        "line": 2579,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2580,
          "column": 0
        },
        "end": {
          "line": 2597,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "container",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The container where the PageItems sit in.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 42,
                      "offset": 41
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 42,
              "offset": 41
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            },
            {
              "type": "NameExpression",
              "name": "Group"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "summary": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Removes all page items (including locked ones) in the given Document, Page, Layer or Group.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 92,
                  "offset": 91
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 92,
              "offset": 91
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 92,
          "offset": 91
        }
      }
    },
    "kind": "function",
    "name": "clear",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "clear",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".clear"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Closes the current document. If no ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "saveOptions",
              "position": {
                "start": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " argument is used, the user will be asked if they want to save or not.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "end": {
                  "line": 1,
                  "column": 119,
                  "offset": 118
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 119,
              "offset": 118
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 119,
          "offset": 118
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Closes the current document. If no `saveOptions` argument is used, the user will be asked if they want to save or not.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "close"
      },
      {
        "title": "param",
        "description": "The InDesign SaveOptions constant or either true for triggering saving before closing or false for closing without saving.",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Object"
              },
              {
                "type": "NameExpression",
                "name": "Boolean"
              }
            ]
          }
        },
        "name": "saveOptions"
      },
      {
        "title": "param",
        "description": "The InDesign file instance to save the document to.",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "File"
          }
        },
        "name": "file"
      }
    ],
    "loc": {
      "start": {
        "line": 2599,
        "column": 0
      },
      "end": {
        "line": 2607,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2608,
          "column": 0
        },
        "end": {
          "line": 2632,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "saveOptions",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The InDesign SaveOptions constant or either true for triggering saving before closing or false for closing without saving.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 123,
                      "offset": 122
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 123,
                  "offset": 122
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 123,
              "offset": 122
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Object"
              },
              {
                "type": "NameExpression",
                "name": "Boolean"
              }
            ]
          }
        }
      },
      {
        "title": "param",
        "name": "file",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The InDesign file instance to save the document to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 52,
                      "offset": 51
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 52,
                  "offset": 51
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 52,
              "offset": 51
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "File"
          }
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "close",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "close",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".close"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets or possibly creates the current document and returns it. If the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 70,
                  "offset": 69
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "doc",
              "position": {
                "start": {
                  "line": 1,
                  "column": 70,
                  "offset": 69
                },
                "end": {
                  "line": 1,
                  "column": 75,
                  "offset": 74
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " parameter is not given, the current document gets set to the active document in the application. If no document at all is open, a new document gets created.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 75,
                  "offset": 74
                },
                "end": {
                  "line": 1,
                  "column": 232,
                  "offset": 231
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 232,
              "offset": 231
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 232,
          "offset": 231
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Sets or possibly creates the current document and returns it. If the `doc` parameter is not given, the current document gets set to the active document in the application. If no document at all is open, a new document gets created.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "doc"
      },
      {
        "title": "param",
        "description": "The document to set the current document to.",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Document"
          }
        },
        "name": "doc"
      },
      {
        "title": "return",
        "description": "The current document instance.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Document"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2634,
        "column": 0
      },
      "end": {
        "line": 2642,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2643,
          "column": 0
        },
        "end": {
          "line": 2650,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "doc",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The document to set the current document to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 45,
                      "offset": 44
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 45,
                  "offset": 44
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 45,
              "offset": 44
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Document"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current document instance.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Document"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "doc",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "doc",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".doc"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the current layer if no argument is given. Sets active layer if layer object or name of existing layer is given. Newly creates layer and sets it to active if new name is given.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 185,
                  "offset": 184
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 185,
              "offset": 184
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 185,
          "offset": 184
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns the current layer if no argument is given. Sets active layer if layer object or name of existing layer is given. Newly creates layer and sets it to active if new name is given.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "layer"
      },
      {
        "title": "param",
        "description": "The layer or layer name to set the current layer to.",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Layer"
              },
              {
                "type": "NameExpression",
                "name": "String"
              }
            ]
          }
        },
        "name": "layer"
      },
      {
        "title": "return",
        "description": "The current layer instance.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Layer"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2652,
        "column": 0
      },
      "end": {
        "line": 2660,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2661,
          "column": 0
        },
        "end": {
          "line": 2678,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "layer",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The layer or layer name to set the current layer to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 53,
              "offset": 52
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Layer"
              },
              {
                "type": "NameExpression",
                "name": "String"
              }
            ]
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current layer instance.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Layer"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "layer",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "layer",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".layer"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the reference point for transformations using the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 56,
                  "offset": 55
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "transform()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 56,
                  "offset": 55
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function. The reference point will be used for all following transformations, until it is changed again. By default, the reference point is set to the top left.\nArguments can be the basil constants ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "end": {
                  "line": 2,
                  "column": 38,
                  "offset": 267
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "TOP_LEFT",
              "position": {
                "start": {
                  "line": 2,
                  "column": 38,
                  "offset": 267
                },
                "end": {
                  "line": 2,
                  "column": 48,
                  "offset": 277
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 48,
                  "offset": 277
                },
                "end": {
                  "line": 2,
                  "column": 50,
                  "offset": 279
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "TOP_CENTER",
              "position": {
                "start": {
                  "line": 2,
                  "column": 50,
                  "offset": 279
                },
                "end": {
                  "line": 2,
                  "column": 62,
                  "offset": 291
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 62,
                  "offset": 291
                },
                "end": {
                  "line": 2,
                  "column": 64,
                  "offset": 293
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "TOP_RIGHT",
              "position": {
                "start": {
                  "line": 2,
                  "column": 64,
                  "offset": 293
                },
                "end": {
                  "line": 2,
                  "column": 75,
                  "offset": 304
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 75,
                  "offset": 304
                },
                "end": {
                  "line": 2,
                  "column": 77,
                  "offset": 306
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "CENTER_LEFT",
              "position": {
                "start": {
                  "line": 2,
                  "column": 77,
                  "offset": 306
                },
                "end": {
                  "line": 2,
                  "column": 90,
                  "offset": 319
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 90,
                  "offset": 319
                },
                "end": {
                  "line": 2,
                  "column": 92,
                  "offset": 321
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "CENTER",
              "position": {
                "start": {
                  "line": 2,
                  "column": 92,
                  "offset": 321
                },
                "end": {
                  "line": 2,
                  "column": 100,
                  "offset": 329
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 100,
                  "offset": 329
                },
                "end": {
                  "line": 2,
                  "column": 102,
                  "offset": 331
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "CENTER_RIGHT",
              "position": {
                "start": {
                  "line": 2,
                  "column": 102,
                  "offset": 331
                },
                "end": {
                  "line": 2,
                  "column": 116,
                  "offset": 345
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 116,
                  "offset": 345
                },
                "end": {
                  "line": 2,
                  "column": 118,
                  "offset": 347
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "BOTTOM_LEFT",
              "position": {
                "start": {
                  "line": 2,
                  "column": 118,
                  "offset": 347
                },
                "end": {
                  "line": 2,
                  "column": 131,
                  "offset": 360
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 131,
                  "offset": 360
                },
                "end": {
                  "line": 2,
                  "column": 133,
                  "offset": 362
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "BOTTOM_CENTER",
              "position": {
                "start": {
                  "line": 2,
                  "column": 133,
                  "offset": 362
                },
                "end": {
                  "line": 2,
                  "column": 148,
                  "offset": 377
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " or ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 148,
                  "offset": 377
                },
                "end": {
                  "line": 2,
                  "column": 152,
                  "offset": 381
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "BOTTOM_RIGHT",
              "position": {
                "start": {
                  "line": 2,
                  "column": 152,
                  "offset": 381
                },
                "end": {
                  "line": 2,
                  "column": 166,
                  "offset": 395
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ". Alternatively the digits ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 166,
                  "offset": 395
                },
                "end": {
                  "line": 2,
                  "column": 193,
                  "offset": 422
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "1",
              "position": {
                "start": {
                  "line": 2,
                  "column": 193,
                  "offset": 422
                },
                "end": {
                  "line": 2,
                  "column": 196,
                  "offset": 425
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " through ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 196,
                  "offset": 425
                },
                "end": {
                  "line": 2,
                  "column": 205,
                  "offset": 434
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "9",
              "position": {
                "start": {
                  "line": 2,
                  "column": 205,
                  "offset": 434
                },
                "end": {
                  "line": 2,
                  "column": 208,
                  "offset": 437
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " (as they are arranged on a num pad) can be used to set the anchor point. Lastly the function can also use an InDesign anchor point enumerator to set the reference point.\nIf the function is used without any arguments the currently set reference point will be returned.",
              "position": {
                "start": {
                  "line": 2,
                  "column": 208,
                  "offset": 437
                },
                "end": {
                  "line": 3,
                  "column": 98,
                  "offset": 705
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 98,
              "offset": 705
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 98,
          "offset": 705
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Sets the reference point for transformations using the `transform()` function. The reference point will be used for all following transformations, until it is changed again. By default, the reference point is set to the top left.\nArguments can be the basil constants `TOP_LEFT`, `TOP_CENTER`, `TOP_RIGHT`, `CENTER_LEFT`, `CENTER`, `CENTER_RIGHT`, `BOTTOM_LEFT`, `BOTTOM_CENTER` or `BOTTOM_RIGHT`. Alternatively the digits `1` through `9` (as they are arranged on a num pad) can be used to set the anchor point. Lastly the function can also use an InDesign anchor point enumerator to set the reference point.\nIf the function is used without any arguments the currently set reference point will be returned.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "referencePoint"
      },
      {
        "title": "param",
        "description": "The reference point to set.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        },
        "name": "referencePoint"
      },
      {
        "title": "return",
        "description": "Current reference point setting.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2680,
        "column": 0
      },
      "end": {
        "line": 2690,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2691,
          "column": 0
        },
        "end": {
          "line": 2734,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "rp",
        "lineNumber": 2691
      },
      {
        "title": "param",
        "name": "referencePoint",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The reference point to set.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Current reference point setting.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "referencePoint",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "referencePoint",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".referencePoint"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Removes the provided Page, Layer, PageItem, Swatch, etc.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 57,
                  "offset": 56
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 57,
              "offset": 56
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 57,
          "offset": 56
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Removes the provided Page, Layer, PageItem, Swatch, etc.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "remove"
      },
      {
        "title": "param",
        "description": "The object to be removed.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        },
        "name": "obj"
      }
    ],
    "loc": {
      "start": {
        "line": 2736,
        "column": 0
      },
      "end": {
        "line": 2743,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2744,
          "column": 0
        },
        "end": {
          "line": 2751,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "obj",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The object to be removed.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 26,
                  "offset": 25
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 26,
              "offset": 25
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "remove",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "remove",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".remove"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Reverts the document to its last saved state. If the current document is not saved yet, this function will close the document without saving it and reopen a fresh document so as to \"revert\" the unsaved document. This function is helpful during development stage to start from a new or default document each time the script is run.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 331,
                  "offset": 330
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 331,
              "offset": 330
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 331,
          "offset": 330
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Reverts the document to its last saved state. If the current document is not saved yet, this function will close the document without saving it and reopen a fresh document so as to \"revert\" the unsaved document. This function is helpful during development stage to start from a new or default document each time the script is run.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "revert"
      },
      {
        "title": "return",
        "description": "The reverted document.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Document"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2753,
        "column": 0
      },
      "end": {
        "line": 2760,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2761,
          "column": 0
        },
        "end": {
          "line": 2781,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The reverted document.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Document"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "revert",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "revert",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".revert"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the document bleeds. If one value is given, all 4 are set equally. If 4 values are given, the top/right/bottom/left document bleeds will be adjusted. Calling the function without any values, will return the document bleed settings.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 237,
                  "offset": 236
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 237,
              "offset": 236
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 237,
          "offset": 236
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Sets the document bleeds. If one value is given, all 4 are set equally. If 4 values are given, the top/right/bottom/left document bleeds will be adjusted. Calling the function without any values, will return the document bleed settings.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Canvas",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "bleeds"
      },
      {
        "title": "param",
        "description": "Top bleed or all if only one.",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "top"
      },
      {
        "title": "param",
        "description": "Right bleed.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "right"
      },
      {
        "title": "param",
        "description": "Bottom bleed.",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "bottom"
      },
      {
        "title": "param",
        "description": "Left bleed.",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "left"
      },
      {
        "title": "return",
        "description": "Current document bleeds settings.",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2840,
        "column": 0
      },
      "end": {
        "line": 2852,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2853,
          "column": 0
        },
        "end": {
          "line": 2869,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "top",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Top bleed or all if only one.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "title": "param",
        "name": "right",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Right bleed.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 13,
                      "offset": 12
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 13,
              "offset": 12
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "title": "param",
        "name": "bottom",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Bottom bleed.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 14,
              "offset": 13
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "title": "param",
        "name": "left",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Left bleed.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 12,
              "offset": 11
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Current document bleeds settings.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 34,
              "offset": 33
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "bleeds",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "bleeds",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".bleeds"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Use this to set the dimensions of the canvas. Choose between ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "PAGE",
              "position": {
                "start": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "end": {
                  "line": 1,
                  "column": 68,
                  "offset": 67
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " (default), ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 68,
                  "offset": 67
                },
                "end": {
                  "line": 1,
                  "column": 80,
                  "offset": 79
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "MARGIN",
              "position": {
                "start": {
                  "line": 1,
                  "column": 80,
                  "offset": 79
                },
                "end": {
                  "line": 1,
                  "column": 88,
                  "offset": 87
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 88,
                  "offset": 87
                },
                "end": {
                  "line": 1,
                  "column": 90,
                  "offset": 89
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "BLEED",
              "position": {
                "start": {
                  "line": 1,
                  "column": 90,
                  "offset": 89
                },
                "end": {
                  "line": 1,
                  "column": 97,
                  "offset": 96
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " resp. ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 97,
                  "offset": 96
                },
                "end": {
                  "line": 1,
                  "column": 104,
                  "offset": 103
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "FACING_PAGES",
              "position": {
                "start": {
                  "line": 1,
                  "column": 104,
                  "offset": 103
                },
                "end": {
                  "line": 1,
                  "column": 118,
                  "offset": 117
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 118,
                  "offset": 117
                },
                "end": {
                  "line": 1,
                  "column": 120,
                  "offset": 119
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "FACING_MARGINS",
              "position": {
                "start": {
                  "line": 1,
                  "column": 120,
                  "offset": 119
                },
                "end": {
                  "line": 1,
                  "column": 136,
                  "offset": 135
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 136,
                  "offset": 135
                },
                "end": {
                  "line": 1,
                  "column": 141,
                  "offset": 140
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "FACING_BLEEDS",
              "position": {
                "start": {
                  "line": 1,
                  "column": 141,
                  "offset": 140
                },
                "end": {
                  "line": 1,
                  "column": 156,
                  "offset": 155
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " for book setups with facing page. Please note: Setups with more than two facing pages are not yet supported.\nPlease note that you will loose your current MatrixTransformation. You should set the canvasMode before you attempt to use ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 156,
                  "offset": 155
                },
                "end": {
                  "line": 2,
                  "column": 124,
                  "offset": 388
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "translate()",
              "position": {
                "start": {
                  "line": 2,
                  "column": 124,
                  "offset": 388
                },
                "end": {
                  "line": 2,
                  "column": 137,
                  "offset": 401
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 137,
                  "offset": 401
                },
                "end": {
                  "line": 2,
                  "column": 139,
                  "offset": 403
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "rotate()",
              "position": {
                "start": {
                  "line": 2,
                  "column": 139,
                  "offset": 403
                },
                "end": {
                  "line": 2,
                  "column": 149,
                  "offset": 413
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 149,
                  "offset": 413
                },
                "end": {
                  "line": 2,
                  "column": 154,
                  "offset": 418
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "scale()",
              "position": {
                "start": {
                  "line": 2,
                  "column": 154,
                  "offset": 418
                },
                "end": {
                  "line": 2,
                  "column": 163,
                  "offset": 427
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 2,
                  "column": 163,
                  "offset": 427
                },
                "end": {
                  "line": 2,
                  "column": 164,
                  "offset": 428
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 164,
              "offset": 428
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 164,
          "offset": 428
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Use this to set the dimensions of the canvas. Choose between `PAGE` (default), `MARGIN`, `BLEED` resp. `FACING_PAGES`, `FACING_MARGINS` and `FACING_BLEEDS` for book setups with facing page. Please note: Setups with more than two facing pages are not yet supported.\nPlease note that you will loose your current MatrixTransformation. You should set the canvasMode before you attempt to use `translate()`, `rotate()` and `scale()`.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "Canvas",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "canvasMode"
      },
      {
        "title": "param",
        "description": "The canvas mode to set.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "mode"
      },
      {
        "title": "return",
        "description": "The current canvas mode.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2871,
        "column": 0
      },
      "end": {
        "line": 2881,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2882,
          "column": 0
        },
        "end": {
          "line": 2897,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "m",
        "lineNumber": 2882
      },
      {
        "title": "param",
        "name": "mode",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The canvas mode to set.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current canvas mode.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "canvasMode",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "canvasMode",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".canvasMode"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Creates a vertical guide line at the current spread and current layer.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 71,
                  "offset": 70
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 71,
              "offset": 70
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 71,
          "offset": 70
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Creates a vertical guide line at the current spread and current layer.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Canvas",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "guideX"
      },
      {
        "title": "param",
        "description": "Position of the new guide line.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x"
      },
      {
        "title": "return",
        "description": "New guide line.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Guide"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2899,
        "column": 0
      },
      "end": {
        "line": 2908,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2909,
          "column": 0
        },
        "end": {
          "line": 2917,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Position of the new guide line.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "New guide line.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 16,
              "offset": 15
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Guide"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "guideX",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "guideX",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".guideX"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Creates a horizontal guide line at the current spread and current layer.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 73,
                  "offset": 72
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 73,
              "offset": 72
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 73,
          "offset": 72
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Creates a horizontal guide line at the current spread and current layer.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Canvas",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "guideY"
      },
      {
        "title": "param",
        "description": "Position of the new guide line.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y"
      },
      {
        "title": "return",
        "description": "New guide line.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Guide"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2919,
        "column": 0
      },
      "end": {
        "line": 2928,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2929,
          "column": 0
        },
        "end": {
          "line": 2937,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "y",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Position of the new guide line.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "New guide line.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 16,
              "offset": 15
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Guide"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "guideY",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "guideY",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".guideY"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the margins of a given page. If 1 value is given, all 4 sides are set equally. If 4 values are given, the current page will be adjusted. Adding a 5th value will set the margin of a given page. Calling the function without any values, will return the margins for the current page.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 285,
                  "offset": 284
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 285,
              "offset": 284
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 285,
          "offset": 284
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Sets the margins of a given page. If 1 value is given, all 4 sides are set equally. If 4 values are given, the current page will be adjusted. Adding a 5th value will set the margin of a given page. Calling the function without any values, will return the margins for the current page.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Canvas",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "margins"
      },
      {
        "title": "param",
        "description": "Top margin or all if only one.",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "top"
      },
      {
        "title": "param",
        "description": "Right margin.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "right"
      },
      {
        "title": "param",
        "description": "Bottom margin.",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "bottom"
      },
      {
        "title": "param",
        "description": "Left margin.",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "left"
      },
      {
        "title": "param",
        "description": "Sets margins to selected page, currentPage() if left blank.",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "pageNumber"
      },
      {
        "title": "return",
        "description": "Current page margins with the properties: `top`, `right`, `bottom`, `left`.",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2939,
        "column": 0
      },
      "end": {
        "line": 2952,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2953,
          "column": 0
        },
        "end": {
          "line": 2974,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "top",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Top margin or all if only one.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "title": "param",
        "name": "right",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Right margin.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 14,
              "offset": 13
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "title": "param",
        "name": "bottom",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Bottom margin.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 15,
                      "offset": 14
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 15,
              "offset": 14
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "title": "param",
        "name": "left",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Left margin.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 13,
                      "offset": 12
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 13,
              "offset": 12
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "title": "param",
        "name": "pageNumber",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Sets margins to selected page, currentPage() if left blank.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 60,
                      "offset": 59
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 60,
              "offset": 59
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Current page margins with the properties: ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "top",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "end": {
                      "line": 1,
                      "column": 48,
                      "offset": 47
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 48,
                      "offset": 47
                    },
                    "end": {
                      "line": 1,
                      "column": 50,
                      "offset": 49
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "right",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 50,
                      "offset": 49
                    },
                    "end": {
                      "line": 1,
                      "column": 57,
                      "offset": 56
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 57,
                      "offset": 56
                    },
                    "end": {
                      "line": 1,
                      "column": 59,
                      "offset": 58
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "bottom",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 59,
                      "offset": 58
                    },
                    "end": {
                      "line": 1,
                      "column": 67,
                      "offset": 66
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 67,
                      "offset": 66
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "left",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "end": {
                      "line": 1,
                      "column": 75,
                      "offset": 74
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 75,
                      "offset": 74
                    },
                    "end": {
                      "line": 1,
                      "column": 76,
                      "offset": 75
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 76,
                  "offset": 75
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 76,
              "offset": 75
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "margins",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "margins",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".margins"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the current horizontal and vertical pasteboard margins and sets them if both arguements are given.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 107,
                  "offset": 106
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 107,
              "offset": 106
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 107,
          "offset": 106
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns the current horizontal and vertical pasteboard margins and sets them if both arguements are given.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Canvas",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "pasteboard"
      },
      {
        "title": "param",
        "description": "The desired horizontal pasteboard margin.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "h"
      },
      {
        "title": "param",
        "description": "The desired vertical pasteboard margin.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "v"
      },
      {
        "title": "return",
        "description": "The current horizontal, vertical pasteboard margins.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2976,
        "column": 0
      },
      "end": {
        "line": 2986,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2987,
          "column": 0
        },
        "end": {
          "line": 2998,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "h",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The desired horizontal pasteboard margin.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 42,
                      "offset": 41
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 42,
              "offset": 41
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "v",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The desired vertical pasteboard margin.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 40,
              "offset": 39
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current horizontal, vertical pasteboard margins.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 53,
              "offset": 52
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "pasteboard",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "pasteboard",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".pasteboard"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Adds a new page to the document. Set the optional location parameter to either ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 80,
                  "offset": 79
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "AT_END",
              "position": {
                "start": {
                  "line": 1,
                  "column": 80,
                  "offset": 79
                },
                "end": {
                  "line": 1,
                  "column": 88,
                  "offset": 87
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " (default), ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 88,
                  "offset": 87
                },
                "end": {
                  "line": 1,
                  "column": 100,
                  "offset": 99
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "AT_BEGINNING",
              "position": {
                "start": {
                  "line": 1,
                  "column": 100,
                  "offset": 99
                },
                "end": {
                  "line": 1,
                  "column": 114,
                  "offset": 113
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 114,
                  "offset": 113
                },
                "end": {
                  "line": 1,
                  "column": 116,
                  "offset": 115
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "AFTER",
              "position": {
                "start": {
                  "line": 1,
                  "column": 116,
                  "offset": 115
                },
                "end": {
                  "line": 1,
                  "column": 123,
                  "offset": 122
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " or ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 123,
                  "offset": 122
                },
                "end": {
                  "line": 1,
                  "column": 127,
                  "offset": 126
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "BEFORE",
              "position": {
                "start": {
                  "line": 1,
                  "column": 127,
                  "offset": 126
                },
                "end": {
                  "line": 1,
                  "column": 135,
                  "offset": 134
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ". ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 135,
                  "offset": 134
                },
                "end": {
                  "line": 1,
                  "column": 137,
                  "offset": 136
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "AFTER",
              "position": {
                "start": {
                  "line": 1,
                  "column": 137,
                  "offset": 136
                },
                "end": {
                  "line": 1,
                  "column": 144,
                  "offset": 143
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 144,
                  "offset": 143
                },
                "end": {
                  "line": 1,
                  "column": 149,
                  "offset": 148
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "BEFORE",
              "position": {
                "start": {
                  "line": 1,
                  "column": 149,
                  "offset": 148
                },
                "end": {
                  "line": 1,
                  "column": 157,
                  "offset": 156
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " will use the current page as insertion point.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 157,
                  "offset": 156
                },
                "end": {
                  "line": 1,
                  "column": 203,
                  "offset": 202
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 203,
              "offset": 202
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 203,
          "offset": 202
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Adds a new page to the document. Set the optional location parameter to either `AT_END` (default), `AT_BEGINNING`, `AFTER` or `BEFORE`. `AFTER` and `BEFORE` will use the current page as insertion point.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "addPage"
      },
      {
        "title": "param",
        "description": "The location placement mode.",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        },
        "name": "location"
      },
      {
        "title": "return",
        "description": "The new page.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Page"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3004,
        "column": 0
      },
      "end": {
        "line": 3013,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3014,
          "column": 0
        },
        "end": {
          "line": 3028,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "location",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The location placement mode.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The new page.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 14,
              "offset": 13
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Page"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "addPage",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "addPage",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".addPage"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Applies a master page to the given page.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 41,
              "offset": 40
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 42
                },
                "end": {
                  "line": 3,
                  "column": 5,
                  "offset": 46
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "page",
              "position": {
                "start": {
                  "line": 3,
                  "column": 5,
                  "offset": 46
                },
                "end": {
                  "line": 3,
                  "column": 11,
                  "offset": 52
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " parameter can be given as a page object, as a page name or as a page number (numbering starts at 1).",
              "position": {
                "start": {
                  "line": 3,
                  "column": 11,
                  "offset": 52
                },
                "end": {
                  "line": 3,
                  "column": 112,
                  "offset": 153
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 42
            },
            "end": {
              "line": 3,
              "column": 112,
              "offset": 153
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The ",
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 155
                },
                "end": {
                  "line": 5,
                  "column": 5,
                  "offset": 159
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "master",
              "position": {
                "start": {
                  "line": 5,
                  "column": 5,
                  "offset": 159
                },
                "end": {
                  "line": 5,
                  "column": 13,
                  "offset": 167
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " parameter can be given as a master spread object or as a string. If a string is used, it can either hold the master page prefix (e.g \"A\", \"B\") or the full name ",
              "position": {
                "start": {
                  "line": 5,
                  "column": 13,
                  "offset": 167
                },
                "end": {
                  "line": 5,
                  "column": 174,
                  "offset": 328
                },
                "indent": []
              }
            },
            {
              "type": "emphasis",
              "children": [
                {
                  "type": "text",
                  "value": "including",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 175,
                      "offset": 329
                    },
                    "end": {
                      "line": 5,
                      "column": 184,
                      "offset": 338
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 174,
                  "offset": 328
                },
                "end": {
                  "line": 5,
                  "column": 185,
                  "offset": 339
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " the prefix (e.g \"A-Master\", \"B-Master\"). The latter is useful, if there are several masters using the same prefix. Alternatively, the constant ",
              "position": {
                "start": {
                  "line": 5,
                  "column": 185,
                  "offset": 339
                },
                "end": {
                  "line": 5,
                  "column": 329,
                  "offset": 483
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "NONE",
              "position": {
                "start": {
                  "line": 5,
                  "column": 329,
                  "offset": 483
                },
                "end": {
                  "line": 5,
                  "column": 335,
                  "offset": 489
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " can be used to apply InDesign's ",
              "position": {
                "start": {
                  "line": 5,
                  "column": 335,
                  "offset": 489
                },
                "end": {
                  "line": 5,
                  "column": 368,
                  "offset": 522
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "[none]",
              "position": {
                "start": {
                  "line": 5,
                  "column": 368,
                  "offset": 522
                },
                "end": {
                  "line": 5,
                  "column": 376,
                  "offset": 530
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " master to the page and thus remove the previously applied master page from the page.",
              "position": {
                "start": {
                  "line": 5,
                  "column": 376,
                  "offset": 530
                },
                "end": {
                  "line": 5,
                  "column": 461,
                  "offset": 615
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 5,
              "column": 1,
              "offset": 155
            },
            "end": {
              "line": 5,
              "column": 461,
              "offset": 615
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 5,
          "column": 461,
          "offset": 615
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Applies a master page to the given page.\n\nThe `page` parameter can be given as a page object, as a page name or as a page number (numbering starts at 1).\n\nThe `master` parameter can be given as a master spread object or as a string. If a string is used, it can either hold the master page prefix (e.g \"A\", \"B\") or the full name *including* the prefix (e.g \"A-Master\", \"B-Master\"). The latter is useful, if there are several masters using the same prefix. Alternatively, the constant `NONE` can be used to apply InDesign's `[none]` master to the page and thus remove the previously applied master page from the page.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 7
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 8
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 9,
        "name": "applyMasterPage"
      },
      {
        "title": "param",
        "description": "The page to apply the master page to.",
        "lineNumber": 11,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            }
          ]
        },
        "name": "page"
      },
      {
        "title": "param",
        "description": "The master page to apply.",
        "lineNumber": 12,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "MasterSpread"
            }
          ]
        },
        "name": "master"
      },
      {
        "title": "return",
        "description": "The page the master page was applied to.",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Page"
        }
      },
      {
        "title": "example",
        "description": "applyMasterPage(3, \"B\");",
        "lineNumber": 15,
        "caption": "Apply the master with prefix \"B\" to the documents third page"
      },
      {
        "title": "example",
        "description": "applyMasterPage(page(), \"A-Images\");",
        "lineNumber": 18,
        "caption": "In a document with master pages \"A-Text\" and \"A-Images\", apply \"A-Images\" to the current page"
      },
      {
        "title": "example",
        "description": "applyMasterPage(\"IV\", NONE);",
        "lineNumber": 21,
        "caption": "Remove the master page from the page named \"IV\""
      }
    ],
    "loc": {
      "start": {
        "line": 3030,
        "column": 0
      },
      "end": {
        "line": 3053,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3054,
          "column": 0
        },
        "end": {
          "line": 3071,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "applyMasterPage(3, \"B\");",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Apply the master with prefix \"B\" to the documents third page",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 61,
                      "offset": 60
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 61,
                  "offset": 60
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 61,
              "offset": 60
            }
          }
        }
      },
      {
        "description": "applyMasterPage(page(), \"A-Images\");",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "In a document with master pages \"A-Text\" and \"A-Images\", apply \"A-Images\" to the current page",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 94,
                      "offset": 93
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 94,
                  "offset": 93
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 94,
              "offset": 93
            }
          }
        }
      },
      {
        "description": "applyMasterPage(\"IV\", NONE);",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Remove the master page from the page named \"IV\"",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 48,
                      "offset": 47
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 48,
              "offset": 47
            }
          }
        }
      }
    ],
    "params": [
      {
        "title": "param",
        "name": "page",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The page to apply the master page to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 38,
                  "offset": 37
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 38,
              "offset": 37
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "master",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The master page to apply.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 26,
                  "offset": 25
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 26,
              "offset": 25
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "MasterSpread"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The page the master page was applied to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 41,
                      "offset": 40
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 41,
              "offset": 40
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Page"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "applyMasterPage",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "applyMasterPage",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".applyMasterPage"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets a master page to be the active page. This can be used to set up and arrange page items on master pages, so they appear throughout the entire document.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 156,
                  "offset": 155
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 156,
              "offset": 155
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 157
                },
                "end": {
                  "line": 3,
                  "column": 5,
                  "offset": 161
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "master",
              "position": {
                "start": {
                  "line": 3,
                  "column": 5,
                  "offset": 161
                },
                "end": {
                  "line": 3,
                  "column": 13,
                  "offset": 169
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " parameter describes the master spread that contains the master page. It can be given as a master spread object or as a string. If a string is used, it can either hold the master page prefix (e.g \"A\", \"B\") or the full name ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 13,
                  "offset": 169
                },
                "end": {
                  "line": 3,
                  "column": 236,
                  "offset": 392
                },
                "indent": []
              }
            },
            {
              "type": "emphasis",
              "children": [
                {
                  "type": "text",
                  "value": "including",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 237,
                      "offset": 393
                    },
                    "end": {
                      "line": 3,
                      "column": 246,
                      "offset": 402
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 3,
                  "column": 236,
                  "offset": 392
                },
                "end": {
                  "line": 3,
                  "column": 247,
                  "offset": 403
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " the prefix (e.g \"A-Master\", \"B-Master\"). The latter is useful, if there are several masters using the same prefix.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 247,
                  "offset": 403
                },
                "end": {
                  "line": 3,
                  "column": 362,
                  "offset": 518
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 157
            },
            "end": {
              "line": 3,
              "column": 362,
              "offset": 518
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "As master pages cannot directly be targeted by number, the optional ",
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 520
                },
                "end": {
                  "line": 5,
                  "column": 69,
                  "offset": 588
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "pageIndex",
              "position": {
                "start": {
                  "line": 5,
                  "column": 69,
                  "offset": 588
                },
                "end": {
                  "line": 5,
                  "column": 80,
                  "offset": 599
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " parameter can be used to specify which master page of the given master spread should be set as the active page, in case there are several pages on the master spread. Counting starts from 0, beginning from the leftmost page. If the ",
              "position": {
                "start": {
                  "line": 5,
                  "column": 80,
                  "offset": 599
                },
                "end": {
                  "line": 5,
                  "column": 312,
                  "offset": 831
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "pageIndex",
              "position": {
                "start": {
                  "line": 5,
                  "column": 312,
                  "offset": 831
                },
                "end": {
                  "line": 5,
                  "column": 323,
                  "offset": 842
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " parameter is not given, the first page of the master spread is returned.",
              "position": {
                "start": {
                  "line": 5,
                  "column": 323,
                  "offset": 842
                },
                "end": {
                  "line": 5,
                  "column": 396,
                  "offset": 915
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 5,
              "column": 1,
              "offset": 520
            },
            "end": {
              "line": 5,
              "column": 396,
              "offset": 915
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 5,
          "column": 396,
          "offset": 915
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Sets a master page to be the active page. This can be used to set up and arrange page items on master pages, so they appear throughout the entire document.\n\nThe `master` parameter describes the master spread that contains the master page. It can be given as a master spread object or as a string. If a string is used, it can either hold the master page prefix (e.g \"A\", \"B\") or the full name *including* the prefix (e.g \"A-Master\", \"B-Master\"). The latter is useful, if there are several masters using the same prefix.\n\nAs master pages cannot directly be targeted by number, the optional `pageIndex` parameter can be used to specify which master page of the given master spread should be set as the active page, in case there are several pages on the master spread. Counting starts from 0, beginning from the leftmost page. If the `pageIndex` parameter is not given, the first page of the master spread is returned.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 7
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 8
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 9,
        "name": "masterPage"
      },
      {
        "title": "param",
        "description": "The master spread that contains the master page.",
        "lineNumber": 11,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "MasterSpread"
            }
          ]
        },
        "name": "master"
      },
      {
        "title": "param",
        "description": "The index of the page on the master spread, counting from 0.",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "pageIndex"
      },
      {
        "title": "return",
        "description": "The active master page.",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Page"
        }
      },
      {
        "title": "example",
        "description": "masterPage(\"A\");",
        "lineNumber": 15,
        "caption": "Set master page to be the first page of master \"A\"."
      },
      {
        "title": "example",
        "description": "masterPage(\"B\", 1);",
        "lineNumber": 18,
        "caption": "Set master page to be the second page of master \"B\"."
      },
      {
        "title": "example",
        "description": "masterPage(\"B\");\nnextPage();",
        "lineNumber": 21,
        "caption": "Alternate way to set master page ot the second page of master \"B\"."
      }
    ],
    "loc": {
      "start": {
        "line": 3073,
        "column": 0
      },
      "end": {
        "line": 3097,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3098,
          "column": 0
        },
        "end": {
          "line": 3121,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "masterPage(\"A\");",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Set master page to be the first page of master \"A\".",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 52,
                      "offset": 51
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 52,
                  "offset": 51
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 52,
              "offset": 51
            }
          }
        }
      },
      {
        "description": "masterPage(\"B\", 1);",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Set master page to be the second page of master \"B\".",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 53,
              "offset": 52
            }
          }
        }
      },
      {
        "description": "masterPage(\"B\");\nnextPage();",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Alternate way to set master page ot the second page of master \"B\".",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 67,
                      "offset": 66
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 67,
                  "offset": 66
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 67,
              "offset": 66
            }
          }
        }
      }
    ],
    "params": [
      {
        "title": "param",
        "name": "master",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The master spread that contains the master page.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 49,
              "offset": 48
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "MasterSpread"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "pageIndex",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The index of the page on the master spread, counting from 0.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 61,
                      "offset": 60
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 61,
                  "offset": 60
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 61,
              "offset": 60
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The active master page.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Page"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "masterPage",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "masterPage",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".masterPage"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Set the next page of the document to be the active one and returns the new active page. If the current page is the last page or the last master page, this page will be returned.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 178,
                  "offset": 177
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 178,
              "offset": 177
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 178,
          "offset": 177
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Set the next page of the document to be the active one and returns the new active page. If the current page is the last page or the last master page, this page will be returned.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "nextPage"
      },
      {
        "title": "return",
        "description": "The active page.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Page"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3123,
        "column": 0
      },
      "end": {
        "line": 3131,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3132,
          "column": 0
        },
        "end": {
          "line": 3155,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The active page.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Page"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "nextPage",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "nextPage",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".nextPage"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the current page and sets it if argument page is given. If page is given as string, the page will be set to the page with this name (e.g. \"4\", \"04\", \"D\", \"IV\"). If the page is given as an integer, the page will be set to the page according to this number, no matter the actual naming of the page. Numbering starts with 1 in this case. If you pass a page item the current page will be set to its containing page. If this page item is off the page (on the pasteboard) the current page will be set to the first page of its containing spread.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 547,
                  "offset": 546
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 547,
              "offset": 546
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 547,
          "offset": 546
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns the current page and sets it if argument page is given. If page is given as string, the page will be set to the page with this name (e.g. \"4\", \"04\", \"D\", \"IV\"). If the page is given as an integer, the page will be set to the page according to this number, no matter the actual naming of the page. Numbering starts with 1 in this case. If you pass a page item the current page will be set to its containing page. If this page item is off the page (on the pasteboard) the current page will be set to the first page of its containing spread.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "page"
      },
      {
        "title": "param",
        "description": "The page number (as integer), page name or page object to set the current page to or an page item to refer to its containing page.",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Number"
              },
              {
                "type": "NameExpression",
                "name": "String"
              },
              {
                "type": "NameExpression",
                "name": "Page"
              },
              {
                "type": "NameExpression",
                "name": "PageItem"
              }
            ]
          }
        },
        "name": "page"
      },
      {
        "title": "return",
        "description": "The current page instance.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Page"
        }
      },
      {
        "title": "example",
        "description": "page(3);",
        "lineNumber": 10,
        "caption": "Sets the current page to the third page of the document"
      },
      {
        "title": "example",
        "description": "page(\"004\");",
        "lineNumber": 13,
        "caption": "Sets the current page to the page named \"004\""
      },
      {
        "title": "example",
        "description": "var myRect = rect(100, 100, 200, 200);\npage(myRect);",
        "lineNumber": 16,
        "caption": "Sets the current page to the containing page of a rectangle"
      }
    ],
    "loc": {
      "start": {
        "line": 3157,
        "column": 0
      },
      "end": {
        "line": 3176,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3177,
          "column": 0
        },
        "end": {
          "line": 3184,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "page(3);",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Sets the current page to the third page of the document",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 56,
                      "offset": 55
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 56,
                  "offset": 55
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 56,
              "offset": 55
            }
          }
        }
      },
      {
        "description": "page(\"004\");",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Sets the current page to the page named \"004\"",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            }
          }
        }
      },
      {
        "description": "var myRect = rect(100, 100, 200, 200);\npage(myRect);",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Sets the current page to the containing page of a rectangle",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 60,
                      "offset": 59
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 60,
              "offset": 59
            }
          }
        }
      }
    ],
    "params": [
      {
        "title": "param",
        "name": "page",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The page number (as integer), page name or page object to set the current page to or an page item to refer to its containing page.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 131,
                      "offset": 130
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 131,
                  "offset": 130
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 131,
              "offset": 130
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Number"
              },
              {
                "type": "NameExpression",
                "name": "String"
              },
              {
                "type": "NameExpression",
                "name": "Page"
              },
              {
                "type": "NameExpression",
                "name": "PageItem"
              }
            ]
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current page instance.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Page"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "page",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "page",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".page"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the number of all pages in the current document. If a number is given as an argument, it will set the document's page count to the given number by either adding pages or removing pages until the number is reached. If pages are added, the master page of the document's last page will be applied to the new pages.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 320,
                  "offset": 319
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 320,
              "offset": 319
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 320,
          "offset": 319
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns the number of all pages in the current document. If a number is given as an argument, it will set the document's page count to the given number by either adding pages or removing pages until the number is reached. If pages are added, the master page of the document's last page will be applied to the new pages.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "pageCount"
      },
      {
        "title": "param",
        "description": "New page count of the document (integer between 1 and 9999).",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "pageCount"
      },
      {
        "title": "return",
        "description": "The amount of pages.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3186,
        "column": 0
      },
      "end": {
        "line": 3195,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3196,
          "column": 0
        },
        "end": {
          "line": 3209,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "pageCount",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "New page count of the document (integer between 1 and 9999).",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 61,
                      "offset": 60
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 61,
                  "offset": 60
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 61,
              "offset": 60
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The amount of pages.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "pageCount",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "pageCount",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".pageCount"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the current page number of either the current page or the given page name or page object. Numbering of pages starts at 1. Master pages have no real numbering and will return -1 instead.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 194,
                  "offset": 193
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 194,
              "offset": 193
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 194,
          "offset": 193
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns the current page number of either the current page or the given page name or page object. Numbering of pages starts at 1. Master pages have no real numbering and will return -1 instead.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "pageNumber"
      },
      {
        "title": "param",
        "description": "The page name or page object of the page you want to know the number of.",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "String"
              },
              {
                "type": "NameExpression",
                "name": "Page"
              }
            ]
          }
        },
        "name": "page"
      },
      {
        "title": "return",
        "description": "The page number within the document.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3211,
        "column": 0
      },
      "end": {
        "line": 3220,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3221,
          "column": 0
        },
        "end": {
          "line": 3240,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "page",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The page name or page object of the page you want to know the number of.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 73,
                      "offset": 72
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 73,
                  "offset": 72
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 73,
              "offset": 72
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "String"
              },
              {
                "type": "NameExpression",
                "name": "Page"
              }
            ]
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The page number within the document.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 37,
              "offset": 36
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "pageNumber",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "pageNumber",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".pageNumber"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Set the previous page of the document to be the active one and returns the new active page. If the current page is the first page or the first master page, this page will be returned.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 184,
                  "offset": 183
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 184,
              "offset": 183
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 184,
          "offset": 183
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Set the previous page of the document to be the active one and returns the new active page. If the current page is the first page or the first master page, this page will be returned.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "previousPage"
      },
      {
        "title": "return",
        "description": "The active page.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Page"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3242,
        "column": 0
      },
      "end": {
        "line": 3250,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3251,
          "column": 0
        },
        "end": {
          "line": 3274,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The active page.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Page"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "previousPage",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "previousPage",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".previousPage"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Removes a page from the current document. This will either be the current page if the parameter page is left empty, or the given page object or the page of a specific number or name.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 183,
                  "offset": 182
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 183,
              "offset": 182
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 183,
          "offset": 182
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Removes a page from the current document. This will either be the current page if the parameter page is left empty, or the given page object or the page of a specific number or name.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "removePage"
      },
      {
        "title": "param",
        "description": "The page to be removed as page number, page name or page object.",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Number"
              },
              {
                "type": "NameExpression",
                "name": "String"
              },
              {
                "type": "NameExpression",
                "name": "Page"
              }
            ]
          }
        },
        "name": "page"
      }
    ],
    "loc": {
      "start": {
        "line": 3276,
        "column": 0
      },
      "end": {
        "line": 3284,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3285,
          "column": 0
        },
        "end": {
          "line": 3306,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "page",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The page to be removed as page number, page name or page object.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 65,
                      "offset": 64
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 65,
              "offset": 64
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Number"
              },
              {
                "type": "NameExpression",
                "name": "String"
              },
              {
                "type": "NameExpression",
                "name": "Page"
              }
            ]
          }
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "removePage",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "removePage",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".removePage"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Applies an object style to the given page item. The object style can be given as name or as an object style instance.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 118,
                  "offset": 117
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 118,
              "offset": 117
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 118,
          "offset": 117
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Applies an object style to the given page item. The object style can be given as name or as an object style instance.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page Items",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "applyObjectStyle"
      },
      {
        "title": "param",
        "description": "The page item to apply the style to.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        },
        "name": "item"
      },
      {
        "title": "param",
        "description": "An object style instance or the name of the object style to apply.",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "ObjectStyle"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        },
        "name": "style"
      },
      {
        "title": "return",
        "description": "The page item that the style was applied to.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3312,
        "column": 0
      },
      "end": {
        "line": 3322,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3324,
          "column": 0
        },
        "end": {
          "line": 3341,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "item",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The page item to apply the style to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 37,
              "offset": 36
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        }
      },
      {
        "title": "param",
        "name": "style",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An object style instance or the name of the object style to apply.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 67,
                      "offset": 66
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 67,
                  "offset": 66
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 67,
              "offset": 66
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "ObjectStyle"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The page item that the style was applied to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 45,
                      "offset": 44
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 45,
                  "offset": 44
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 45,
              "offset": 44
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "applyObjectStyle",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "applyObjectStyle",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".applyObjectStyle"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Arranges a page item or a layer before or behind other page items or layers. If using the constants ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 101,
                  "offset": 100
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "FORWARD",
              "position": {
                "start": {
                  "line": 1,
                  "column": 101,
                  "offset": 100
                },
                "end": {
                  "line": 1,
                  "column": 110,
                  "offset": 109
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " or ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 110,
                  "offset": 109
                },
                "end": {
                  "line": 1,
                  "column": 114,
                  "offset": 113
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "BACKWARD",
              "position": {
                "start": {
                  "line": 1,
                  "column": 114,
                  "offset": 113
                },
                "end": {
                  "line": 1,
                  "column": 124,
                  "offset": 123
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " the object is sent forward or back one step. The constants ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 124,
                  "offset": 123
                },
                "end": {
                  "line": 1,
                  "column": 184,
                  "offset": 183
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "FRONT",
              "position": {
                "start": {
                  "line": 1,
                  "column": 184,
                  "offset": 183
                },
                "end": {
                  "line": 1,
                  "column": 191,
                  "offset": 190
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " or ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 191,
                  "offset": 190
                },
                "end": {
                  "line": 1,
                  "column": 195,
                  "offset": 194
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "BACK",
              "position": {
                "start": {
                  "line": 1,
                  "column": 195,
                  "offset": 194
                },
                "end": {
                  "line": 1,
                  "column": 201,
                  "offset": 200
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " send the object to the very front or very back. Using ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 201,
                  "offset": 200
                },
                "end": {
                  "line": 1,
                  "column": 256,
                  "offset": 255
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "FRONT",
              "position": {
                "start": {
                  "line": 1,
                  "column": 256,
                  "offset": 255
                },
                "end": {
                  "line": 1,
                  "column": 263,
                  "offset": 262
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " or ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 263,
                  "offset": 262
                },
                "end": {
                  "line": 1,
                  "column": 267,
                  "offset": 266
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "BACK",
              "position": {
                "start": {
                  "line": 1,
                  "column": 267,
                  "offset": 266
                },
                "end": {
                  "line": 1,
                  "column": 273,
                  "offset": 272
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " together with the optional reference object, sends the object in front or behind this reference object.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 273,
                  "offset": 272
                },
                "end": {
                  "line": 1,
                  "column": 377,
                  "offset": 376
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 377,
              "offset": 376
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 377,
          "offset": 376
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Arranges a page item or a layer before or behind other page items or layers. If using the constants `FORWARD` or `BACKWARD` the object is sent forward or back one step. The constants `FRONT` or `BACK` send the object to the very front or very back. Using `FRONT` or `BACK` together with the optional reference object, sends the object in front or behind this reference object.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page Items",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "arrange"
      },
      {
        "title": "param",
        "description": "The page item or layer to be moved to a new position.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "PageItem"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            }
          ]
        },
        "name": "pItemOrLayer"
      },
      {
        "title": "param",
        "description": "The position or direction to move the page item or layer. Can be `FRONT`, `BACK`, `FORWARD` or `BACKWARD`.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "positionOrDirection"
      },
      {
        "title": "param",
        "description": "A reference object to move the page item or layer behind or in front of.",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "PageItem"
              },
              {
                "type": "NameExpression",
                "name": "Layer"
              }
            ]
          }
        },
        "name": "reference"
      },
      {
        "title": "return",
        "description": "The newly arranged page item or layer.",
        "lineNumber": 10,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "PageItem"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3343,
        "column": 0
      },
      "end": {
        "line": 3354,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3355,
          "column": 0
        },
        "end": {
          "line": 3397,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "pItemOrLayer",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The page item or layer to be moved to a new position.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 54,
                      "offset": 53
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 54,
              "offset": 53
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "PageItem"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "positionOrDirection",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The position or direction to move the page item or layer. Can be ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 66,
                      "offset": 65
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "FRONT",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 66,
                      "offset": 65
                    },
                    "end": {
                      "line": 1,
                      "column": 73,
                      "offset": 72
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 73,
                      "offset": 72
                    },
                    "end": {
                      "line": 1,
                      "column": 75,
                      "offset": 74
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "BACK",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 75,
                      "offset": 74
                    },
                    "end": {
                      "line": 1,
                      "column": 81,
                      "offset": 80
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 81,
                      "offset": 80
                    },
                    "end": {
                      "line": 1,
                      "column": 83,
                      "offset": 82
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "FORWARD",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 83,
                      "offset": 82
                    },
                    "end": {
                      "line": 1,
                      "column": 92,
                      "offset": 91
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " or ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 92,
                      "offset": 91
                    },
                    "end": {
                      "line": 1,
                      "column": 96,
                      "offset": 95
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "BACKWARD",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 96,
                      "offset": 95
                    },
                    "end": {
                      "line": 1,
                      "column": 106,
                      "offset": 105
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 106,
                      "offset": 105
                    },
                    "end": {
                      "line": 1,
                      "column": 107,
                      "offset": 106
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 107,
                  "offset": 106
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 107,
              "offset": 106
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      },
      {
        "title": "param",
        "name": "reference",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A reference object to move the page item or layer behind or in front of.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 73,
                      "offset": 72
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 73,
                  "offset": 72
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 73,
              "offset": 72
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "PageItem"
              },
              {
                "type": "NameExpression",
                "name": "Layer"
              }
            ]
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The newly arranged page item or layer.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 39,
              "offset": 38
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "PageItem"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "arrange",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "arrange",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".arrange"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The function calculates the geometric bounds of any given page item or text. Use the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 86,
                  "offset": 85
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "transforms()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 86,
                  "offset": 85
                },
                "end": {
                  "line": 1,
                  "column": 100,
                  "offset": 99
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function to modify page items. In case the object is any kind of text, additional typographic information ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 100,
                  "offset": 99
                },
                "end": {
                  "line": 1,
                  "column": 207,
                  "offset": 206
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "baseline",
              "position": {
                "start": {
                  "line": 1,
                  "column": 207,
                  "offset": 206
                },
                "end": {
                  "line": 1,
                  "column": 217,
                  "offset": 216
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 217,
                  "offset": 216
                },
                "end": {
                  "line": 1,
                  "column": 222,
                  "offset": 221
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "xHeight",
              "position": {
                "start": {
                  "line": 1,
                  "column": 222,
                  "offset": 221
                },
                "end": {
                  "line": 1,
                  "column": 231,
                  "offset": 230
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " are calculated.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 231,
                  "offset": 230
                },
                "end": {
                  "line": 1,
                  "column": 247,
                  "offset": 246
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 247,
              "offset": 246
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 247,
          "offset": 246
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "The function calculates the geometric bounds of any given page item or text. Use the `transforms()` function to modify page items. In case the object is any kind of text, additional typographic information `baseline` and `xHeight` are calculated.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page Items",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "bounds"
      },
      {
        "title": "param",
        "description": "The page item or text to calculate the geometric bounds.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "PageItem"
            },
            {
              "type": "NameExpression",
              "name": "Text"
            }
          ]
        },
        "name": "obj"
      },
      {
        "title": "return",
        "description": "Geometric bounds object with these properties: `width`, `height`, `left`, `right`, `top`, `bottom` and for text: `baseline`, `xHeight`.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3399,
        "column": 0
      },
      "end": {
        "line": 3408,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3409,
          "column": 0
        },
        "end": {
          "line": 3469,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "obj",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The page item or text to calculate the geometric bounds.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 57,
                      "offset": 56
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 57,
                  "offset": 56
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 57,
              "offset": 56
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "PageItem"
            },
            {
              "type": "NameExpression",
              "name": "Text"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Geometric bounds object with these properties: ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 48,
                      "offset": 47
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "width",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 48,
                      "offset": 47
                    },
                    "end": {
                      "line": 1,
                      "column": 55,
                      "offset": 54
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 55,
                      "offset": 54
                    },
                    "end": {
                      "line": 1,
                      "column": 57,
                      "offset": 56
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "height",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 57,
                      "offset": 56
                    },
                    "end": {
                      "line": 1,
                      "column": 65,
                      "offset": 64
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 65,
                      "offset": 64
                    },
                    "end": {
                      "line": 1,
                      "column": 67,
                      "offset": 66
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "left",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 67,
                      "offset": 66
                    },
                    "end": {
                      "line": 1,
                      "column": 73,
                      "offset": 72
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 73,
                      "offset": 72
                    },
                    "end": {
                      "line": 1,
                      "column": 75,
                      "offset": 74
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "right",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 75,
                      "offset": 74
                    },
                    "end": {
                      "line": 1,
                      "column": 82,
                      "offset": 81
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 82,
                      "offset": 81
                    },
                    "end": {
                      "line": 1,
                      "column": 84,
                      "offset": 83
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "top",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 84,
                      "offset": 83
                    },
                    "end": {
                      "line": 1,
                      "column": 89,
                      "offset": 88
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 89,
                      "offset": 88
                    },
                    "end": {
                      "line": 1,
                      "column": 91,
                      "offset": 90
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "bottom",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 91,
                      "offset": 90
                    },
                    "end": {
                      "line": 1,
                      "column": 99,
                      "offset": 98
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " and for text: ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 99,
                      "offset": 98
                    },
                    "end": {
                      "line": 1,
                      "column": 114,
                      "offset": 113
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "baseline",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 114,
                      "offset": 113
                    },
                    "end": {
                      "line": 1,
                      "column": 124,
                      "offset": 123
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 124,
                      "offset": 123
                    },
                    "end": {
                      "line": 1,
                      "column": 126,
                      "offset": 125
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "xHeight",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 126,
                      "offset": 125
                    },
                    "end": {
                      "line": 1,
                      "column": 135,
                      "offset": 134
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 135,
                      "offset": 134
                    },
                    "end": {
                      "line": 1,
                      "column": 136,
                      "offset": 135
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 136,
                  "offset": 135
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 136,
              "offset": 135
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "bounds",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "bounds",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".bounds"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Duplicates the given page after the current page or the given page item to the current page and layer. Use ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 108,
                  "offset": 107
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "rectMode()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 108,
                  "offset": 107
                },
                "end": {
                  "line": 1,
                  "column": 120,
                  "offset": 119
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " to set center point.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 120,
                  "offset": 119
                },
                "end": {
                  "line": 1,
                  "column": 141,
                  "offset": 140
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 141,
              "offset": 140
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 141,
          "offset": 140
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Duplicates the given page after the current page or the given page item to the current page and layer. Use `rectMode()` to set center point.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page Items",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "duplicate"
      },
      {
        "title": "param",
        "description": "The page item or page to duplicate.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "PageItem"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            }
          ]
        },
        "name": "item"
      },
      {
        "title": "return",
        "description": "The new page item or page.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3471,
        "column": 0
      },
      "end": {
        "line": 3480,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3481,
          "column": 0
        },
        "end": {
          "line": 3499,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "item",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The page item or page to duplicate.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 36,
                      "offset": 35
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 36,
              "offset": 35
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "PageItem"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The new page item or page.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "duplicate",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "duplicate",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".duplicate"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns a collection of all graphics in the given container. The container object can be a Document, Page, Layer, Group, Story, Page Item or Text Object. This function can be used to get the graphic within a graphic frame and move it independently of its parent frame.\nIf a callback function is given, ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 34,
                  "offset": 302
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "graphics()",
              "position": {
                "start": {
                  "line": 2,
                  "column": 34,
                  "offset": 302
                },
                "end": {
                  "line": 2,
                  "column": 46,
                  "offset": 314
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " calls this callback function on each graphic of the given container. When the callback function returns false, the loop stops and the ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 46,
                  "offset": 314
                },
                "end": {
                  "line": 2,
                  "column": 181,
                  "offset": 449
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "graphics()",
              "position": {
                "start": {
                  "line": 2,
                  "column": 181,
                  "offset": 449
                },
                "end": {
                  "line": 2,
                  "column": 193,
                  "offset": 461
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function returns an array of all graphics up to this point.",
              "position": {
                "start": {
                  "line": 2,
                  "column": 193,
                  "offset": 461
                },
                "end": {
                  "line": 2,
                  "column": 253,
                  "offset": 521
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 253,
              "offset": 521
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 253,
          "offset": 521
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns a collection of all graphics in the given container. The container object can be a Document, Page, Layer, Group, Story, Page Item or Text Object. This function can be used to get the graphic within a graphic frame and move it independently of its parent frame.\nIf a callback function is given, `graphics()` calls this callback function on each graphic of the given container. When the callback function returns false, the loop stops and the `graphics()` function returns an array of all graphics up to this point.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "Page Items",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "graphics"
      },
      {
        "title": "param",
        "description": "The document, page, layer, group, story, page item or text object to iterate the graphics in.",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            },
            {
              "type": "NameExpression",
              "name": "Group"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            },
            {
              "type": "NameExpression",
              "name": "PageItem"
            },
            {
              "type": "NameExpression",
              "name": "TextObject"
            }
          ]
        },
        "name": "container"
      },
      {
        "title": "param",
        "description": "The callback function to call with each graphic. When this function returns false the loop stops. Passed arguments: `graphic`, `loopCount`.",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        },
        "name": "cb"
      },
      {
        "title": "return",
        "description": "An array of Graphics.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3501,
        "column": 0
      },
      "end": {
        "line": 3512,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3513,
          "column": 0
        },
        "end": {
          "line": 3525,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "container",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The document, page, layer, group, story, page item or text object to iterate the graphics in.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 94,
                      "offset": 93
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 94,
                  "offset": 93
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 94,
              "offset": 93
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            },
            {
              "type": "NameExpression",
              "name": "Group"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            },
            {
              "type": "NameExpression",
              "name": "PageItem"
            },
            {
              "type": "NameExpression",
              "name": "TextObject"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "cb",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The callback function to call with each graphic. When this function returns false the loop stops. Passed arguments: ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 117,
                      "offset": 116
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "graphic",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 117,
                      "offset": 116
                    },
                    "end": {
                      "line": 1,
                      "column": 126,
                      "offset": 125
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 126,
                      "offset": 125
                    },
                    "end": {
                      "line": 1,
                      "column": 128,
                      "offset": 127
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "loopCount",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 128,
                      "offset": 127
                    },
                    "end": {
                      "line": 1,
                      "column": 139,
                      "offset": 138
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 139,
                      "offset": 138
                    },
                    "end": {
                      "line": 1,
                      "column": 140,
                      "offset": 139
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 140,
                  "offset": 139
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 140,
              "offset": 139
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An array of Graphics.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "graphics",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "graphics",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".graphics"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the Group instance and sets it if argument Group is given. Groups items to a new group. Returns the resulting group instance. If a string is given as the only argument, the group by the given name will be returned.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 223,
                  "offset": 222
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 223,
              "offset": 222
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 223,
          "offset": 222
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns the Group instance and sets it if argument Group is given. Groups items to a new group. Returns the resulting group instance. If a string is given as the only argument, the group by the given name will be returned.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subCat",
        "description": "Page Items",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "group"
      },
      {
        "title": "param",
        "description": "An array of page items (must contain at least two items) or name of group instance.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        },
        "name": "pItems"
      },
      {
        "title": "param",
        "description": "The name of the group, only when creating a group from page items.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        },
        "name": "name"
      },
      {
        "title": "return",
        "description": "The group instance.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Group"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3527,
        "column": 0
      },
      "end": {
        "line": 3537,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3538,
          "column": 0
        },
        "end": {
          "line": 3561,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "pItems",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An array of page items (must contain at least two items) or name of group instance.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 84,
                      "offset": 83
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 84,
                  "offset": 83
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 84,
              "offset": 83
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      },
      {
        "title": "param",
        "name": "name",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The name of the group, only when creating a group from page items.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 67,
                      "offset": 66
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 67,
                  "offset": 66
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 67,
              "offset": 66
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The group instance.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Group"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "group",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "group",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".group"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns a collection of all page items in the given container. The container object can be a Document, Page, Layer, Group, Story, Page Item or Text Object.\nIf a callback function is given, ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 34,
                  "offset": 189
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "items()",
              "position": {
                "start": {
                  "line": 2,
                  "column": 34,
                  "offset": 189
                },
                "end": {
                  "line": 2,
                  "column": 43,
                  "offset": 198
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " calls this callback function on each page item of the given container. When the callback function returns false, the loop stops and the ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 43,
                  "offset": 198
                },
                "end": {
                  "line": 2,
                  "column": 180,
                  "offset": 335
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "items()",
              "position": {
                "start": {
                  "line": 2,
                  "column": 180,
                  "offset": 335
                },
                "end": {
                  "line": 2,
                  "column": 189,
                  "offset": 344
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function returns an array of all page items up to this point.",
              "position": {
                "start": {
                  "line": 2,
                  "column": 189,
                  "offset": 344
                },
                "end": {
                  "line": 2,
                  "column": 251,
                  "offset": 406
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 251,
              "offset": 406
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 251,
          "offset": 406
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns a collection of all page items in the given container. The container object can be a Document, Page, Layer, Group, Story, Page Item or Text Object.\nIf a callback function is given, `items()` calls this callback function on each page item of the given container. When the callback function returns false, the loop stops and the `items()` function returns an array of all page items up to this point.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "Page Items",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "items"
      },
      {
        "title": "param",
        "description": "The document, page, layer, group, story, page item or text object instance to iterate the page items in.",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            },
            {
              "type": "NameExpression",
              "name": "Group"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            },
            {
              "type": "NameExpression",
              "name": "PageItem"
            },
            {
              "type": "NameExpression",
              "name": "TextObject"
            }
          ]
        },
        "name": "container"
      },
      {
        "title": "param",
        "description": "Optional: The callback function to call with each page item. When this function returns false the loop stops. Passed arguments: `item`, `loopCount`",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        },
        "name": "cb"
      },
      {
        "title": "return",
        "description": "A collection or an array of page items.",
        "lineNumber": 10,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "PageItems"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3563,
        "column": 0
      },
      "end": {
        "line": 3574,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3575,
          "column": 0
        },
        "end": {
          "line": 3586,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "container",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The document, page, layer, group, story, page item or text object instance to iterate the page items in.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 105,
                      "offset": 104
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 105,
                  "offset": 104
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 105,
              "offset": 104
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            },
            {
              "type": "NameExpression",
              "name": "Group"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            },
            {
              "type": "NameExpression",
              "name": "PageItem"
            },
            {
              "type": "NameExpression",
              "name": "TextObject"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "cb",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional: The callback function to call with each page item. When this function returns false the loop stops. Passed arguments: ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 129,
                      "offset": 128
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "item",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 129,
                      "offset": 128
                    },
                    "end": {
                      "line": 1,
                      "column": 135,
                      "offset": 134
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 135,
                      "offset": 134
                    },
                    "end": {
                      "line": 1,
                      "column": 137,
                      "offset": 136
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "loopCount",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 137,
                      "offset": 136
                    },
                    "end": {
                      "line": 1,
                      "column": 148,
                      "offset": 147
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 148,
                  "offset": 147
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 148,
              "offset": 147
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A collection or an array of page items.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 40,
              "offset": 39
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "PageItems"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "items",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "items",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".items"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Tags a page item with a given script label in the InDesign Script Label panel (",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 80,
                  "offset": 79
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "Window -> Utilities -> Script Label",
              "position": {
                "start": {
                  "line": 1,
                  "column": 80,
                  "offset": 79
                },
                "end": {
                  "line": 1,
                  "column": 117,
                  "offset": 116
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "). If only one argument is given, ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 117,
                  "offset": 116
                },
                "end": {
                  "line": 1,
                  "column": 151,
                  "offset": 150
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "label()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 151,
                  "offset": 150
                },
                "end": {
                  "line": 1,
                  "column": 160,
                  "offset": 159
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " returns the first item that is tagged with the given label. Use this instead of ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 160,
                  "offset": 159
                },
                "end": {
                  "line": 1,
                  "column": 241,
                  "offset": 240
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "labels()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 241,
                  "offset": 240
                },
                "end": {
                  "line": 1,
                  "column": 251,
                  "offset": 250
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", when you know you just have one thing with that label and don't want to deal with a single-element array.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 251,
                  "offset": 250
                },
                "end": {
                  "line": 1,
                  "column": 358,
                  "offset": 357
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 358,
              "offset": 357
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 358,
          "offset": 357
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Tags a page item with a given script label in the InDesign Script Label panel (`Window -> Utilities -> Script Label`). If only one argument is given, `label()` returns the first item that is tagged with the given label. Use this instead of `labels()`, when you know you just have one thing with that label and don't want to deal with a single-element array.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page Items",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "label"
      },
      {
        "title": "param",
        "description": "The page item to tag or the label identifier to search for.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "PageItem"
            }
          ]
        },
        "name": "itemOrLabel"
      },
      {
        "title": "param",
        "description": "The label identifier to tag the page item with.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "label"
      },
      {
        "title": "return",
        "description": "The tagged page item or the first page item with the given label.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3588,
        "column": 0
      },
      "end": {
        "line": 3598,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3599,
          "column": 0
        },
        "end": {
          "line": 3614,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "itemOrLabel",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The page item to tag or the label identifier to search for.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 60,
                      "offset": 59
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 60,
              "offset": 59
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "PageItem"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "label",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The label identifier to tag the page item with.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 48,
                      "offset": 47
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 48,
              "offset": 47
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The tagged page item or the first page item with the given label.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 66,
                      "offset": 65
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 66,
                  "offset": 65
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 66,
              "offset": 65
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "label",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "label",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".label"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns items tagged with the given label in the InDesign Script Label pane (",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 78,
                  "offset": 77
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "Window -> Utilities -> Script Label",
              "position": {
                "start": {
                  "line": 1,
                  "column": 78,
                  "offset": 77
                },
                "end": {
                  "line": 1,
                  "column": 115,
                  "offset": 114
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ").",
              "position": {
                "start": {
                  "line": 1,
                  "column": 115,
                  "offset": 114
                },
                "end": {
                  "line": 1,
                  "column": 117,
                  "offset": 116
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 117,
              "offset": 116
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 117,
          "offset": 116
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns items tagged with the given label in the InDesign Script Label pane (`Window -> Utilities -> Script Label`).",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page Items",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "labels"
      },
      {
        "title": "param",
        "description": "The label identifier.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "label"
      },
      {
        "title": "param",
        "description": "The callback function to call with each item in the search result. When this function returns `false`, the loop stops. Passed arguments: `item`, `loopCount`.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        },
        "name": "cb"
      },
      {
        "title": "return",
        "description": "Array of concrete page item instances, e.g. text frame or spline item.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3616,
        "column": 0
      },
      "end": {
        "line": 3626,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3627,
          "column": 0
        },
        "end": {
          "line": 3645,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "label",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The label identifier.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      },
      {
        "title": "param",
        "name": "cb",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The callback function to call with each item in the search result. When this function returns ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 95,
                      "offset": 94
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 95,
                      "offset": 94
                    },
                    "end": {
                      "line": 1,
                      "column": 102,
                      "offset": 101
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", the loop stops. Passed arguments: ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 102,
                      "offset": 101
                    },
                    "end": {
                      "line": 1,
                      "column": 138,
                      "offset": 137
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "item",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 138,
                      "offset": 137
                    },
                    "end": {
                      "line": 1,
                      "column": 144,
                      "offset": 143
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 144,
                      "offset": 143
                    },
                    "end": {
                      "line": 1,
                      "column": 146,
                      "offset": 145
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "loopCount",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 146,
                      "offset": 145
                    },
                    "end": {
                      "line": 1,
                      "column": 157,
                      "offset": 156
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 157,
                      "offset": 156
                    },
                    "end": {
                      "line": 1,
                      "column": 158,
                      "offset": 157
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 158,
                  "offset": 157
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 158,
              "offset": 157
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array of concrete page item instances, e.g. text frame or spline item.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 71,
                      "offset": 70
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 71,
                  "offset": 70
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 71,
              "offset": 70
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "labels",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "labels",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".labels"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the first item on the active page that is named by the given name in the Layers pane (",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 95,
                  "offset": 94
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "Window -> Layer",
              "position": {
                "start": {
                  "line": 1,
                  "column": 95,
                  "offset": 94
                },
                "end": {
                  "line": 1,
                  "column": 112,
                  "offset": 111
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ").",
              "position": {
                "start": {
                  "line": 1,
                  "column": 112,
                  "offset": 111
                },
                "end": {
                  "line": 1,
                  "column": 114,
                  "offset": 113
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 114,
              "offset": 113
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 114,
          "offset": 113
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns the first item on the active page that is named by the given name in the Layers pane (`Window -> Layer`).",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page Items",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "nameOnPage"
      },
      {
        "title": "return",
        "description": "The first object on the active page with the given name.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3647,
        "column": 0
      },
      "end": {
        "line": 3655,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3656,
          "column": 0
        },
        "end": {
          "line": 3671,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "name",
        "lineNumber": 3656
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The first object on the active page with the given name.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 57,
                      "offset": 56
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 57,
                  "offset": 56
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 57,
              "offset": 56
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "nameOnPage",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "nameOnPage",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".nameOnPage"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the object style of a given page item or the object style with the given name. If an object style of the given name does not exist, it gets created. Optionally a props object of property name/value pairs can be used to set the object style's properties.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 262,
                  "offset": 261
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 262,
              "offset": 261
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 262,
          "offset": 261
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns the object style of a given page item or the object style with the given name. If an object style of the given name does not exist, it gets created. Optionally a props object of property name/value pairs can be used to set the object style's properties.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page Items",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "objectStyle"
      },
      {
        "title": "param",
        "description": "A page item whose style to return or the name of the object style to return.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "PageItem"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        },
        "name": "itemOrName"
      },
      {
        "title": "param",
        "description": "An object of property name/value pairs to set the style's properties.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        },
        "name": "props"
      },
      {
        "title": "return",
        "description": "The object style instance.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "ObjectStyle"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3673,
        "column": 0
      },
      "end": {
        "line": 3683,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3684,
          "column": 0
        },
        "end": {
          "line": 3714,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "itemOrName",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A page item whose style to return or the name of the object style to return.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 77,
                      "offset": 76
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 77,
                  "offset": 76
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 77,
              "offset": 76
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "PageItem"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "props",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An object of property name/value pairs to set the style's properties.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 70,
                      "offset": 69
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 70,
                  "offset": 69
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 70,
              "offset": 69
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The object style instance.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "ObjectStyle"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "objectStyle",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "objectStyle",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".objectStyle"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "If no argument is given, returns the first currently selected object. If a page item is given as argument, the page item will be selected.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 139,
                  "offset": 138
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 139,
              "offset": 138
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 139,
          "offset": 138
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "If no argument is given, returns the first currently selected object. If a page item is given as argument, the page item will be selected.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page Items",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "selection"
      },
      {
        "title": "param",
        "description": "The page item to select.",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "PageItem"
          }
        },
        "name": "item"
      },
      {
        "title": "return",
        "description": "The first selected object.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3716,
        "column": 0
      },
      "end": {
        "line": 3725,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3726,
          "column": 0
        },
        "end": {
          "line": 3736,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "item",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The page item to select.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "PageItem"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The first selected object.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "selection",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "selection",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".selection"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the currently selected object(s)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 41,
              "offset": 40
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 41,
          "offset": 40
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns the currently selected object(s)",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page Items",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "selections"
      },
      {
        "title": "param",
        "description": "The callback function to call with each item in the selection. When this function returns false the loop stops. Passed arguments: item, loopCount.",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        },
        "name": "cb"
      },
      {
        "title": "return",
        "description": "Array of selected object(s).",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3738,
        "column": 0
      },
      "end": {
        "line": 3747,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3748,
          "column": 0
        },
        "end": {
          "line": 3756,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "cb",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The callback function to call with each item in the selection. When this function returns false the loop stops. Passed arguments: item, loopCount.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 147,
                      "offset": 146
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 147,
                  "offset": 146
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 147,
              "offset": 146
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array of selected object(s).",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "selections",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "selections",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".selections"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Ungroups an existing group. Returns an array of the items that were within the group before ungroup() was called.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 114,
                  "offset": 113
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 114,
              "offset": 113
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 114,
          "offset": 113
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Ungroups an existing group. Returns an array of the items that were within the group before ungroup() was called.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subCat",
        "description": "Page Items",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "ungroup"
      },
      {
        "title": "param",
        "description": "The group instance or name of the group to ungroup.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Group"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        },
        "name": "group"
      },
      {
        "title": "return",
        "description": "An array of the ungrouped page items.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3758,
        "column": 0
      },
      "end": {
        "line": 3767,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3768,
          "column": 0
        },
        "end": {
          "line": 3786,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "group",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The group instance or name of the group to ungroup.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 52,
                      "offset": 51
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 52,
                  "offset": 51
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 52,
              "offset": 51
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Group"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An array of the ungrouped page items.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 38,
                  "offset": 37
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 38,
              "offset": 37
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "ungroup",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "ungroup",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".ungroup"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Adds a page item or a string to an existing story. You can control the position of the insert via the last parameter. It accepts either an insertion point or one the following constants: ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 188,
                  "offset": 187
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "AT_BEGINNING",
              "position": {
                "start": {
                  "line": 1,
                  "column": 188,
                  "offset": 187
                },
                "end": {
                  "line": 1,
                  "column": 202,
                  "offset": 201
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 202,
                  "offset": 201
                },
                "end": {
                  "line": 1,
                  "column": 207,
                  "offset": 206
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "AT_END",
              "position": {
                "start": {
                  "line": 1,
                  "column": 207,
                  "offset": 206
                },
                "end": {
                  "line": 1,
                  "column": 215,
                  "offset": 214
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 215,
                  "offset": 214
                },
                "end": {
                  "line": 1,
                  "column": 216,
                  "offset": 215
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 216,
              "offset": 215
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 216,
          "offset": 215
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Adds a page item or a string to an existing story. You can control the position of the insert via the last parameter. It accepts either an insertion point or one the following constants: `AT_BEGINNING` and `AT_END`.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Text",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "addToStory"
      },
      {
        "title": "param",
        "description": "The story.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Story"
        },
        "name": "story"
      },
      {
        "title": "param",
        "description": "Either a page item or a string.",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "PageItem"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        },
        "name": "itemOrString"
      },
      {
        "title": "param",
        "description": "Insertion point object or one the following constants: `AT_BEGINNING` and `AT_END`.",
        "lineNumber": 9,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "InsertionPoint"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        },
        "name": "insertionPointOrMode"
      }
    ],
    "loc": {
      "start": {
        "line": 3792,
        "column": 0
      },
      "end": {
        "line": 3802,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3803,
          "column": 0
        },
        "end": {
          "line": 3852,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "story",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The story.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 11,
              "offset": 10
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Story"
        }
      },
      {
        "title": "param",
        "name": "itemOrString",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Either a page item or a string.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "PageItem"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "insertionPointorMode",
        "lineNumber": 3803
      },
      {
        "title": "param",
        "name": "insertionPointOrMode",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Insertion point object or one the following constants: ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 56,
                      "offset": 55
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "AT_BEGINNING",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 56,
                      "offset": 55
                    },
                    "end": {
                      "line": 1,
                      "column": 70,
                      "offset": 69
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " and ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 70,
                      "offset": 69
                    },
                    "end": {
                      "line": 1,
                      "column": 75,
                      "offset": 74
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "AT_END",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 75,
                      "offset": 74
                    },
                    "end": {
                      "line": 1,
                      "column": 83,
                      "offset": 82
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 83,
                      "offset": 82
                    },
                    "end": {
                      "line": 1,
                      "column": 84,
                      "offset": 83
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 84,
                  "offset": 83
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 84,
              "offset": 83
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "InsertionPoint"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "addToStory",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "addToStory",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".addToStory"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns a collection of all character objects in the given container. The container object can be a Document, Page, Layer, Group, Story, Text Frame, Paragraph, Line or Word.\nIf a callback function is given, ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 34,
                  "offset": 207
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "characters()",
              "position": {
                "start": {
                  "line": 2,
                  "column": 34,
                  "offset": 207
                },
                "end": {
                  "line": 2,
                  "column": 48,
                  "offset": 221
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " calls this callback function on each character object of the given container. When the callback function returns false, the loop stops and the ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 48,
                  "offset": 221
                },
                "end": {
                  "line": 2,
                  "column": 192,
                  "offset": 365
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "characters()",
              "position": {
                "start": {
                  "line": 2,
                  "column": 192,
                  "offset": 365
                },
                "end": {
                  "line": 2,
                  "column": 206,
                  "offset": 379
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function returns an array of all characters up to this point.",
              "position": {
                "start": {
                  "line": 2,
                  "column": 206,
                  "offset": 379
                },
                "end": {
                  "line": 2,
                  "column": 268,
                  "offset": 441
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 268,
              "offset": 441
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 268,
          "offset": 441
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns a collection of all character objects in the given container. The container object can be a Document, Page, Layer, Group, Story, Text Frame, Paragraph, Line or Word.\nIf a callback function is given, `characters()` calls this callback function on each character object of the given container. When the callback function returns false, the loop stops and the `characters()` function returns an array of all characters up to this point.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "Text",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "characters"
      },
      {
        "title": "param",
        "description": "The document, page, layer, group, story, textFrame, paragraph, line or word instance to  iterate the characters in.",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            },
            {
              "type": "NameExpression",
              "name": "Group"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            },
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "Paragraph"
            },
            {
              "type": "NameExpression",
              "name": "Line"
            },
            {
              "type": "NameExpression",
              "name": "Word"
            }
          ]
        },
        "name": "container"
      },
      {
        "title": "param",
        "description": "Optional: The callback function to call with each character. When this function returns false the loop stops. Passed arguments: `character`, `loopCount`",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        },
        "name": "cb"
      },
      {
        "title": "return",
        "description": "A collection or an array of Character objects.",
        "lineNumber": 10,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Characters"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3854,
        "column": 0
      },
      "end": {
        "line": 3865,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3866,
          "column": 0
        },
        "end": {
          "line": 3871,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "container",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The document, page, layer, group, story, textFrame, paragraph, line or word instance to  iterate the characters in.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 116,
                      "offset": 115
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 116,
                  "offset": 115
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 116,
              "offset": 115
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            },
            {
              "type": "NameExpression",
              "name": "Group"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            },
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "Paragraph"
            },
            {
              "type": "NameExpression",
              "name": "Line"
            },
            {
              "type": "NameExpression",
              "name": "Word"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "cb",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional: The callback function to call with each character. When this function returns false the loop stops. Passed arguments: ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 129,
                      "offset": 128
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "character",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 129,
                      "offset": 128
                    },
                    "end": {
                      "line": 1,
                      "column": 140,
                      "offset": 139
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 140,
                      "offset": 139
                    },
                    "end": {
                      "line": 1,
                      "column": 142,
                      "offset": 141
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "loopCount",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 142,
                      "offset": 141
                    },
                    "end": {
                      "line": 1,
                      "column": 153,
                      "offset": 152
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 153,
                  "offset": 152
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 153,
              "offset": 152
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A collection or an array of Character objects.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 47,
                      "offset": 46
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 47,
                  "offset": 46
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 47,
              "offset": 46
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Characters"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "characters",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "characters",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".characters"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns a collection of all line objects in the given container. The container object can be a Document, Page, Layer, Group, Story, Text Frame or Paragraph. Please note that ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 175,
                  "offset": 174
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "lines()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 175,
                  "offset": 174
                },
                "end": {
                  "line": 1,
                  "column": 184,
                  "offset": 183
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " refers to lines of text in a text frame. If you need to construct a geometric line on a page, use ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 184,
                  "offset": 183
                },
                "end": {
                  "line": 1,
                  "column": 283,
                  "offset": 282
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "line()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 283,
                  "offset": 282
                },
                "end": {
                  "line": 1,
                  "column": 291,
                  "offset": 290
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " instead.\nIf a callback function is given, ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 291,
                  "offset": 290
                },
                "end": {
                  "line": 2,
                  "column": 34,
                  "offset": 333
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "lines()",
              "position": {
                "start": {
                  "line": 2,
                  "column": 34,
                  "offset": 333
                },
                "end": {
                  "line": 2,
                  "column": 43,
                  "offset": 342
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " calls this callback function on each line object of the given container. When the callback function returns false, the loop stops and the ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 43,
                  "offset": 342
                },
                "end": {
                  "line": 2,
                  "column": 182,
                  "offset": 481
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "lines()",
              "position": {
                "start": {
                  "line": 2,
                  "column": 182,
                  "offset": 481
                },
                "end": {
                  "line": 2,
                  "column": 191,
                  "offset": 490
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function returns an array of all lines up to this point.",
              "position": {
                "start": {
                  "line": 2,
                  "column": 191,
                  "offset": 490
                },
                "end": {
                  "line": 2,
                  "column": 248,
                  "offset": 547
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 248,
              "offset": 547
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 248,
          "offset": 547
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns a collection of all line objects in the given container. The container object can be a Document, Page, Layer, Group, Story, Text Frame or Paragraph. Please note that `lines()` refers to lines of text in a text frame. If you need to construct a geometric line on a page, use `line()` instead.\nIf a callback function is given, `lines()` calls this callback function on each line object of the given container. When the callback function returns false, the loop stops and the `lines()` function returns an array of all lines up to this point.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "Text",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "lines"
      },
      {
        "title": "param",
        "description": "The document, page, layer, group, story, textFrame or paragraph instance to  iterate the lines in.",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            },
            {
              "type": "NameExpression",
              "name": "Group"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            },
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "Paragraph"
            },
            {
              "type": "NameExpression",
              "name": "Line"
            }
          ]
        },
        "name": "container"
      },
      {
        "title": "param",
        "description": "Optional: The callback function to call with each line. When this function returns false the loop stops. Passed arguments: `line`, `loopCount`",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        },
        "name": "cb"
      },
      {
        "title": "return",
        "description": "A collection or an array of Line objects.",
        "lineNumber": 10,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Lines"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3873,
        "column": 0
      },
      "end": {
        "line": 3884,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3886,
          "column": 0
        },
        "end": {
          "line": 3891,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "container",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The document, page, layer, group, story, textFrame or paragraph instance to  iterate the lines in.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 99,
                      "offset": 98
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 99,
                  "offset": 98
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 99,
              "offset": 98
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            },
            {
              "type": "NameExpression",
              "name": "Group"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            },
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "Paragraph"
            },
            {
              "type": "NameExpression",
              "name": "Line"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "cb",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional: The callback function to call with each line. When this function returns false the loop stops. Passed arguments: ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 124,
                      "offset": 123
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "line",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 124,
                      "offset": 123
                    },
                    "end": {
                      "line": 1,
                      "column": 130,
                      "offset": 129
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 130,
                      "offset": 129
                    },
                    "end": {
                      "line": 1,
                      "column": 132,
                      "offset": 131
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "loopCount",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 132,
                      "offset": 131
                    },
                    "end": {
                      "line": 1,
                      "column": 143,
                      "offset": 142
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 143,
                  "offset": 142
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 143,
              "offset": 142
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A collection or an array of Line objects.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 42,
                      "offset": 41
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 42,
              "offset": 41
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Lines"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "lines",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "lines",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".lines"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Links the stories of two textframes to one story. Text of first textframe overflows to second one.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 99,
                  "offset": 98
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 99,
              "offset": 98
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 99,
          "offset": 98
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Links the stories of two textframes to one story. Text of first textframe overflows to second one.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Text",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "linkTextFrames"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "TextFrame"
        },
        "name": "textFrameA"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "TextFrame"
        },
        "name": "textFrameB"
      }
    ],
    "loc": {
      "start": {
        "line": 3893,
        "column": 0
      },
      "end": {
        "line": 3902,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3903,
          "column": 0
        },
        "end": {
          "line": 3909,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "textFrameA",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "TextFrame"
        }
      },
      {
        "title": "param",
        "name": "textFrameB",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "TextFrame"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "linkTextFrames",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "linkTextFrames",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".linkTextFrames"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns a collection of all paragraph objects in the given container. The container object can be a Document, Page, Layer, Group, Story or Text Frame.\nIf a callback function is given, ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 34,
                  "offset": 184
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "paragraphs()",
              "position": {
                "start": {
                  "line": 2,
                  "column": 34,
                  "offset": 184
                },
                "end": {
                  "line": 2,
                  "column": 48,
                  "offset": 198
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " calls this callback function on each paragraph object of the given container. When the callback function returns false, the loop stops and the ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 48,
                  "offset": 198
                },
                "end": {
                  "line": 2,
                  "column": 192,
                  "offset": 342
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "paragraphs()",
              "position": {
                "start": {
                  "line": 2,
                  "column": 192,
                  "offset": 342
                },
                "end": {
                  "line": 2,
                  "column": 206,
                  "offset": 356
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function returns an array of all paragraphs up to this point.",
              "position": {
                "start": {
                  "line": 2,
                  "column": 206,
                  "offset": 356
                },
                "end": {
                  "line": 2,
                  "column": 268,
                  "offset": 418
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 268,
              "offset": 418
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 268,
          "offset": 418
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns a collection of all paragraph objects in the given container. The container object can be a Document, Page, Layer, Group, Story or Text Frame.\nIf a callback function is given, `paragraphs()` calls this callback function on each paragraph object of the given container. When the callback function returns false, the loop stops and the `paragraphs()` function returns an array of all paragraphs up to this point.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "Text",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "paragraphs"
      },
      {
        "title": "param",
        "description": "The document, page, layer, group, story or textFrame instance to  iterate the paragraphs in.",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            },
            {
              "type": "NameExpression",
              "name": "Group"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            },
            {
              "type": "NameExpression",
              "name": "TextFrame"
            }
          ]
        },
        "name": "container"
      },
      {
        "title": "param",
        "description": "Optional: The callback function to call with each paragraph. When this function returns false the loop stops. Passed arguments: `paragraph`, `loopCount`",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        },
        "name": "cb"
      },
      {
        "title": "return",
        "description": "A collection or an array of Paragraph objects.",
        "lineNumber": 10,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Paragraphs"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3911,
        "column": 0
      },
      "end": {
        "line": 3922,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3923,
          "column": 0
        },
        "end": {
          "line": 3928,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "container",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The document, page, layer, group, story or textFrame instance to  iterate the paragraphs in.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 93,
                      "offset": 92
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 93,
                  "offset": 92
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 93,
              "offset": 92
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            },
            {
              "type": "NameExpression",
              "name": "Group"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            },
            {
              "type": "NameExpression",
              "name": "TextFrame"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "cb",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional: The callback function to call with each paragraph. When this function returns false the loop stops. Passed arguments: ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 129,
                      "offset": 128
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "paragraph",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 129,
                      "offset": 128
                    },
                    "end": {
                      "line": 1,
                      "column": 140,
                      "offset": 139
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 140,
                      "offset": 139
                    },
                    "end": {
                      "line": 1,
                      "column": 142,
                      "offset": 141
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "loopCount",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 142,
                      "offset": 141
                    },
                    "end": {
                      "line": 1,
                      "column": 153,
                      "offset": 152
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 153,
                  "offset": 152
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 153,
              "offset": 152
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A collection or an array of Paragraph objects.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 47,
                      "offset": 46
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 47,
                  "offset": 46
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 47,
              "offset": 46
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Paragraphs"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "paragraphs",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "paragraphs",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".paragraphs"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Fills the given text frame and all linked text frames with random placeholder text. The placeholder text will be added at the end of any already existing text in the text frame.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 178,
                  "offset": 177
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 178,
              "offset": 177
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 178,
          "offset": 177
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Fills the given text frame and all linked text frames with random placeholder text. The placeholder text will be added at the end of any already existing text in the text frame.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Text",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "placeholder"
      },
      {
        "title": "param",
        "description": "The text frame to fill.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "TextFrame"
        },
        "name": "textFrame"
      },
      {
        "title": "return",
        "description": "The inserted placeholder text.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Text"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3930,
        "column": 0
      },
      "end": {
        "line": 3939,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3940,
          "column": 0
        },
        "end": {
          "line": 3949,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "textFrame",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The text frame to fill.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "TextFrame"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The inserted placeholder text.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Text"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "placeholder",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "placeholder",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".placeholder"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns a collection of all story objects in the given document or returns the parent story of a certain element. These elements can be text frames or text objects.\nIf a callback function is given, ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 34,
                  "offset": 198
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "stories()",
              "position": {
                "start": {
                  "line": 2,
                  "column": 34,
                  "offset": 198
                },
                "end": {
                  "line": 2,
                  "column": 45,
                  "offset": 209
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " calls this callback function on each story object of the given document or on the parent story of the given element. When the callback function returns false, the loop stops and the ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 45,
                  "offset": 209
                },
                "end": {
                  "line": 2,
                  "column": 228,
                  "offset": 392
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "stories()",
              "position": {
                "start": {
                  "line": 2,
                  "column": 228,
                  "offset": 392
                },
                "end": {
                  "line": 2,
                  "column": 239,
                  "offset": 403
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function returns an array of all stories up to this point.",
              "position": {
                "start": {
                  "line": 2,
                  "column": 239,
                  "offset": 403
                },
                "end": {
                  "line": 2,
                  "column": 298,
                  "offset": 462
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 298,
              "offset": 462
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 298,
          "offset": 462
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns a collection of all story objects in the given document or returns the parent story of a certain element. These elements can be text frames or text objects.\nIf a callback function is given, `stories()` calls this callback function on each story object of the given document or on the parent story of the given element. When the callback function returns false, the loop stops and the `stories()` function returns an array of all stories up to this point.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "Text",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "stories"
      },
      {
        "title": "param",
        "description": "The document instance to iterate the stories in or the element whose parent story to get.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Document"
        },
        "name": "container"
      },
      {
        "title": "param",
        "description": "Optional: The callback function to call with each story. When this function returns false the loop stops. Passed arguments: `story`, `loopCount`",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        },
        "name": "cb"
      },
      {
        "title": "return",
        "description": "A collection or an array of Story objects.",
        "lineNumber": 10,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Stories"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        }
      },
      {
        "title": "example",
        "description": "stories(container(), function(story, loopCount){\n  println(\"Number of words in each Story:\");\n  println(story.words.length);\n});",
        "lineNumber": 12
      }
    ],
    "loc": {
      "start": {
        "line": 3951,
        "column": 0
      },
      "end": {
        "line": 3968,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3969,
          "column": 0
        },
        "end": {
          "line": 3985,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "stories(container(), function(story, loopCount){\n  println(\"Number of words in each Story:\");\n  println(story.words.length);\n});"
      }
    ],
    "params": [
      {
        "title": "param",
        "name": "container",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The document instance to iterate the stories in or the element whose parent story to get.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 90,
                      "offset": 89
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 90,
                  "offset": 89
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 90,
              "offset": 89
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Document"
        }
      },
      {
        "title": "param",
        "name": "cb",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional: The callback function to call with each story. When this function returns false the loop stops. Passed arguments: ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 125,
                      "offset": 124
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "story",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 125,
                      "offset": 124
                    },
                    "end": {
                      "line": 1,
                      "column": 132,
                      "offset": 131
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 132,
                      "offset": 131
                    },
                    "end": {
                      "line": 1,
                      "column": 134,
                      "offset": 133
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "loopCount",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 134,
                      "offset": 133
                    },
                    "end": {
                      "line": 1,
                      "column": 145,
                      "offset": 144
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 145,
                  "offset": 144
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 145,
              "offset": 144
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A collection or an array of Story objects.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 43,
              "offset": 42
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Stories"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "stories",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "stories",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".stories"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns a collection of all text style range objects in the given container. A text style range is a continuous range of identically formatted text (i.e., three consecutive red words in an otherwise black text of the same style would form a text style range). The container object can be a Document, Page, Layer, Group, Story, Text Frame, Paragraph, Line or Word.\nIf a callback function is given, ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 34,
                  "offset": 397
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "textStyleRanges()",
              "position": {
                "start": {
                  "line": 2,
                  "column": 34,
                  "offset": 397
                },
                "end": {
                  "line": 2,
                  "column": 53,
                  "offset": 416
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " calls this callback function on each text style range object of the given container. When the callback function returns false, the loop stops and the ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 53,
                  "offset": 416
                },
                "end": {
                  "line": 2,
                  "column": 204,
                  "offset": 567
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "textStyleRanges()",
              "position": {
                "start": {
                  "line": 2,
                  "column": 204,
                  "offset": 567
                },
                "end": {
                  "line": 2,
                  "column": 223,
                  "offset": 586
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function returns an array of all text style ranges up to this point.",
              "position": {
                "start": {
                  "line": 2,
                  "column": 223,
                  "offset": 586
                },
                "end": {
                  "line": 2,
                  "column": 292,
                  "offset": 655
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 292,
              "offset": 655
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 292,
          "offset": 655
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns a collection of all text style range objects in the given container. A text style range is a continuous range of identically formatted text (i.e., three consecutive red words in an otherwise black text of the same style would form a text style range). The container object can be a Document, Page, Layer, Group, Story, Text Frame, Paragraph, Line or Word.\nIf a callback function is given, `textStyleRanges()` calls this callback function on each text style range object of the given container. When the callback function returns false, the loop stops and the `textStyleRanges()` function returns an array of all text style ranges up to this point.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "Text",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "textStyleRanges"
      },
      {
        "title": "param",
        "description": "The document, page, layer, group, story, textFrame, paragraph, line or word instance to iterate the text style ranges in.",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            },
            {
              "type": "NameExpression",
              "name": "Group"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            },
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "Paragraph"
            },
            {
              "type": "NameExpression",
              "name": "Line"
            },
            {
              "type": "NameExpression",
              "name": "Word"
            }
          ]
        },
        "name": "container"
      },
      {
        "title": "param",
        "description": "Optional: The callback function to call with each text style range. When this function returns false the loop stops. Passed arguments: `textStyleRange`, `loopCount`",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        },
        "name": "cb"
      },
      {
        "title": "return",
        "description": "A collection or an array of TextStyleRange objects.",
        "lineNumber": 10,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "TextStyleRanges"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3987,
        "column": 0
      },
      "end": {
        "line": 3998,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3999,
          "column": 0
        },
        "end": {
          "line": 4004,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "container",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The document, page, layer, group, story, textFrame, paragraph, line or word instance to iterate the text style ranges in.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 122,
                      "offset": 121
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 122,
                  "offset": 121
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 122,
              "offset": 121
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            },
            {
              "type": "NameExpression",
              "name": "Group"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            },
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "Paragraph"
            },
            {
              "type": "NameExpression",
              "name": "Line"
            },
            {
              "type": "NameExpression",
              "name": "Word"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "cb",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional: The callback function to call with each text style range. When this function returns false the loop stops. Passed arguments: ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 136,
                      "offset": 135
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "textStyleRange",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 136,
                      "offset": 135
                    },
                    "end": {
                      "line": 1,
                      "column": 152,
                      "offset": 151
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 152,
                      "offset": 151
                    },
                    "end": {
                      "line": 1,
                      "column": 154,
                      "offset": 153
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "loopCount",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 154,
                      "offset": 153
                    },
                    "end": {
                      "line": 1,
                      "column": 165,
                      "offset": 164
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 165,
                  "offset": 164
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 165,
              "offset": 164
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A collection or an array of TextStyleRange objects.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 52,
                      "offset": 51
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 52,
                  "offset": 51
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 52,
              "offset": 51
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "TextStyleRanges"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "textStyleRanges",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "textStyleRanges",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".textStyleRanges"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns a collection of all word objects in the given container. The container object can be a Document, Page, Layer, Group, Story, Text Frame, Paragraph or Line.\nIf a callback function is given, ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 34,
                  "offset": 196
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "words()",
              "position": {
                "start": {
                  "line": 2,
                  "column": 34,
                  "offset": 196
                },
                "end": {
                  "line": 2,
                  "column": 43,
                  "offset": 205
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " calls this callback function on each word object of the given container. When the callback function returns false, the loop stops and the ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 43,
                  "offset": 205
                },
                "end": {
                  "line": 2,
                  "column": 182,
                  "offset": 344
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "words()",
              "position": {
                "start": {
                  "line": 2,
                  "column": 182,
                  "offset": 344
                },
                "end": {
                  "line": 2,
                  "column": 191,
                  "offset": 353
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function returns an array of all words up to this point.",
              "position": {
                "start": {
                  "line": 2,
                  "column": 191,
                  "offset": 353
                },
                "end": {
                  "line": 2,
                  "column": 248,
                  "offset": 410
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 248,
              "offset": 410
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 248,
          "offset": 410
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns a collection of all word objects in the given container. The container object can be a Document, Page, Layer, Group, Story, Text Frame, Paragraph or Line.\nIf a callback function is given, `words()` calls this callback function on each word object of the given container. When the callback function returns false, the loop stops and the `words()` function returns an array of all words up to this point.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "Text",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "words"
      },
      {
        "title": "param",
        "description": "The document, page, layer, group, story, textFrame, paragraph or line instance to iterate the words in.",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            },
            {
              "type": "NameExpression",
              "name": "Group"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            },
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "Paragraph"
            },
            {
              "type": "NameExpression",
              "name": "Line"
            }
          ]
        },
        "name": "container"
      },
      {
        "title": "param",
        "description": "Optional: The callback function to call with each word. When this function returns false the loop stops. Passed arguments: `word`, `loopCount`",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        },
        "name": "cb"
      },
      {
        "title": "return",
        "description": "A collection or an array of Word objects.",
        "lineNumber": 10,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Words"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 4006,
        "column": 0
      },
      "end": {
        "line": 4017,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4018,
          "column": 0
        },
        "end": {
          "line": 4023,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "container",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The document, page, layer, group, story, textFrame, paragraph or line instance to iterate the words in.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 104,
                      "offset": 103
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 104,
                  "offset": 103
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 104,
              "offset": 103
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            },
            {
              "type": "NameExpression",
              "name": "Group"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            },
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "Paragraph"
            },
            {
              "type": "NameExpression",
              "name": "Line"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "cb",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional: The callback function to call with each word. When this function returns false the loop stops. Passed arguments: ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 124,
                      "offset": 123
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "word",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 124,
                      "offset": 123
                    },
                    "end": {
                      "line": 1,
                      "column": 130,
                      "offset": 129
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 130,
                      "offset": 129
                    },
                    "end": {
                      "line": 1,
                      "column": 132,
                      "offset": 131
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "loopCount",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 132,
                      "offset": 131
                    },
                    "end": {
                      "line": 1,
                      "column": 143,
                      "offset": 142
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 143,
                  "offset": 142
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 143,
              "offset": 142
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A collection or an array of Word objects.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 42,
                      "offset": 41
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 42,
              "offset": 41
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Words"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "words",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "words",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".words"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Suspends the calling thread for a number of milliseconds.\nDuring a sleep period, checks at 100 millisecond intervals to see whether the sleep should be terminated.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 106,
                  "offset": 163
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 106,
              "offset": 163
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 106,
          "offset": 163
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Suspends the calling thread for a number of milliseconds.\nDuring a sleep period, checks at 100 millisecond intervals to see whether the sleep should be terminated.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "delay"
      },
      {
        "title": "param",
        "description": "The delay time in milliseconds.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "milliseconds"
      }
    ],
    "loc": {
      "start": {
        "line": 4163,
        "column": 0
      },
      "end": {
        "line": 4171,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4172,
          "column": 0
        },
        "end": {
          "line": 4174,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "milliseconds",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The delay time in milliseconds.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "delay",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "delay",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".delay"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the framerate per second to determine how often ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "loop()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "end": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is called per second. If the processor is not fast enough to maintain the specified rate, the frame rate will not be achieved. Setting the frame rate within ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "end": {
                  "line": 1,
                  "column": 220,
                  "offset": 219
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "setup()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 220,
                  "offset": 219
                },
                "end": {
                  "line": 1,
                  "column": 229,
                  "offset": 228
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is recommended. The default rate is 25 frames per second. Calling ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 229,
                  "offset": 228
                },
                "end": {
                  "line": 1,
                  "column": 296,
                  "offset": 295
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "frameRate()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 296,
                  "offset": 295
                },
                "end": {
                  "line": 1,
                  "column": 309,
                  "offset": 308
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " with no arguments returns the currently set framerate.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 309,
                  "offset": 308
                },
                "end": {
                  "line": 1,
                  "column": 364,
                  "offset": 363
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 364,
              "offset": 363
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 364,
          "offset": 363
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Sets the framerate per second to determine how often `loop()` is called per second. If the processor is not fast enough to maintain the specified rate, the frame rate will not be achieved. Setting the frame rate within `setup()` is recommended. The default rate is 25 frames per second. Calling `frameRate()` with no arguments returns the currently set framerate.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "frameRate"
      },
      {
        "title": "param",
        "description": "Frames per second.",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "fps"
      },
      {
        "title": "return",
        "description": "Currently set frame rate.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 4176,
        "column": 0
      },
      "end": {
        "line": 4184,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4185,
          "column": 0
        },
        "end": {
          "line": 4197,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "fps",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Frames per second.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Currently set frame rate.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 26,
                  "offset": 25
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 26,
              "offset": 25
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "frameRate",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "frameRate",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".frameRate"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "System variable which stores the height of the current page.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 61,
                  "offset": 60
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 61,
              "offset": 60
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 61,
          "offset": 60
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "System variable which stores the height of the current page.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 3
      },
      {
        "title": "property",
        "description": "Height of the current page.",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "height"
      }
    ],
    "loc": {
      "start": {
        "line": 4199,
        "column": 0
      },
      "end": {
        "line": 4204,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4205,
          "column": 0
        },
        "end": {
          "line": 4205,
          "column": 18
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "height",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Height of the current page.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "height",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "height",
        "scope": "static"
      }
    ],
    "namespace": ".height"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Inspects a given object or any other data item and prints the result to the console. This is useful for inspecting or debugging any kind of variable or data item. The optional settings object allows to control the function's output. The following parameters can be set in the settings object:",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 293,
                  "offset": 292
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 293,
              "offset": 292
            },
            "indent": []
          }
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "loose": false,
          "children": [
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "showProps",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 3,
                          "offset": 295
                        },
                        "end": {
                          "line": 2,
                          "column": 14,
                          "offset": 306
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": Show or hide properties. Default: ",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 14,
                          "offset": 306
                        },
                        "end": {
                          "line": 2,
                          "column": 50,
                          "offset": 342
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "true",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 50,
                          "offset": 342
                        },
                        "end": {
                          "line": 2,
                          "column": 56,
                          "offset": 348
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 3,
                      "offset": 295
                    },
                    "end": {
                      "line": 2,
                      "column": 56,
                      "offset": 348
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 2,
                  "column": 1,
                  "offset": 293
                },
                "end": {
                  "line": 2,
                  "column": 56,
                  "offset": 348
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "showValues",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 3,
                          "offset": 351
                        },
                        "end": {
                          "line": 3,
                          "column": 15,
                          "offset": 363
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": Show or hide values. Default: ",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 15,
                          "offset": 363
                        },
                        "end": {
                          "line": 3,
                          "column": 47,
                          "offset": 395
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "true",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 47,
                          "offset": 395
                        },
                        "end": {
                          "line": 3,
                          "column": 53,
                          "offset": 401
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 3,
                      "offset": 351
                    },
                    "end": {
                      "line": 3,
                      "column": 53,
                      "offset": 401
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 349
                },
                "end": {
                  "line": 3,
                  "column": 53,
                  "offset": 401
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "showMethods",
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 3,
                          "offset": 404
                        },
                        "end": {
                          "line": 4,
                          "column": 16,
                          "offset": 417
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": Show or hide methods. Default: ",
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 16,
                          "offset": 417
                        },
                        "end": {
                          "line": 4,
                          "column": 49,
                          "offset": 450
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "false",
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 49,
                          "offset": 450
                        },
                        "end": {
                          "line": 4,
                          "column": 56,
                          "offset": 457
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 3,
                      "offset": 404
                    },
                    "end": {
                      "line": 4,
                      "column": 56,
                      "offset": 457
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 4,
                  "column": 1,
                  "offset": 402
                },
                "end": {
                  "line": 4,
                  "column": 56,
                  "offset": 457
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "maxLevel",
                      "position": {
                        "start": {
                          "line": 5,
                          "column": 3,
                          "offset": 460
                        },
                        "end": {
                          "line": 5,
                          "column": 13,
                          "offset": 470
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": Chooses how many levels of properties should be inspected recursively. Default: ",
                      "position": {
                        "start": {
                          "line": 5,
                          "column": 13,
                          "offset": 470
                        },
                        "end": {
                          "line": 5,
                          "column": 95,
                          "offset": 552
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "1",
                      "position": {
                        "start": {
                          "line": 5,
                          "column": 95,
                          "offset": 552
                        },
                        "end": {
                          "line": 5,
                          "column": 98,
                          "offset": 555
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 3,
                      "offset": 460
                    },
                    "end": {
                      "line": 5,
                      "column": 98,
                      "offset": 555
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 458
                },
                "end": {
                  "line": 5,
                  "column": 98,
                  "offset": 555
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "propList",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 3,
                          "offset": 558
                        },
                        "end": {
                          "line": 6,
                          "column": 13,
                          "offset": 568
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": Allows to pass an array of property names to show. If ",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 13,
                          "offset": 568
                        },
                        "end": {
                          "line": 6,
                          "column": 69,
                          "offset": 624
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "propList",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 69,
                          "offset": 624
                        },
                        "end": {
                          "line": 6,
                          "column": 79,
                          "offset": 634
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " is not set all properties will be shown. Default: ",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 79,
                          "offset": 634
                        },
                        "end": {
                          "line": 6,
                          "column": 130,
                          "offset": 685
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "[]",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 130,
                          "offset": 685
                        },
                        "end": {
                          "line": 6,
                          "column": 134,
                          "offset": 689
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " (no propList)\nIf no settings object is set, the default values will be used.",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 134,
                          "offset": 689
                        },
                        "end": {
                          "line": 7,
                          "column": 63,
                          "offset": 766
                        },
                        "indent": [
                          1
                        ]
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 3,
                      "offset": 558
                    },
                    "end": {
                      "line": 7,
                      "column": 63,
                      "offset": 766
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 6,
                  "column": 1,
                  "offset": 556
                },
                "end": {
                  "line": 7,
                  "column": 63,
                  "offset": 766
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 2,
              "column": 1,
              "offset": 293
            },
            "end": {
              "line": 7,
              "column": 63,
              "offset": 766
            },
            "indent": [
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 7,
          "column": 63,
          "offset": 766
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Inspects a given object or any other data item and prints the result to the console. This is useful for inspecting or debugging any kind of variable or data item. The optional settings object allows to control the function's output. The following parameters can be set in the settings object:\n- `showProps`: Show or hide properties. Default: `true`\n- `showValues`: Show or hide values. Default: `true`\n- `showMethods`: Show or hide methods. Default: `false`\n- `maxLevel`: Chooses how many levels of properties should be inspected recursively. Default: `1`\n- `propList`: Allows to pass an array of property names to show. If `propList` is not set all properties will be shown. Default: `[]` (no propList)\nIf no settings object is set, the default values will be used.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 9
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 10,
        "name": "inspect"
      },
      {
        "title": "param",
        "description": "An object or any other data item to be inspected.",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "obj"
      },
      {
        "title": "param",
        "description": "A settings object to control the function's behavior.",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        },
        "name": "settings"
      },
      {
        "title": "param",
        "description": "Show or hide properties. Default: `true`",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Boolean"
          }
        },
        "name": "settings.showProps"
      },
      {
        "title": "param",
        "description": "Show or hide values. Default: `true`",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Boolean"
          }
        },
        "name": "settings.showValues"
      },
      {
        "title": "param",
        "description": "Show or hide methods. Default: `false`",
        "lineNumber": 16,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Boolean"
          }
        },
        "name": "settings.showMethods"
      },
      {
        "title": "param",
        "description": "How many levels of properties should be inspected recursively. Default: `1`",
        "lineNumber": 17,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "settings.maxLevel"
      },
      {
        "title": "param",
        "description": "Array of properties to show. Default: `[]` (no propList)",
        "lineNumber": 18,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          }
        },
        "name": "settings.propList"
      },
      {
        "title": "example",
        "description": "inspect(\"foo\");",
        "lineNumber": 20,
        "caption": "Inspecting a string"
      },
      {
        "title": "example",
        "description": "inspect(page(), {showMethods: true, maxLevel: 2})",
        "lineNumber": 23,
        "caption": "Inspecting the current page, its methods and an additional level of properties"
      },
      {
        "title": "example",
        "description": "var myEllipse = ellipse(0, 0, 10, 10);\ninspect(myEllipse, {maxLevel: 2, propList: [\"geometricBounds, strokeWeight\"]});",
        "lineNumber": 26,
        "caption": "Inspecting an ellipse, listing only the properties \"geometricBounds\" and \"strokeWeight\""
      }
    ],
    "loc": {
      "start": {
        "line": 4207,
        "column": 0
      },
      "end": {
        "line": 4236,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4237,
          "column": 0
        },
        "end": {
          "line": 4395,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "inspect(\"foo\");",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Inspecting a string",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        }
      },
      {
        "description": "inspect(page(), {showMethods: true, maxLevel: 2})",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Inspecting the current page, its methods and an additional level of properties",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 79,
                      "offset": 78
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 79,
                  "offset": 78
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 79,
              "offset": 78
            }
          }
        }
      },
      {
        "description": "var myEllipse = ellipse(0, 0, 10, 10);\ninspect(myEllipse, {maxLevel: 2, propList: [\"geometricBounds, strokeWeight\"]});",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Inspecting an ellipse, listing only the properties \"geometricBounds\" and \"strokeWeight\"",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 88,
                      "offset": 87
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 88,
                  "offset": 87
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 88,
              "offset": 87
            }
          }
        }
      }
    ],
    "params": [
      {
        "title": "param",
        "name": "obj",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An object or any other data item to be inspected.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 50,
                      "offset": 49
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 50,
                  "offset": 49
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 50,
              "offset": 49
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "settings",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A settings object to control the function's behavior.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 54,
                      "offset": 53
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 54,
              "offset": 53
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        },
        "properties": [
          {
            "title": "param",
            "name": "settings.showProps",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Show or hide properties. Default: ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 35,
                          "offset": 34
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "true",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 35,
                          "offset": 34
                        },
                        "end": {
                          "line": 1,
                          "column": 41,
                          "offset": 40
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 41,
                      "offset": 40
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                }
              }
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "Boolean"
              }
            }
          },
          {
            "title": "param",
            "name": "settings.showValues",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Show or hide values. Default: ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 31,
                          "offset": 30
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "true",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 31,
                          "offset": 30
                        },
                        "end": {
                          "line": 1,
                          "column": 37,
                          "offset": 36
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                }
              }
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "Boolean"
              }
            }
          },
          {
            "title": "param",
            "name": "settings.showMethods",
            "lineNumber": 16,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Show or hide methods. Default: ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 32,
                          "offset": 31
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "false",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 32,
                          "offset": 31
                        },
                        "end": {
                          "line": 1,
                          "column": 39,
                          "offset": 38
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                }
              }
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "Boolean"
              }
            }
          },
          {
            "title": "param",
            "name": "settings.maxLevel",
            "lineNumber": 17,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "How many levels of properties should be inspected recursively. Default: ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 73,
                          "offset": 72
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "1",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 73,
                          "offset": 72
                        },
                        "end": {
                          "line": 1,
                          "column": 76,
                          "offset": 75
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 76,
                      "offset": 75
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 76,
                  "offset": 75
                }
              }
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          },
          {
            "title": "param",
            "name": "settings.propList",
            "lineNumber": 18,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Array of properties to show. Default: ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 39,
                          "offset": 38
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "[]",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 39,
                          "offset": 38
                        },
                        "end": {
                          "line": 1,
                          "column": 43,
                          "offset": 42
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " (no propList)",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 43,
                          "offset": 42
                        },
                        "end": {
                          "line": 1,
                          "column": 57,
                          "offset": 56
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 57,
                      "offset": 56
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 57,
                  "offset": 56
                }
              }
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              }
            }
          }
        ]
      },
      {
        "title": "param",
        "name": "level",
        "lineNumber": 4237
      },
      {
        "title": "param",
        "name": "branchArray",
        "lineNumber": 4237
      },
      {
        "title": "param",
        "name": "branchEnd",
        "lineNumber": 4237
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "inspect",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "inspect",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".inspect"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Print numerous information about the current environment to the console.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 73,
                  "offset": 72
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 73,
              "offset": 72
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 73,
          "offset": 72
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Print numerous information about the current environment to the console.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "printInfo"
      }
    ],
    "loc": {
      "start": {
        "line": 4397,
        "column": 0
      },
      "end": {
        "line": 4402,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4403,
          "column": 0
        },
        "end": {
          "line": 4413,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "printInfo",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "printInfo",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".printInfo"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Get the folder of the active document as a Folder object. Use .absoluteURI to access a string representation of the folder path.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 129,
                  "offset": 128
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 129,
              "offset": 128
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 129,
          "offset": 128
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Get the folder of the active document as a Folder object. Use .absoluteURI to access a string representation of the folder path.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "projectFolder"
      },
      {
        "title": "return",
        "description": "The folder of the the active document",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Folder"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 4415,
        "column": 0
      },
      "end": {
        "line": 4422,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4423,
          "column": 0
        },
        "end": {
          "line": 4428,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The folder of the the active document",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 38,
                  "offset": 37
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 38,
              "offset": 37
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Folder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "projectFolder",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "projectFolder",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".projectFolder"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets a property of an object or of any other given data item to the specified value. Alternatively an object of key value pairs can be used as the second argument to set several properties to specified values at once. To retrieve a list of available properties for the different data types, the inspect() method can be used.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 325,
                  "offset": 324
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 325,
              "offset": 324
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 325,
          "offset": 324
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Sets a property of an object or of any other given data item to the specified value. Alternatively an object of key value pairs can be used as the second argument to set several properties to specified values at once. To retrieve a list of available properties for the different data types, the inspect() method can be used.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "property"
      },
      {
        "title": "param",
        "description": "An object or any other data item whose properties to change.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Any"
        },
        "name": "obj"
      },
      {
        "title": "param",
        "description": "A string describing an object's property or alternatively an object containing key value pairs.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        },
        "name": "prop"
      },
      {
        "title": "param",
        "description": "A value of the appropriate type to set the object's property to.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Any"
          }
        },
        "name": "value"
      },
      {
        "title": "return",
        "description": "The object or other data item with the newly set property.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Any"
        }
      },
      {
        "title": "example",
        "description": "var ell = ellipse(100, 100, 50, 50);\nproperty(ell, \"name\", \"Red Circle\");\nproperty(ell, \"fillColor\", color(255, 0, 0));",
        "lineNumber": 11,
        "caption": "Sets name and fill color of an ellipse"
      },
      {
        "title": "example",
        "description": "var blueSquare = rect(100, 100, 50, 50);\nvar squareProps = {\n  name: \"Blue Square\",\n  fillColor: color(0, 0, 255),\n  locked: true\n}\nproperty(blueSquare, squareProps);",
        "lineNumber": 16,
        "caption": "Sets name and fill color of a rectangle and locks it, using an object with key value pairs"
      }
    ],
    "loc": {
      "start": {
        "line": 4430,
        "column": 0
      },
      "end": {
        "line": 4454,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4455,
          "column": 0
        },
        "end": {
          "line": 4490,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "var ell = ellipse(100, 100, 50, 50);\nproperty(ell, \"name\", \"Red Circle\");\nproperty(ell, \"fillColor\", color(255, 0, 0));",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Sets name and fill color of an ellipse",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 39,
              "offset": 38
            }
          }
        }
      },
      {
        "description": "var blueSquare = rect(100, 100, 50, 50);\nvar squareProps = {\n  name: \"Blue Square\",\n  fillColor: color(0, 0, 255),\n  locked: true\n}\nproperty(blueSquare, squareProps);",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Sets name and fill color of a rectangle and locks it, using an object with key value pairs",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 91,
                      "offset": 90
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 91,
                  "offset": 90
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 91,
              "offset": 90
            }
          }
        }
      }
    ],
    "params": [
      {
        "title": "param",
        "name": "obj",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An object or any other data item whose properties to change.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 61,
                      "offset": 60
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 61,
                  "offset": 60
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 61,
              "offset": 60
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Any"
        }
      },
      {
        "title": "param",
        "name": "prop",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A string describing an object's property or alternatively an object containing key value pairs.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 96,
                      "offset": 95
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 96,
                  "offset": 95
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 96,
              "offset": 95
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "value",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A value of the appropriate type to set the object's property to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 65,
                      "offset": 64
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 65,
              "offset": 64
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Any"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The object or other data item with the newly set property.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 59,
                      "offset": 58
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 59,
                  "offset": 58
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 59,
              "offset": 58
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Any"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "property",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "property",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".property"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the size of the current document, if arguments are given. If only one argument is given, both the width and the height are set to this value. Alternatively, a string can be given as the first argument to apply an existing page size preset (",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 246,
                  "offset": 245
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "\"A4\"",
              "position": {
                "start": {
                  "line": 1,
                  "column": 246,
                  "offset": 245
                },
                "end": {
                  "line": 1,
                  "column": 252,
                  "offset": 251
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 252,
                  "offset": 251
                },
                "end": {
                  "line": 1,
                  "column": 254,
                  "offset": 253
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "\"Letter\"",
              "position": {
                "start": {
                  "line": 1,
                  "column": 254,
                  "offset": 253
                },
                "end": {
                  "line": 1,
                  "column": 264,
                  "offset": 263
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " etc.). In this case, either ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 264,
                  "offset": 263
                },
                "end": {
                  "line": 1,
                  "column": 293,
                  "offset": 292
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "PORTRAIT",
              "position": {
                "start": {
                  "line": 1,
                  "column": 293,
                  "offset": 292
                },
                "end": {
                  "line": 1,
                  "column": 303,
                  "offset": 302
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " or ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 303,
                  "offset": 302
                },
                "end": {
                  "line": 1,
                  "column": 307,
                  "offset": 306
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "LANDSCAPE",
              "position": {
                "start": {
                  "line": 1,
                  "column": 307,
                  "offset": 306
                },
                "end": {
                  "line": 1,
                  "column": 318,
                  "offset": 317
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " can be used as a second argument to determine the orientation of the page. If no argument is given, an object containing the current document's width and height is returned.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 318,
                  "offset": 317
                },
                "end": {
                  "line": 1,
                  "column": 492,
                  "offset": 491
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 492,
              "offset": 491
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 492,
          "offset": 491
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Sets the size of the current document, if arguments are given. If only one argument is given, both the width and the height are set to this value. Alternatively, a string can be given as the first argument to apply an existing page size preset (`\"A4\"`, `\"Letter\"` etc.). In this case, either `PORTRAIT` or `LANDSCAPE` can be used as a second argument to determine the orientation of the page. If no argument is given, an object containing the current document's width and height is returned.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "size"
      },
      {
        "title": "param",
        "description": "The desired width of the current document or the name of a page size preset.",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Number"
              },
              {
                "type": "NameExpression",
                "name": "String"
              }
            ]
          }
        },
        "name": "widthOrPageSize"
      },
      {
        "title": "param",
        "description": "The desired height of the current document. If not provided the width will be used as the height. If the first argument is a page size preset, the second argument can be used to set the orientation.",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Number"
              },
              {
                "type": "NameExpression",
                "name": "String"
              }
            ]
          }
        },
        "name": "heightOrOrientation"
      },
      {
        "title": "return",
        "description": "Object containing the current `width` and `height` of the document.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "example",
        "description": "size(70, 100);",
        "lineNumber": 10,
        "caption": "Sets the document size to 70 x 100 units"
      },
      {
        "title": "example",
        "description": "size(70);",
        "lineNumber": 13,
        "caption": "Sets the document size to 70 x 70"
      },
      {
        "title": "example",
        "description": "size(\"A4\");",
        "lineNumber": 16,
        "caption": "Sets the document size to A4, keeps the current orientation in place"
      },
      {
        "title": "example",
        "description": "size(\"A4\", LANDSCAPE);",
        "lineNumber": 19,
        "caption": "Sets the document size to A4, set the orientation to landscape"
      }
    ],
    "loc": {
      "start": {
        "line": 4492,
        "column": 0
      },
      "end": {
        "line": 4513,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4514,
          "column": 0
        },
        "end": {
          "line": 4557,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "size(70, 100);",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Sets the document size to 70 x 100 units",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 41,
                      "offset": 40
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 41,
              "offset": 40
            }
          }
        }
      },
      {
        "description": "size(70);",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Sets the document size to 70 x 70",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 34,
              "offset": 33
            }
          }
        }
      },
      {
        "description": "size(\"A4\");",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Sets the document size to A4, keeps the current orientation in place",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            }
          }
        }
      },
      {
        "description": "size(\"A4\", LANDSCAPE);",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Sets the document size to A4, set the orientation to landscape",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 63,
                      "offset": 62
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 63,
                  "offset": 62
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 63,
              "offset": 62
            }
          }
        }
      }
    ],
    "params": [
      {
        "title": "param",
        "name": "widthOrPageSize",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The desired width of the current document or the name of a page size preset.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 77,
                      "offset": 76
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 77,
                  "offset": 76
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 77,
              "offset": 76
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Number"
              },
              {
                "type": "NameExpression",
                "name": "String"
              }
            ]
          }
        }
      },
      {
        "title": "param",
        "name": "heightOrOrientation",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The desired height of the current document. If not provided the width will be used as the height. If the first argument is a page size preset, the second argument can be used to set the orientation.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 199,
                      "offset": 198
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 199,
                  "offset": 198
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 199,
              "offset": 198
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Number"
              },
              {
                "type": "NameExpression",
                "name": "String"
              }
            ]
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Object containing the current ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "width",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " and ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "height",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "end": {
                      "line": 1,
                      "column": 51,
                      "offset": 50
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " of the document.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 51,
                      "offset": 50
                    },
                    "end": {
                      "line": 1,
                      "column": 68,
                      "offset": 67
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 68,
                  "offset": 67
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 68,
              "offset": 67
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "size",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "size",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".size"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "System variable which stores the width of the current page.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 60,
              "offset": 59
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 60,
          "offset": 59
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "System variable which stores the width of the current page.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 3
      },
      {
        "title": "property",
        "description": "Width of the current page.",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "width"
      }
    ],
    "loc": {
      "start": {
        "line": 4559,
        "column": 0
      },
      "end": {
        "line": 4564,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4565,
          "column": 0
        },
        "end": {
          "line": 4565,
          "column": 17
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "width",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Width of the current page.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "width",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "width",
        "scope": "static"
      }
    ],
    "namespace": ".width"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The basil version",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 18,
          "offset": 17
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "The basil version",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 4
      },
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 5,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "VERSION"
      }
    ],
    "loc": {
      "start": {
        "line": 4591,
        "column": 0
      },
      "end": {
        "line": 4597,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4598,
          "column": 0
        },
        "end": {
          "line": 4598,
          "column": 22
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "VERSION",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "VERSION",
        "scope": "static"
      }
    ],
    "namespace": ".VERSION"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Adds an image to the document. If the image argument is given as a string the image file must be in the document's data directory which is in the same directory where the document is saved in. The image argument can also be a File instance which can be placed even before the document was saved. The second argument can either be the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 335,
                  "offset": 334
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "x",
              "position": {
                "start": {
                  "line": 1,
                  "column": 335,
                  "offset": 334
                },
                "end": {
                  "line": 1,
                  "column": 338,
                  "offset": 337
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " position of the frame to create or an instance of a rectangle, oval or polygon to place the image in. If an ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 338,
                  "offset": 337
                },
                "end": {
                  "line": 1,
                  "column": 447,
                  "offset": 446
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "x",
              "position": {
                "start": {
                  "line": 1,
                  "column": 447,
                  "offset": 446
                },
                "end": {
                  "line": 1,
                  "column": 450,
                  "offset": 449
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " position is given, a ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 450,
                  "offset": 449
                },
                "end": {
                  "line": 1,
                  "column": 472,
                  "offset": 471
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "y",
              "position": {
                "start": {
                  "line": 1,
                  "column": 472,
                  "offset": 471
                },
                "end": {
                  "line": 1,
                  "column": 475,
                  "offset": 474
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " position must be given, too. If ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 475,
                  "offset": 474
                },
                "end": {
                  "line": 1,
                  "column": 508,
                  "offset": 507
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "x",
              "position": {
                "start": {
                  "line": 1,
                  "column": 508,
                  "offset": 507
                },
                "end": {
                  "line": 1,
                  "column": 511,
                  "offset": 510
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 511,
                  "offset": 510
                },
                "end": {
                  "line": 1,
                  "column": 516,
                  "offset": 515
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "y",
              "position": {
                "start": {
                  "line": 1,
                  "column": 516,
                  "offset": 515
                },
                "end": {
                  "line": 1,
                  "column": 519,
                  "offset": 518
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " positions are given and width and height are not given, the frame's size gets set to the original image size.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 519,
                  "offset": 518
                },
                "end": {
                  "line": 1,
                  "column": 629,
                  "offset": 628
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 629,
              "offset": 628
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 629,
          "offset": 628
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Adds an image to the document. If the image argument is given as a string the image file must be in the document's data directory which is in the same directory where the document is saved in. The image argument can also be a File instance which can be placed even before the document was saved. The second argument can either be the `x` position of the frame to create or an instance of a rectangle, oval or polygon to place the image in. If an `x` position is given, a `y` position must be given, too. If `x` and `y` positions are given and width and height are not given, the frame's size gets set to the original image size.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Image",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "image"
      },
      {
        "title": "param",
        "description": "The image file name in the document's data directory or a File instance.",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        },
        "name": "img"
      },
      {
        "title": "param",
        "description": "The `x` position on the current page or the item instance to place the image in.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Rectangle"
            },
            {
              "type": "NameExpression",
              "name": "Oval"
            },
            {
              "type": "NameExpression",
              "name": "Polygon"
            },
            {
              "type": "NameExpression",
              "name": "TextFrame"
            }
          ]
        },
        "name": "x"
      },
      {
        "title": "param",
        "description": "The `y` position on the current page. Ignored if `x` is not a number.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "y"
      },
      {
        "title": "param",
        "description": "The width of the rectangle to add the image to. Ignored if `x` is not a number.",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "w"
      },
      {
        "title": "param",
        "description": "The height of the rectangle to add the image to. Ignored if `x` is not a number.",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "h"
      },
      {
        "title": "return",
        "description": "The item instance the image was placed in.",
        "lineNumber": 11,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Rectangle"
            },
            {
              "type": "NameExpression",
              "name": "Oval"
            },
            {
              "type": "NameExpression",
              "name": "Polygon"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 4608,
        "column": 0
      },
      "end": {
        "line": 4620,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4621,
          "column": 0
        },
        "end": {
          "line": 4703,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "img",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The image file name in the document's data directory or a File instance.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 73,
                      "offset": 72
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 73,
                  "offset": 72
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 73,
              "offset": 72
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "x",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 5,
                      "offset": 4
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "x",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 5,
                      "offset": 4
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " position on the current page or the item instance to place the image in.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 1,
                      "column": 81,
                      "offset": 80
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 81,
                  "offset": 80
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 81,
              "offset": 80
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Rectangle"
            },
            {
              "type": "NameExpression",
              "name": "Oval"
            },
            {
              "type": "NameExpression",
              "name": "Polygon"
            },
            {
              "type": "NameExpression",
              "name": "TextFrame"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "y",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 5,
                      "offset": 4
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "y",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 5,
                      "offset": 4
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " position on the current page. Ignored if ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 1,
                      "column": 50,
                      "offset": 49
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "x",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 50,
                      "offset": 49
                    },
                    "end": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " is not a number.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "end": {
                      "line": 1,
                      "column": 70,
                      "offset": 69
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 70,
                  "offset": 69
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 70,
              "offset": 69
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "title": "param",
        "name": "w",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The width of the rectangle to add the image to. Ignored if ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 60,
                      "offset": 59
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "x",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 60,
                      "offset": 59
                    },
                    "end": {
                      "line": 1,
                      "column": 63,
                      "offset": 62
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " is not a number.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 63,
                      "offset": 62
                    },
                    "end": {
                      "line": 1,
                      "column": 80,
                      "offset": 79
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 80,
                  "offset": 79
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 80,
              "offset": 79
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "title": "param",
        "name": "h",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The height of the rectangle to add the image to. Ignored if ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 61,
                      "offset": 60
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "x",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 61,
                      "offset": 60
                    },
                    "end": {
                      "line": 1,
                      "column": 64,
                      "offset": 63
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " is not a number.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 64,
                      "offset": 63
                    },
                    "end": {
                      "line": 1,
                      "column": 81,
                      "offset": 80
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 81,
                  "offset": 80
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 81,
              "offset": 80
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The item instance the image was placed in.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 43,
              "offset": 42
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Rectangle"
            },
            {
              "type": "NameExpression",
              "name": "Oval"
            },
            {
              "type": "NameExpression",
              "name": "Polygon"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "image",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "image",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".image"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Modifies the location from which images draw. The default mode is ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 67,
                  "offset": 66
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "CORNER",
              "position": {
                "start": {
                  "line": 1,
                  "column": 67,
                  "offset": 66
                },
                "end": {
                  "line": 1,
                  "column": 75,
                  "offset": 74
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", which specifies the location to be the upper left corner and uses the fourth and fifth parameters of ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 75,
                  "offset": 74
                },
                "end": {
                  "line": 1,
                  "column": 178,
                  "offset": 177
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "image()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 178,
                  "offset": 177
                },
                "end": {
                  "line": 1,
                  "column": 187,
                  "offset": 186
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " to set the image's width and height. The syntax ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 187,
                  "offset": 186
                },
                "end": {
                  "line": 1,
                  "column": 236,
                  "offset": 235
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "imageMode(CORNERS)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 236,
                  "offset": 235
                },
                "end": {
                  "line": 1,
                  "column": 256,
                  "offset": 255
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " uses the second and third parameters of ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 256,
                  "offset": 255
                },
                "end": {
                  "line": 1,
                  "column": 297,
                  "offset": 296
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "image()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 297,
                  "offset": 296
                },
                "end": {
                  "line": 1,
                  "column": 306,
                  "offset": 305
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " to set the location of one corner of the image and uses the fourth and fifth parameters to set the opposite corner. Use ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 306,
                  "offset": 305
                },
                "end": {
                  "line": 1,
                  "column": 427,
                  "offset": 426
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "imageMode(CENTER)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 427,
                  "offset": 426
                },
                "end": {
                  "line": 1,
                  "column": 446,
                  "offset": 445
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " to draw images centered at the given ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 446,
                  "offset": 445
                },
                "end": {
                  "line": 1,
                  "column": 484,
                  "offset": 483
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "x",
              "position": {
                "start": {
                  "line": 1,
                  "column": 484,
                  "offset": 483
                },
                "end": {
                  "line": 1,
                  "column": 487,
                  "offset": 486
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 487,
                  "offset": 486
                },
                "end": {
                  "line": 1,
                  "column": 492,
                  "offset": 491
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "y",
              "position": {
                "start": {
                  "line": 1,
                  "column": 492,
                  "offset": 491
                },
                "end": {
                  "line": 1,
                  "column": 495,
                  "offset": 494
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " position. If no parameter is passed the currently set mode is returned as String.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 495,
                  "offset": 494
                },
                "end": {
                  "line": 1,
                  "column": 577,
                  "offset": 576
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 577,
              "offset": 576
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 577,
          "offset": 576
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Modifies the location from which images draw. The default mode is `CORNER`, which specifies the location to be the upper left corner and uses the fourth and fifth parameters of `image()` to set the image's width and height. The syntax `imageMode(CORNERS)` uses the second and third parameters of `image()` to set the location of one corner of the image and uses the fourth and fifth parameters to set the opposite corner. Use `imageMode(CENTER)` to draw images centered at the given `x` and `y` position. If no parameter is passed the currently set mode is returned as String.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Image",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "imageMode"
      },
      {
        "title": "param",
        "description": "Either `CORNER`, `CORNERS`, or `CENTER`.",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        },
        "name": "mode"
      },
      {
        "title": "return",
        "description": "The current mode.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 4705,
        "column": 0
      },
      "end": {
        "line": 4713,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4714,
          "column": 0
        },
        "end": {
          "line": 4723,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "mode",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Either ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "CORNER",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "CORNERS",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", or ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "CENTER",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "end": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "end": {
                      "line": 1,
                      "column": 41,
                      "offset": 40
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 41,
              "offset": 40
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current mode.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "imageMode",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "imageMode",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".imageMode"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Executes a shell command and returns the result, currently Mac only.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "BE CAREFUL!",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 70
                },
                "end": {
                  "line": 3,
                  "column": 12,
                  "offset": 81
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 70
            },
            "end": {
              "line": 3,
              "column": 12,
              "offset": 81
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 12,
          "offset": 81
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Executes a shell command and returns the result, currently Mac only.\n\nBE CAREFUL!",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Input",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "shellExecute"
      },
      {
        "title": "param",
        "description": "The shell command to execute",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "cmd"
      },
      {
        "title": "return",
        "description": "{ description_of_the_return_value }",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 4733,
        "column": 0
      },
      "end": {
        "line": 4743,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4744,
          "column": 0
        },
        "end": {
          "line": 4754,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "cmd",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The shell command to execute",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "{ description_of_the_return_value }",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 36,
                      "offset": 35
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 36,
              "offset": 35
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "shellExecute",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "shellExecute",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".shellExecute"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Downloads an URL to a file, currently Mac only.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 48,
              "offset": 47
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 48,
          "offset": 47
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Downloads an URL to a file, currently Mac only.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Input",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Files",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "download"
      },
      {
        "title": "param",
        "description": "The download url",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "url"
      },
      {
        "title": "param",
        "description": "A relative file path in the project folder or a File instance",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "String"
              },
              {
                "type": "NameExpression",
                "name": "File"
              }
            ]
          }
        },
        "name": "file"
      }
    ],
    "loc": {
      "start": {
        "line": 4760,
        "column": 0
      },
      "end": {
        "line": 4769,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4770,
          "column": 0
        },
        "end": {
          "line": 4857,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "url",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The download url",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      },
      {
        "title": "param",
        "name": "file",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A relative file path in the project folder or a File instance",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 62,
                      "offset": 61
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 62,
              "offset": 61
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "String"
              },
              {
                "type": "NameExpression",
                "name": "File"
              }
            ]
          }
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "download",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "download",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".download"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns a file object.\nNote that the resulting file object can either refer to an already existing file or if the file does not exist, it can create a preliminary \"virtual\" file that refers to a file that could be created later (i.e. by an export command).",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 234,
                  "offset": 256
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 234,
              "offset": 256
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 234,
          "offset": 256
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns a file object.\nNote that the resulting file object can either refer to an already existing file or if the file does not exist, it can create a preliminary \"virtual\" file that refers to a file that could be created later (i.e. by an export command).",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Input",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "Files",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "file"
      },
      {
        "title": "param",
        "description": "The file path.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "filePath"
      },
      {
        "title": "return",
        "description": "File at the given path.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "File"
        }
      },
      {
        "title": "example",
        "description": "var myImage = file(\"~/Desktop/myImage.jpg\");\nimage(myImage, 0, 0);",
        "lineNumber": 11,
        "caption": "Get an image file from the desktop and place it in the document"
      },
      {
        "title": "example",
        "description": "var myExportFile = file(\"~/Desktop/myNewExportFile.pdf\");\nsavePDF(myExportFile);",
        "lineNumber": 15,
        "caption": "Create a file and export it to the desktop"
      }
    ],
    "loc": {
      "start": {
        "line": 4859,
        "column": 0
      },
      "end": {
        "line": 4877,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4878,
          "column": 0
        },
        "end": {
          "line": 4897,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "var myImage = file(\"~/Desktop/myImage.jpg\");\nimage(myImage, 0, 0);",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Get an image file from the desktop and place it in the document",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 64,
                      "offset": 63
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 64,
                  "offset": 63
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 64,
              "offset": 63
            }
          }
        }
      },
      {
        "description": "var myExportFile = file(\"~/Desktop/myNewExportFile.pdf\");\nsavePDF(myExportFile);",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Create a file and export it to the desktop",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 43,
              "offset": 42
            }
          }
        }
      }
    ],
    "params": [
      {
        "title": "param",
        "name": "filePath",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The file path.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 15,
                      "offset": 14
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 15,
              "offset": 14
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "File at the given path.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "File"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "file",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "file",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".file"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Gets all files of a folder and returns them in an array of file objects. The settings object can be used to restrict the search to certain file types only, to include hidden files and to include files in subfolders.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 216,
                  "offset": 215
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 216,
              "offset": 215
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 216,
          "offset": 215
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Gets all files of a folder and returns them in an array of file objects. The settings object can be used to restrict the search to certain file types only, to include hidden files and to include files in subfolders.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Input",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Files",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "files"
      },
      {
        "title": "param",
        "description": "The folder that holds the files or a string describing the path to that folder.",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Folder"
              },
              {
                "type": "NameExpression",
                "name": "String"
              }
            ]
          }
        },
        "name": "folder"
      },
      {
        "title": "param",
        "description": "A settings object to control the function's behavior.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        },
        "name": "settings"
      },
      {
        "title": "param",
        "description": "Suffix(es) of file types to include. Default: `\"*\"` (include all file types)",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "String"
              },
              {
                "type": "NameExpression",
                "name": "Array"
              }
            ]
          }
        },
        "name": "settings.filter"
      },
      {
        "title": "param",
        "description": "Hidden files will be included. Default: `false`",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Boolean"
          }
        },
        "name": "settings.hidden"
      },
      {
        "title": "param",
        "description": "Searches subfolders recursively for matching files. Default: `false`",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Boolean"
          }
        },
        "name": "settings.recursive"
      },
      {
        "title": "return",
        "description": "Array of the resulting file(s). If no files are found, an empty array will be returned.",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      },
      {
        "title": "example",
        "description": "var myImageFolder = folder(\"~/Desktop/myImages/\");\nvar myImageFiles = files(myImageFolder, {filter: [\"jpeg\", \"jpg\"]});",
        "lineNumber": 14,
        "caption": "Get a folder from the desktop and load all its JPEG files"
      },
      {
        "title": "example",
        "description": "var myDataFolder = folder();\nvar allMyDataFiles = files(myDataFolder, {recursive: true});",
        "lineNumber": 18,
        "caption": "If the document is saved, load all files from its data folder, including from its subfolders"
      }
    ],
    "loc": {
      "start": {
        "line": 4899,
        "column": 0
      },
      "end": {
        "line": 4920,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4921,
          "column": 0
        },
        "end": {
          "line": 4978,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "var myImageFolder = folder(\"~/Desktop/myImages/\");\nvar myImageFiles = files(myImageFolder, {filter: [\"jpeg\", \"jpg\"]});",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Get a folder from the desktop and load all its JPEG files",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 58,
                      "offset": 57
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 58,
                  "offset": 57
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 58,
              "offset": 57
            }
          }
        }
      },
      {
        "description": "var myDataFolder = folder();\nvar allMyDataFiles = files(myDataFolder, {recursive: true});",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "If the document is saved, load all files from its data folder, including from its subfolders",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 93,
                      "offset": 92
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 93,
                  "offset": 92
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 93,
              "offset": 92
            }
          }
        }
      }
    ],
    "params": [
      {
        "title": "param",
        "name": "folder",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The folder that holds the files or a string describing the path to that folder.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 80,
                      "offset": 79
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 80,
                  "offset": 79
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 80,
              "offset": 79
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Folder"
              },
              {
                "type": "NameExpression",
                "name": "String"
              }
            ]
          }
        }
      },
      {
        "title": "param",
        "name": "settings",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A settings object to control the function's behavior.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 54,
                      "offset": 53
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 54,
              "offset": 53
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        },
        "properties": [
          {
            "title": "param",
            "name": "settings.filter",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Suffix(es) of file types to include. Default: ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 47,
                          "offset": 46
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "\"*\"",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 47,
                          "offset": 46
                        },
                        "end": {
                          "line": 1,
                          "column": 52,
                          "offset": 51
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " (include all file types)",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 52,
                          "offset": 51
                        },
                        "end": {
                          "line": 1,
                          "column": 77,
                          "offset": 76
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 77,
                      "offset": 76
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 77,
                  "offset": 76
                }
              }
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "String"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Array"
                  }
                ]
              }
            }
          },
          {
            "title": "param",
            "name": "settings.hidden",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Hidden files will be included. Default: ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 41,
                          "offset": 40
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "false",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 41,
                          "offset": 40
                        },
                        "end": {
                          "line": 1,
                          "column": 48,
                          "offset": 47
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 48,
                      "offset": 47
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                }
              }
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "Boolean"
              }
            }
          },
          {
            "title": "param",
            "name": "settings.recursive",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Searches subfolders recursively for matching files. Default: ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 62,
                          "offset": 61
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "false",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 62,
                          "offset": 61
                        },
                        "end": {
                          "line": 1,
                          "column": 69,
                          "offset": 68
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                }
              }
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "Boolean"
              }
            }
          }
        ]
      },
      {
        "title": "param",
        "name": "collectedFiles",
        "lineNumber": 4921
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array of the resulting file(s). If no files are found, an empty array will be returned.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 88,
                      "offset": 87
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 88,
                  "offset": 87
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 88,
              "offset": 87
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "files",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "files",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".files"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns a folder object.\nNote that the resulting folder object can either refer to an already existing folder or if the folder does not exist, it can create a preliminary \"virtual\" folder that refers to a folder that could be created later.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 216,
                  "offset": 240
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 216,
              "offset": 240
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 216,
          "offset": 240
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns a folder object.\nNote that the resulting folder object can either refer to an already existing folder or if the folder does not exist, it can create a preliminary \"virtual\" folder that refers to a folder that could be created later.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Input",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "Files",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "folder"
      },
      {
        "title": "param",
        "description": "The path of the folder.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        },
        "name": "folderPath"
      },
      {
        "title": "return",
        "description": "Folder at the given path. If no path is given, but the document is already saved, the document's data folder will be returned.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Folder"
        }
      },
      {
        "title": "example",
        "description": "var myImageFolder = folder(\"~/Desktop/myImages/\");\nvar myImageFiles = files(myImageFolder);",
        "lineNumber": 11,
        "caption": "Get a folder from the desktop and load its files"
      },
      {
        "title": "example",
        "description": "var myDataFolder = folder();",
        "lineNumber": 15,
        "caption": "Get the data folder, if the document is already saved"
      }
    ],
    "loc": {
      "start": {
        "line": 4980,
        "column": 0
      },
      "end": {
        "line": 4997,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4998,
          "column": 0
        },
        "end": {
          "line": 5024,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "var myImageFolder = folder(\"~/Desktop/myImages/\");\nvar myImageFiles = files(myImageFolder);",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Get a folder from the desktop and load its files",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 49,
              "offset": 48
            }
          }
        }
      },
      {
        "description": "var myDataFolder = folder();",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Get the data folder, if the document is already saved",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 54,
                      "offset": 53
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 54,
              "offset": 53
            }
          }
        }
      }
    ],
    "params": [
      {
        "title": "param",
        "name": "folderPath",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The path of the folder.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Folder at the given path. If no path is given, but the document is already saved, the document's data folder will be returned.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 127,
                      "offset": 126
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 127,
                  "offset": 126
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 127,
              "offset": 126
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Folder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "folder",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "folder",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".folder"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Reads the contents of a file or loads an URL into a String. If the file is specified by name as String, it must be located in the document's data directory.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 157,
                  "offset": 156
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 157,
              "offset": 156
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 157,
          "offset": 156
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Reads the contents of a file or loads an URL into a String. If the file is specified by name as String, it must be located in the document's data directory.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Input",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Files",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "loadString"
      },
      {
        "title": "param",
        "description": "The text file name in the document's data directory or a File instance or an URL",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        },
        "name": "file"
      },
      {
        "title": "return",
        "description": "String file or URL content.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5026,
        "column": 0
      },
      "end": {
        "line": 5035,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5036,
          "column": 0
        },
        "end": {
          "line": 5047,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "file",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The text file name in the document's data directory or a File instance or an URL",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 81,
                      "offset": 80
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 81,
                  "offset": 80
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 81,
              "offset": 80
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "String file or URL content.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "loadString",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "loadString",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".loadString"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Reads the contents of a file or loads an URL and creates a string array of its individual lines. If the file is specified by name as string, it must be located in the document's data directory.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 194,
                  "offset": 193
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 194,
              "offset": 193
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 194,
          "offset": 193
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Reads the contents of a file or loads an URL and creates a string array of its individual lines. If the file is specified by name as string, it must be located in the document's data directory.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Input",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Files",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "loadStrings"
      },
      {
        "title": "param",
        "description": "The text file name in the document's data directory or a file instance or an URL",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        },
        "name": "file"
      },
      {
        "title": "return",
        "description": "Array of the individual lines in the given file or URL",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5049,
        "column": 0
      },
      "end": {
        "line": 5058,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5059,
          "column": 0
        },
        "end": {
          "line": 5073,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "file",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The text file name in the document's data directory or a file instance or an URL",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 81,
                      "offset": 80
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 81,
                  "offset": 80
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 81,
              "offset": 80
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array of the individual lines in the given file or URL",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 55,
                      "offset": 54
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 55,
                  "offset": 54
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 55,
              "offset": 54
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "loadStrings",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "loadStrings",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".loadStrings"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Opens a selection dialog that allows to select one file. The settings object can be used to add a prompt text at the top of the dialog, to restrict the selection to certain file types and to set the dialog's starting folder.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 225,
                  "offset": 224
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 225,
              "offset": 224
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 225,
          "offset": 224
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Opens a selection dialog that allows to select one file. The settings object can be used to add a prompt text at the top of the dialog, to restrict the selection to certain file types and to set the dialog's starting folder.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Input",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Files",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "selectFile"
      },
      {
        "title": "param",
        "description": "A settings object to control the function's behavior.",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        },
        "name": "settings"
      },
      {
        "title": "param",
        "description": "The prompt text at the top of the file selection dialog. Default: `\"\"` (no prompt)",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        },
        "name": "settings.prompt"
      },
      {
        "title": "param",
        "description": "String or an array containing strings of file endings to include in the dialog. Default: `\"\"` (include all)",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "String"
              },
              {
                "type": "NameExpression",
                "name": "Array"
              }
            ]
          }
        },
        "name": "settings.filter"
      },
      {
        "title": "param",
        "description": "Folder or a folder path string defining the start location of the dialog. Default: most recent dialog folder or main user folder.",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Folder"
              },
              {
                "type": "NameExpression",
                "name": "String"
              }
            ]
          }
        },
        "name": "settings.folder"
      },
      {
        "title": "return",
        "description": "The selected file. If the user cancels, `null` will be returned.",
        "lineNumber": 11,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "File"
            },
            {
              "type": "NameExpression",
              "name": "Null"
            }
          ]
        }
      },
      {
        "title": "example",
        "description": "selectFile({prompt: \"Please select a file.\"});",
        "lineNumber": 13,
        "caption": "Open file selection dialog with a prompt text"
      },
      {
        "title": "example",
        "description": "selectFile({folder: \"~/Desktop/\", filter: [\"jpeg\", \"jpg\", \"png\"]});",
        "lineNumber": 16,
        "caption": "Open selection dialog starting at the user's desktop, allowing to only select PNG or JPEG files"
      }
    ],
    "loc": {
      "start": {
        "line": 5075,
        "column": 0
      },
      "end": {
        "line": 5093,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5094,
          "column": 0
        },
        "end": {
          "line": 5096,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "selectFile({prompt: \"Please select a file.\"});",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Open file selection dialog with a prompt text",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            }
          }
        }
      },
      {
        "description": "selectFile({folder: \"~/Desktop/\", filter: [\"jpeg\", \"jpg\", \"png\"]});",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Open selection dialog starting at the user's desktop, allowing to only select PNG or JPEG files",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 96,
                      "offset": 95
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 96,
                  "offset": 95
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 96,
              "offset": 95
            }
          }
        }
      }
    ],
    "params": [
      {
        "title": "param",
        "name": "settings",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A settings object to control the function's behavior.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 54,
                      "offset": 53
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 54,
              "offset": 53
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        },
        "properties": [
          {
            "title": "param",
            "name": "settings.prompt",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The prompt text at the top of the file selection dialog. Default: ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 67,
                          "offset": 66
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "\"\"",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 67,
                          "offset": 66
                        },
                        "end": {
                          "line": 1,
                          "column": 71,
                          "offset": 70
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " (no prompt)",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 71,
                          "offset": 70
                        },
                        "end": {
                          "line": 1,
                          "column": 83,
                          "offset": 82
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 83,
                      "offset": 82
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 83,
                  "offset": 82
                }
              }
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          },
          {
            "title": "param",
            "name": "settings.filter",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "String or an array containing strings of file endings to include in the dialog. Default: ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 90,
                          "offset": 89
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "\"\"",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 90,
                          "offset": 89
                        },
                        "end": {
                          "line": 1,
                          "column": 94,
                          "offset": 93
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " (include all)",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 94,
                          "offset": 93
                        },
                        "end": {
                          "line": 1,
                          "column": 108,
                          "offset": 107
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 108,
                      "offset": 107
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 108,
                  "offset": 107
                }
              }
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "String"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Array"
                  }
                ]
              }
            }
          },
          {
            "title": "param",
            "name": "settings.folder",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Folder or a folder path string defining the start location of the dialog. Default: most recent dialog folder or main user folder.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 130,
                          "offset": 129
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 130,
                      "offset": 129
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 130,
                  "offset": 129
                }
              }
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Folder"
                  },
                  {
                    "type": "NameExpression",
                    "name": "String"
                  }
                ]
              }
            }
          }
        ]
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The selected file. If the user cancels, ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 41,
                      "offset": 40
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "null",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 41,
                      "offset": 40
                    },
                    "end": {
                      "line": 1,
                      "column": 47,
                      "offset": 46
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " will be returned.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 47,
                      "offset": 46
                    },
                    "end": {
                      "line": 1,
                      "column": 65,
                      "offset": 64
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 65,
              "offset": 64
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "File"
            },
            {
              "type": "NameExpression",
              "name": "Null"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "selectFile",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "selectFile",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".selectFile"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Opens a selection dialog that allows to select one or multiple files. The settings object can be used to add a prompt text at the top of the dialog, to restrict the selection to certain file types and to set the dialog's starting folder.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 238,
                  "offset": 237
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 238,
              "offset": 237
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 238,
          "offset": 237
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Opens a selection dialog that allows to select one or multiple files. The settings object can be used to add a prompt text at the top of the dialog, to restrict the selection to certain file types and to set the dialog's starting folder.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Input",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Files",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "selectFiles"
      },
      {
        "title": "param",
        "description": "A settings object to control the function's behavior.",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        },
        "name": "settings"
      },
      {
        "title": "param",
        "description": "The prompt text at the top of the file selection dialog. Default: `\"\"` (no prompt)",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        },
        "name": "settings.prompt"
      },
      {
        "title": "param",
        "description": "String or an array containing strings of file endings to include in the dialog. Default: `\"\"` (include all)",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "String"
              },
              {
                "type": "NameExpression",
                "name": "Array"
              }
            ]
          }
        },
        "name": "settings.filter"
      },
      {
        "title": "param",
        "description": "Folder or a folder path string defining the start location of the dialog. Default: most recent dialog folder or main user folder.",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Folder"
              },
              {
                "type": "NameExpression",
                "name": "String"
              }
            ]
          }
        },
        "name": "settings.folder"
      },
      {
        "title": "return",
        "description": "Array of the selected file(s). If the user cancels, an empty array will be returned.",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      },
      {
        "title": "example",
        "description": "selectFiles({prompt: \"Please select your files.\"});",
        "lineNumber": 13,
        "caption": "Open file selection dialog with a prompt text"
      },
      {
        "title": "example",
        "description": "selectFiles({folder: \"~/Desktop/\", filter: [\"jpeg\", \"jpg\", \"png\"]});",
        "lineNumber": 16,
        "caption": "Open selection dialog starting at the user's desktop, allowing to only select PNG or JPEG files"
      }
    ],
    "loc": {
      "start": {
        "line": 5098,
        "column": 0
      },
      "end": {
        "line": 5116,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5117,
          "column": 0
        },
        "end": {
          "line": 5124,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "selectFiles({prompt: \"Please select your files.\"});",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Open file selection dialog with a prompt text",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            }
          }
        }
      },
      {
        "description": "selectFiles({folder: \"~/Desktop/\", filter: [\"jpeg\", \"jpg\", \"png\"]});",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Open selection dialog starting at the user's desktop, allowing to only select PNG or JPEG files",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 96,
                      "offset": 95
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 96,
                  "offset": 95
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 96,
              "offset": 95
            }
          }
        }
      }
    ],
    "params": [
      {
        "title": "param",
        "name": "settings",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A settings object to control the function's behavior.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 54,
                      "offset": 53
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 54,
              "offset": 53
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        },
        "properties": [
          {
            "title": "param",
            "name": "settings.prompt",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The prompt text at the top of the file selection dialog. Default: ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 67,
                          "offset": 66
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "\"\"",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 67,
                          "offset": 66
                        },
                        "end": {
                          "line": 1,
                          "column": 71,
                          "offset": 70
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " (no prompt)",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 71,
                          "offset": 70
                        },
                        "end": {
                          "line": 1,
                          "column": 83,
                          "offset": 82
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 83,
                      "offset": 82
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 83,
                  "offset": 82
                }
              }
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          },
          {
            "title": "param",
            "name": "settings.filter",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "String or an array containing strings of file endings to include in the dialog. Default: ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 90,
                          "offset": 89
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "\"\"",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 90,
                          "offset": 89
                        },
                        "end": {
                          "line": 1,
                          "column": 94,
                          "offset": 93
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " (include all)",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 94,
                          "offset": 93
                        },
                        "end": {
                          "line": 1,
                          "column": 108,
                          "offset": 107
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 108,
                      "offset": 107
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 108,
                  "offset": 107
                }
              }
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "String"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Array"
                  }
                ]
              }
            }
          },
          {
            "title": "param",
            "name": "settings.folder",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Folder or a folder path string defining the start location of the dialog. Default: most recent dialog folder or main user folder.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 130,
                          "offset": 129
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 130,
                      "offset": 129
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 130,
                  "offset": 129
                }
              }
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Folder"
                  },
                  {
                    "type": "NameExpression",
                    "name": "String"
                  }
                ]
              }
            }
          }
        ]
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array of the selected file(s). If the user cancels, an empty array will be returned.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 85,
                      "offset": 84
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 85,
                  "offset": 84
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 85,
              "offset": 84
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "selectFiles",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "selectFiles",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".selectFiles"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Opens a selection dialog that allows to select a folder. The settings object can be used to add a prompt text at the top of the dialog and to set the dialog's starting folder.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 176,
                  "offset": 175
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 176,
              "offset": 175
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 176,
          "offset": 175
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Opens a selection dialog that allows to select a folder. The settings object can be used to add a prompt text at the top of the dialog and to set the dialog's starting folder.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Input",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Files",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "selectFolder"
      },
      {
        "title": "param",
        "description": "A settings object to control the function's behavior.",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        },
        "name": "settings"
      },
      {
        "title": "param",
        "description": "The prompt text at the top of the folder selection dialog. Default: `\"\"` (no prompt)",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        },
        "name": "settings.prompt"
      },
      {
        "title": "param",
        "description": "Folder or a folder path string defining the start location of the dialog. Default: most recent dialog folder or main user folder.",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Folder"
              },
              {
                "type": "NameExpression",
                "name": "String"
              }
            ]
          }
        },
        "name": "settings.folder"
      },
      {
        "title": "return",
        "description": "The selected folder. If the user cancels, `null` will be returned.",
        "lineNumber": 10,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Folder"
            },
            {
              "type": "NameExpression",
              "name": "Null"
            }
          ]
        }
      },
      {
        "title": "example",
        "description": "selectFolder({prompt: \"Please select a folder.\"});",
        "lineNumber": 12,
        "caption": "Open folder selection dialog with a prompt text"
      },
      {
        "title": "example",
        "description": "selectFolder({folder: \"~/Desktop/\"});",
        "lineNumber": 15,
        "caption": "Open folder selection dialog starting at the user's desktop"
      }
    ],
    "loc": {
      "start": {
        "line": 5126,
        "column": 0
      },
      "end": {
        "line": 5143,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5144,
          "column": 0
        },
        "end": {
          "line": 5151,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "selectFolder({prompt: \"Please select a folder.\"});",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Open folder selection dialog with a prompt text",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 48,
                      "offset": 47
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 48,
              "offset": 47
            }
          }
        }
      },
      {
        "description": "selectFolder({folder: \"~/Desktop/\"});",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Open folder selection dialog starting at the user's desktop",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 60,
                      "offset": 59
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 60,
              "offset": 59
            }
          }
        }
      }
    ],
    "params": [
      {
        "title": "param",
        "name": "settings",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A settings object to control the function's behavior.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 54,
                      "offset": 53
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 54,
              "offset": 53
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        },
        "properties": [
          {
            "title": "param",
            "name": "settings.prompt",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The prompt text at the top of the folder selection dialog. Default: ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 69,
                          "offset": 68
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "\"\"",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 69,
                          "offset": 68
                        },
                        "end": {
                          "line": 1,
                          "column": 73,
                          "offset": 72
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " (no prompt)",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 73,
                          "offset": 72
                        },
                        "end": {
                          "line": 1,
                          "column": 85,
                          "offset": 84
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 85,
                      "offset": 84
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 85,
                  "offset": 84
                }
              }
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          },
          {
            "title": "param",
            "name": "settings.folder",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Folder or a folder path string defining the start location of the dialog. Default: most recent dialog folder or main user folder.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 130,
                          "offset": 129
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 130,
                      "offset": 129
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 130,
                  "offset": 129
                }
              }
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Folder"
                  },
                  {
                    "type": "NameExpression",
                    "name": "String"
                  }
                ]
              }
            }
          }
        ]
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The selected folder. If the user cancels, ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "null",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "end": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " will be returned.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "end": {
                      "line": 1,
                      "column": 67,
                      "offset": 66
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 67,
                  "offset": 66
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 67,
              "offset": 66
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Folder"
            },
            {
              "type": "NameExpression",
              "name": "Null"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "selectFolder",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "selectFolder",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".selectFolder"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "day()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "end": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function returns the current day as a value from ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "end": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "1",
              "position": {
                "start": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "end": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "-",
              "position": {
                "start": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "end": {
                  "line": 1,
                  "column": 66,
                  "offset": 65
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "31",
              "position": {
                "start": {
                  "line": 1,
                  "column": 66,
                  "offset": 65
                },
                "end": {
                  "line": 1,
                  "column": 70,
                  "offset": 69
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 70,
                  "offset": 69
                },
                "end": {
                  "line": 1,
                  "column": 71,
                  "offset": 70
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 71,
              "offset": 70
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 71,
          "offset": 70
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "The `day()` function returns the current day as a value from `1`-`31`.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Input",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Time & Date",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "day"
      },
      {
        "title": "return",
        "description": "The current day number.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5157,
        "column": 0
      },
      "end": {
        "line": 5165,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5166,
          "column": 0
        },
        "end": {
          "line": 5168,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current day number.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "day",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "day",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".day"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "hour()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function returns the current hour as a value from ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "end": {
                  "line": 1,
                  "column": 64,
                  "offset": 63
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "0",
              "position": {
                "start": {
                  "line": 1,
                  "column": 64,
                  "offset": 63
                },
                "end": {
                  "line": 1,
                  "column": 67,
                  "offset": 66
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " - ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 67,
                  "offset": 66
                },
                "end": {
                  "line": 1,
                  "column": 70,
                  "offset": 69
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "23",
              "position": {
                "start": {
                  "line": 1,
                  "column": 70,
                  "offset": 69
                },
                "end": {
                  "line": 1,
                  "column": 74,
                  "offset": 73
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 74,
                  "offset": 73
                },
                "end": {
                  "line": 1,
                  "column": 75,
                  "offset": 74
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 75,
              "offset": 74
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 75,
          "offset": 74
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "The `hour()` function returns the current hour as a value from `0` - `23`.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Input",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Time & Date",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "hour"
      },
      {
        "title": "return",
        "description": "The current hour.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5170,
        "column": 0
      },
      "end": {
        "line": 5178,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5179,
          "column": 0
        },
        "end": {
          "line": 5181,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current hour.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "hour",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "hour",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".hour"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the number of milliseconds (thousandths of a second) since starting the script.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 88,
                  "offset": 87
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 88,
              "offset": 87
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 88,
          "offset": 87
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns the number of milliseconds (thousandths of a second) since starting the script.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Input",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Time & Date",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "millis"
      },
      {
        "title": "return",
        "description": "The current milli.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5183,
        "column": 0
      },
      "end": {
        "line": 5191,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5192,
          "column": 0
        },
        "end": {
          "line": 5194,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current milli.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "millis",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "millis",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".millis"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "millisecond()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function differs from ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "end": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "millis()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", in that it returns the exact millisecond (thousandths of a second) of the current time.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "end": {
                  "line": 1,
                  "column": 142,
                  "offset": 141
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 142,
              "offset": 141
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 142,
          "offset": 141
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "The `millisecond()` function differs from `millis()`, in that it returns the exact millisecond (thousandths of a second) of the current time.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Input",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Time & Date",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "millisecond"
      },
      {
        "title": "return",
        "description": "The current millisecond.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5196,
        "column": 0
      },
      "end": {
        "line": 5204,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5205,
          "column": 0
        },
        "end": {
          "line": 5207,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current millisecond.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "millisecond",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "millisecond",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".millisecond"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "minute()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "end": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function returns the current minute as a value from ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "end": {
                  "line": 1,
                  "column": 68,
                  "offset": 67
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "0",
              "position": {
                "start": {
                  "line": 1,
                  "column": 68,
                  "offset": 67
                },
                "end": {
                  "line": 1,
                  "column": 71,
                  "offset": 70
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " - ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 71,
                  "offset": 70
                },
                "end": {
                  "line": 1,
                  "column": 74,
                  "offset": 73
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "59",
              "position": {
                "start": {
                  "line": 1,
                  "column": 74,
                  "offset": 73
                },
                "end": {
                  "line": 1,
                  "column": 78,
                  "offset": 77
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 78,
                  "offset": 77
                },
                "end": {
                  "line": 1,
                  "column": 79,
                  "offset": 78
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 79,
              "offset": 78
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 79,
          "offset": 78
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "The `minute()` function returns the current minute as a value from `0` - `59`.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Input",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Time & Date",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "minute"
      },
      {
        "title": "return",
        "description": "The current minute.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5209,
        "column": 0
      },
      "end": {
        "line": 5217,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5218,
          "column": 0
        },
        "end": {
          "line": 5220,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current minute.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "minute",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "minute",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".minute"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "month()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function returns the current month as a value from ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "end": {
                  "line": 1,
                  "column": 66,
                  "offset": 65
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "1",
              "position": {
                "start": {
                  "line": 1,
                  "column": 66,
                  "offset": 65
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "-",
              "position": {
                "start": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "end": {
                  "line": 1,
                  "column": 70,
                  "offset": 69
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "12",
              "position": {
                "start": {
                  "line": 1,
                  "column": 70,
                  "offset": 69
                },
                "end": {
                  "line": 1,
                  "column": 74,
                  "offset": 73
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 74,
                  "offset": 73
                },
                "end": {
                  "line": 1,
                  "column": 75,
                  "offset": 74
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 75,
              "offset": 74
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 75,
          "offset": 74
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "The `month()` function returns the current month as a value from `1`-`12`.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Input",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Time & Date",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "month"
      },
      {
        "title": "return",
        "description": "The current month number.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5222,
        "column": 0
      },
      "end": {
        "line": 5230,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5231,
          "column": 0
        },
        "end": {
          "line": 5233,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current month number.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 26,
                  "offset": 25
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 26,
              "offset": 25
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "month",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "month",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".month"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "second()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "end": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function returns the current second as a value from ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "end": {
                  "line": 1,
                  "column": 68,
                  "offset": 67
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "0",
              "position": {
                "start": {
                  "line": 1,
                  "column": 68,
                  "offset": 67
                },
                "end": {
                  "line": 1,
                  "column": 71,
                  "offset": 70
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " - ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 71,
                  "offset": 70
                },
                "end": {
                  "line": 1,
                  "column": 74,
                  "offset": 73
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "59",
              "position": {
                "start": {
                  "line": 1,
                  "column": 74,
                  "offset": 73
                },
                "end": {
                  "line": 1,
                  "column": 78,
                  "offset": 77
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 78,
                  "offset": 77
                },
                "end": {
                  "line": 1,
                  "column": 79,
                  "offset": 78
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 79,
              "offset": 78
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 79,
          "offset": 78
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "The `second()` function returns the current second as a value from `0` - `59`.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Input",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Time & Date",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "second"
      },
      {
        "title": "return",
        "description": "The current second.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5235,
        "column": 0
      },
      "end": {
        "line": 5243,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5244,
          "column": 0
        },
        "end": {
          "line": 5246,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current second.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "second",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "second",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".second"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "timestamp()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function returns the current date formatted as ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "end": {
                  "line": 1,
                  "column": 66,
                  "offset": 65
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "YYYYMMDD_HHMMSS",
              "position": {
                "start": {
                  "line": 1,
                  "column": 66,
                  "offset": 65
                },
                "end": {
                  "line": 1,
                  "column": 83,
                  "offset": 82
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " for useful unique filenaming.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 83,
                  "offset": 82
                },
                "end": {
                  "line": 1,
                  "column": 113,
                  "offset": 112
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 113,
              "offset": 112
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 113,
          "offset": 112
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "The `timestamp()` function returns the current date formatted as `YYYYMMDD_HHMMSS` for useful unique filenaming.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Input",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Time & Date",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "timestamp"
      },
      {
        "title": "return",
        "description": "The current time in `YYYYMMDD_HHMMSS`.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5248,
        "column": 0
      },
      "end": {
        "line": 5256,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5257,
          "column": 0
        },
        "end": {
          "line": 5267,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current time in ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "YYYYMMDD_HHMMSS",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 39,
              "offset": 38
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "timestamp",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "timestamp",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".timestamp"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "weekday()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "end": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function returns the current weekday as a string from ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "end": {
                  "line": 1,
                  "column": 71,
                  "offset": 70
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "Sunday",
              "position": {
                "start": {
                  "line": 1,
                  "column": 71,
                  "offset": 70
                },
                "end": {
                  "line": 1,
                  "column": 79,
                  "offset": 78
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 79,
                  "offset": 78
                },
                "end": {
                  "line": 1,
                  "column": 81,
                  "offset": 80
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "Monday",
              "position": {
                "start": {
                  "line": 1,
                  "column": 81,
                  "offset": 80
                },
                "end": {
                  "line": 1,
                  "column": 89,
                  "offset": 88
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 89,
                  "offset": 88
                },
                "end": {
                  "line": 1,
                  "column": 91,
                  "offset": 90
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "Tuesday",
              "position": {
                "start": {
                  "line": 1,
                  "column": 91,
                  "offset": 90
                },
                "end": {
                  "line": 1,
                  "column": 100,
                  "offset": 99
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " ...",
              "position": {
                "start": {
                  "line": 1,
                  "column": 100,
                  "offset": 99
                },
                "end": {
                  "line": 1,
                  "column": 104,
                  "offset": 103
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 104,
              "offset": 103
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 104,
          "offset": 103
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "The `weekday()` function returns the current weekday as a string from `Sunday`, `Monday`, `Tuesday` ...",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Input",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Time & Date",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "weekday"
      },
      {
        "title": "return",
        "description": "The current weekday name.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5269,
        "column": 0
      },
      "end": {
        "line": 5277,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5278,
          "column": 0
        },
        "end": {
          "line": 5281,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current weekday name.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 26,
                  "offset": 25
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 26,
              "offset": 25
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "weekday",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "weekday",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".weekday"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "year()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function returns the current year as a number (",
              "position": {
                "start": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "end": {
                  "line": 1,
                  "column": 61,
                  "offset": 60
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "2018",
              "position": {
                "start": {
                  "line": 1,
                  "column": 61,
                  "offset": 60
                },
                "end": {
                  "line": 1,
                  "column": 67,
                  "offset": 66
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 67,
                  "offset": 66
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "2019",
              "position": {
                "start": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "end": {
                  "line": 1,
                  "column": 75,
                  "offset": 74
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " etc).",
              "position": {
                "start": {
                  "line": 1,
                  "column": 75,
                  "offset": 74
                },
                "end": {
                  "line": 1,
                  "column": 81,
                  "offset": 80
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 81,
              "offset": 80
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 81,
          "offset": 80
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "The `year()` function returns the current year as a number (`2018`, `2019` etc).",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Input",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Time & Date",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "year"
      },
      {
        "title": "return",
        "description": "The current year.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5283,
        "column": 0
      },
      "end": {
        "line": 5291,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5292,
          "column": 0
        },
        "end": {
          "line": 5294,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current year.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "year",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "year",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".year"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates the absolute value (magnitude) of a number. The absolute value of a number is always positive.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 106,
                  "offset": 105
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 106,
              "offset": 105
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 106,
          "offset": 105
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Calculates the absolute value (magnitude) of a number. The absolute value of a number is always positive.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "abs"
      },
      {
        "title": "param",
        "description": "A number.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "val"
      },
      {
        "title": "return",
        "description": "The absolute value of that number.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5339,
        "column": 0
      },
      "end": {
        "line": 5348,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5349,
          "column": 0
        },
        "end": {
          "line": 5349,
          "column": 19
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "val",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A number.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 10,
                  "offset": 9
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 10,
              "offset": 9
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The absolute value of that number.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "abs",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "abs",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".abs"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates the closest integer value that is greater than or equal to the value of the parameter. For example, ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 112,
                  "offset": 111
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "ceil(9.03)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 112,
                  "offset": 111
                },
                "end": {
                  "line": 1,
                  "column": 124,
                  "offset": 123
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " returns the value ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 124,
                  "offset": 123
                },
                "end": {
                  "line": 1,
                  "column": 143,
                  "offset": 142
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "10",
              "position": {
                "start": {
                  "line": 1,
                  "column": 143,
                  "offset": 142
                },
                "end": {
                  "line": 1,
                  "column": 147,
                  "offset": 146
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 147,
                  "offset": 146
                },
                "end": {
                  "line": 1,
                  "column": 148,
                  "offset": 147
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 148,
              "offset": 147
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 148,
          "offset": 147
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Calculates the closest integer value that is greater than or equal to the value of the parameter. For example, `ceil(9.03)` returns the value `10`.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "ceil"
      },
      {
        "title": "param",
        "description": "An arbitrary number.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "val"
      },
      {
        "title": "return",
        "description": "The next highest integer value.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5351,
        "column": 0
      },
      "end": {
        "line": 5360,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5361,
          "column": 0
        },
        "end": {
          "line": 5361,
          "column": 21
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "val",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An arbitrary number.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The next highest integer value.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "ceil",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "ceil",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".ceil"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Constrains a value to not exceed a maximum and minimum value.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 62,
              "offset": 61
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 62,
          "offset": 61
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Constrains a value to not exceed a maximum and minimum value.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "constrain"
      },
      {
        "title": "param",
        "description": "The value to constrain.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "aNumber"
      },
      {
        "title": "param",
        "description": "Minimum limit.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "aMin"
      },
      {
        "title": "param",
        "description": "Maximum limit.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "aMax"
      },
      {
        "title": "return",
        "description": "The constrained value.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5363,
        "column": 0
      },
      "end": {
        "line": 5374,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5375,
          "column": 0
        },
        "end": {
          "line": 5380,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "aNumber",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value to constrain.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "aMin",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Minimum limit.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 15,
                      "offset": 14
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 15,
              "offset": 14
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "aMax",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Maximum limit.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 15,
                      "offset": 14
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 15,
              "offset": 14
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The constrained value.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "constrain",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "constrain",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".constrain"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates the distance between two points.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 44,
                  "offset": 43
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 44,
              "offset": 43
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 44,
          "offset": 43
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Calculates the distance between two points.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "dist"
      },
      {
        "title": "param",
        "description": "The x-coordinate of the first point.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x1"
      },
      {
        "title": "param",
        "description": "The y-coordinate of the first point.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y1"
      },
      {
        "title": "param",
        "description": "The x-coordinate of the second point.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x2"
      },
      {
        "title": "param",
        "description": "The y-coordinate of the second point.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y2"
      },
      {
        "title": "return",
        "description": "The distance.",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5382,
        "column": 0
      },
      "end": {
        "line": 5394,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5395,
          "column": 0
        },
        "end": {
          "line": 5404,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "x1",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The x-coordinate of the first point.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 37,
              "offset": 36
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "y1",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The y-coordinate of the first point.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 37,
              "offset": 36
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "x2",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The x-coordinate of the second point.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 38,
                  "offset": 37
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 38,
              "offset": 37
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "y2",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The y-coordinate of the second point.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 38,
                  "offset": 37
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 38,
              "offset": 37
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The distance.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 14,
              "offset": 13
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "dist",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "dist",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".dist"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "exp()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "end": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function returns ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "ex",
              "position": {
                "start": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "end": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", where ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "x",
              "position": {
                "start": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "end": {
                  "line": 1,
                  "column": 45,
                  "offset": 44
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is the argument, and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 45,
                  "offset": 44
                },
                "end": {
                  "line": 1,
                  "column": 67,
                  "offset": 66
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "e",
              "position": {
                "start": {
                  "line": 1,
                  "column": 67,
                  "offset": 66
                },
                "end": {
                  "line": 1,
                  "column": 70,
                  "offset": 69
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is Euler's number (also known as Napier's constant), the base of the natural logarithms.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 70,
                  "offset": 69
                },
                "end": {
                  "line": 1,
                  "column": 159,
                  "offset": 158
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 159,
              "offset": 158
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 159,
          "offset": 158
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "The `exp()` function returns `ex`, where `x` is the argument, and `e` is Euler's number (also known as Napier's constant), the base of the natural logarithms.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "exp"
      },
      {
        "title": "param",
        "description": "A number.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x"
      },
      {
        "title": "return",
        "description": "A number representing `ex`.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5406,
        "column": 0
      },
      "end": {
        "line": 5415,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5416,
          "column": 0
        },
        "end": {
          "line": 5416,
          "column": 19
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A number.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 10,
                  "offset": 9
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 10,
              "offset": 9
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A number representing ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "ex",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "exp",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "exp",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".exp"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates the closest integer value that is less than or equal to the value of the parameter.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 95,
                  "offset": 94
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 95,
              "offset": 94
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 95,
          "offset": 94
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Calculates the closest integer value that is less than or equal to the value of the parameter.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "floor"
      },
      {
        "title": "param",
        "description": "A number.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "a"
      },
      {
        "title": "return",
        "description": "Integer number.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5418,
        "column": 0
      },
      "end": {
        "line": 5427,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5428,
          "column": 0
        },
        "end": {
          "line": 5428,
          "column": 23
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "a",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A number.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 10,
                  "offset": 9
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 10,
              "offset": 9
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Integer number.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 16,
              "offset": 15
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "floor",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "floor",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".floor"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates a number between two numbers at a specific increment. The ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 70,
                  "offset": 69
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "amt",
              "position": {
                "start": {
                  "line": 1,
                  "column": 70,
                  "offset": 69
                },
                "end": {
                  "line": 1,
                  "column": 75,
                  "offset": 74
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " parameter is the amount to interpolate between the two values where ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 75,
                  "offset": 74
                },
                "end": {
                  "line": 1,
                  "column": 144,
                  "offset": 143
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "0.0",
              "position": {
                "start": {
                  "line": 1,
                  "column": 144,
                  "offset": 143
                },
                "end": {
                  "line": 1,
                  "column": 149,
                  "offset": 148
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is equal to the first point, ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 149,
                  "offset": 148
                },
                "end": {
                  "line": 1,
                  "column": 179,
                  "offset": 178
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "0.1",
              "position": {
                "start": {
                  "line": 1,
                  "column": 179,
                  "offset": 178
                },
                "end": {
                  "line": 1,
                  "column": 184,
                  "offset": 183
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is very near the first point, ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 184,
                  "offset": 183
                },
                "end": {
                  "line": 1,
                  "column": 215,
                  "offset": 214
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "0.5",
              "position": {
                "start": {
                  "line": 1,
                  "column": 215,
                  "offset": 214
                },
                "end": {
                  "line": 1,
                  "column": 220,
                  "offset": 219
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is half-way in between, etc. The lerp function is convenient for creating motion along a straight path and for drawing dotted lines.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 220,
                  "offset": 219
                },
                "end": {
                  "line": 1,
                  "column": 353,
                  "offset": 352
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 353,
              "offset": 352
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 353,
          "offset": 352
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Calculates a number between two numbers at a specific increment. The `amt` parameter is the amount to interpolate between the two values where `0.0` is equal to the first point, `0.1` is very near the first point, `0.5` is half-way in between, etc. The lerp function is convenient for creating motion along a straight path and for drawing dotted lines.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "lerp"
      },
      {
        "title": "param",
        "description": "First value.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "value1"
      },
      {
        "title": "param",
        "description": "Second value.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "value2"
      },
      {
        "title": "param",
        "description": "Amount between 0.0 and 1.0.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "amt"
      },
      {
        "title": "return",
        "description": "The mapped value.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5430,
        "column": 0
      },
      "end": {
        "line": 5441,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5442,
          "column": 0
        },
        "end": {
          "line": 5445,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "value1",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "First value.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 13,
                      "offset": 12
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 13,
              "offset": 12
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "value2",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Second value.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 14,
              "offset": 13
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "amt",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Amount between 0.0 and 1.0.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The mapped value.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "lerp",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "lerp",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".lerp"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates the natural logarithm (the base-e logarithm) of a number. This function expects the values greater than ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 116,
                  "offset": 115
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "0",
              "position": {
                "start": {
                  "line": 1,
                  "column": 116,
                  "offset": 115
                },
                "end": {
                  "line": 1,
                  "column": 119,
                  "offset": 118
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 119,
                  "offset": 118
                },
                "end": {
                  "line": 1,
                  "column": 120,
                  "offset": 119
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 120,
              "offset": 119
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 120,
          "offset": 119
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Calculates the natural logarithm (the base-e logarithm) of a number. This function expects the values greater than `0`.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "log"
      },
      {
        "title": "param",
        "description": "A number, must be greater than `0`.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x"
      },
      {
        "title": "return",
        "description": "The natural logarithm.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5447,
        "column": 0
      },
      "end": {
        "line": 5456,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5457,
          "column": 0
        },
        "end": {
          "line": 5457,
          "column": 19
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A number, must be greater than ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "end": {
                      "line": 1,
                      "column": 36,
                      "offset": 35
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 36,
              "offset": 35
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The natural logarithm.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "log",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "log",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".log"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates the magnitude (or length) of a vector. A vector is a direction in space commonly used in computer graphics and linear algebra. Because it has no \"start\" position, the magnitude of a vector can be thought of as the distance from coordinate ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 251,
                  "offset": 250
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "(0,0)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 251,
                  "offset": 250
                },
                "end": {
                  "line": 1,
                  "column": 258,
                  "offset": 257
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " to its ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 258,
                  "offset": 257
                },
                "end": {
                  "line": 1,
                  "column": 266,
                  "offset": 265
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "(x,y)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 266,
                  "offset": 265
                },
                "end": {
                  "line": 1,
                  "column": 273,
                  "offset": 272
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " value. Therefore, ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 273,
                  "offset": 272
                },
                "end": {
                  "line": 1,
                  "column": 292,
                  "offset": 291
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "mag()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 292,
                  "offset": 291
                },
                "end": {
                  "line": 1,
                  "column": 299,
                  "offset": 298
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is a shortcut for writing ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 299,
                  "offset": 298
                },
                "end": {
                  "line": 1,
                  "column": 326,
                  "offset": 325
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "dist(0, 0, x, y)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 326,
                  "offset": 325
                },
                "end": {
                  "line": 1,
                  "column": 344,
                  "offset": 343
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 344,
                  "offset": 343
                },
                "end": {
                  "line": 1,
                  "column": 345,
                  "offset": 344
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 345,
              "offset": 344
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 345,
          "offset": 344
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Calculates the magnitude (or length) of a vector. A vector is a direction in space commonly used in computer graphics and linear algebra. Because it has no \"start\" position, the magnitude of a vector can be thought of as the distance from coordinate `(0,0)` to its `(x,y)` value. Therefore, `mag()` is a shortcut for writing `dist(0, 0, x, y)`.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "mag"
      },
      {
        "title": "param",
        "description": "Coordinate.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x"
      },
      {
        "title": "param",
        "description": "Coordinate.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y"
      },
      {
        "title": "param",
        "description": "Coordinate, optional.",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "z"
      },
      {
        "title": "return",
        "description": "The magnitude.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5459,
        "column": 0
      },
      "end": {
        "line": 5470,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5471,
          "column": 0
        },
        "end": {
          "line": 5475,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "a",
        "lineNumber": 5471
      },
      {
        "title": "param",
        "name": "b",
        "lineNumber": 5471
      },
      {
        "title": "param",
        "name": "c",
        "lineNumber": 5471
      },
      {
        "title": "param",
        "name": "x",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Coordinate.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 12,
              "offset": 11
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "y",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Coordinate.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 12,
              "offset": 11
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "z",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Coordinate, optional.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The magnitude.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 15,
                      "offset": 14
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 15,
              "offset": 14
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "mag",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "mag",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".mag"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Re-maps a number from one range to another.\nNumbers outside the range are not clamped to ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 46,
                  "offset": 89
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "0",
              "position": {
                "start": {
                  "line": 2,
                  "column": 46,
                  "offset": 89
                },
                "end": {
                  "line": 2,
                  "column": 49,
                  "offset": 92
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 49,
                  "offset": 92
                },
                "end": {
                  "line": 2,
                  "column": 54,
                  "offset": 97
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "1",
              "position": {
                "start": {
                  "line": 2,
                  "column": 54,
                  "offset": 97
                },
                "end": {
                  "line": 2,
                  "column": 57,
                  "offset": 100
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", because out-of-range values are often intentional and useful.",
              "position": {
                "start": {
                  "line": 2,
                  "column": 57,
                  "offset": 100
                },
                "end": {
                  "line": 2,
                  "column": 120,
                  "offset": 163
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 120,
              "offset": 163
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 120,
          "offset": 163
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Re-maps a number from one range to another.\nNumbers outside the range are not clamped to `0` and `1`, because out-of-range values are often intentional and useful.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "map"
      },
      {
        "title": "param",
        "description": "The value to be mapped.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "value"
      },
      {
        "title": "param",
        "description": "The start of the input range.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "istart"
      },
      {
        "title": "param",
        "description": "The end of the input range.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "istop"
      },
      {
        "title": "param",
        "description": "The start of the output range.",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "ostart"
      },
      {
        "title": "param",
        "description": "The end of the output range.",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "ostop"
      },
      {
        "title": "return",
        "description": "The mapped value.",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5477,
        "column": 0
      },
      "end": {
        "line": 5491,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5492,
          "column": 0
        },
        "end": {
          "line": 5495,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "value",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value to be mapped.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "istart",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The start of the input range.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "istop",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The end of the input range.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "ostart",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The start of the output range.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "ostop",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The end of the output range.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The mapped value.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "map",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "map",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".map"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Determines the largest value in a sequence of numbers.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 55,
                  "offset": 54
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 55,
              "offset": 54
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 55,
          "offset": 54
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Determines the largest value in a sequence of numbers.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "max"
      },
      {
        "title": "param",
        "description": "A value or an array of Numbers.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        },
        "name": "a"
      },
      {
        "title": "param",
        "description": "Another value to be compared.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "b"
      },
      {
        "title": "param",
        "description": "Another value to be compared.",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "c"
      },
      {
        "title": "return",
        "description": "The highest value.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5497,
        "column": 0
      },
      "end": {
        "line": 5508,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5509,
          "column": 0
        },
        "end": {
          "line": 5517,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "a",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A value or an array of Numbers.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "b",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Another value to be compared.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "title": "param",
        "name": "c",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Another value to be compared.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The highest value.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "max",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "max",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".max"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Determines the smallest value in a sequence of numbers.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 56,
                  "offset": 55
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 56,
              "offset": 55
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 56,
          "offset": 55
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Determines the smallest value in a sequence of numbers.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "min"
      },
      {
        "title": "param",
        "description": "A value or an array of Numbers.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        },
        "name": "a"
      },
      {
        "title": "param",
        "description": "Another value to be compared.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "b"
      },
      {
        "title": "param",
        "description": "Another value to be compared.",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "c"
      },
      {
        "title": "return",
        "description": "The lowest value.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5519,
        "column": 0
      },
      "end": {
        "line": 5530,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5531,
          "column": 0
        },
        "end": {
          "line": 5539,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "a",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A value or an array of Numbers.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "b",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Another value to be compared.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "title": "param",
        "name": "c",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Another value to be compared.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The lowest value.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "min",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "min",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".min"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Normalizes a number from another range into a value between ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 61,
                  "offset": 60
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "0",
              "position": {
                "start": {
                  "line": 1,
                  "column": 61,
                  "offset": 60
                },
                "end": {
                  "line": 1,
                  "column": 64,
                  "offset": 63
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 64,
                  "offset": 63
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "1",
              "position": {
                "start": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "end": {
                  "line": 1,
                  "column": 72,
                  "offset": 71
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".\nIdentical to ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 72,
                  "offset": 71
                },
                "end": {
                  "line": 2,
                  "column": 14,
                  "offset": 86
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "map(value, low, high, 0, 1);",
              "position": {
                "start": {
                  "line": 2,
                  "column": 14,
                  "offset": 86
                },
                "end": {
                  "line": 2,
                  "column": 44,
                  "offset": 116
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "\nNumbers outside the range are not clamped to ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 44,
                  "offset": 116
                },
                "end": {
                  "line": 3,
                  "column": 46,
                  "offset": 162
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "0",
              "position": {
                "start": {
                  "line": 3,
                  "column": 46,
                  "offset": 162
                },
                "end": {
                  "line": 3,
                  "column": 49,
                  "offset": 165
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 49,
                  "offset": 165
                },
                "end": {
                  "line": 3,
                  "column": 54,
                  "offset": 170
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "1",
              "position": {
                "start": {
                  "line": 3,
                  "column": 54,
                  "offset": 170
                },
                "end": {
                  "line": 3,
                  "column": 57,
                  "offset": 173
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", because out-of-range values are often intentional and useful.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 57,
                  "offset": 173
                },
                "end": {
                  "line": 3,
                  "column": 120,
                  "offset": 236
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 120,
              "offset": 236
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 120,
          "offset": 236
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Normalizes a number from another range into a value between `0` and `1`.\nIdentical to `map(value, low, high, 0, 1);`\nNumbers outside the range are not clamped to `0` and `1`, because out-of-range values are often intentional and useful.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 5
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 6
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 7,
        "name": "norm"
      },
      {
        "title": "param",
        "description": "The value to be normed.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "aNumber"
      },
      {
        "title": "param",
        "description": "The lowest value to be expected.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "low"
      },
      {
        "title": "param",
        "description": "The highest value to be expected.",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "high"
      },
      {
        "title": "return",
        "description": "The normalized value.",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5541,
        "column": 0
      },
      "end": {
        "line": 5554,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5555,
          "column": 0
        },
        "end": {
          "line": 5558,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "aNumber",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value to be normed.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "low",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The lowest value to be expected.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "high",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The highest value to be expected.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 34,
              "offset": 33
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The normalized value.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "norm",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "norm",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".norm"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Facilitates exponential expressions. The ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "pow()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function is an efficient way of multiplying numbers by themselves (or their reciprocal) in large quantities. For example, ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "end": {
                  "line": 1,
                  "column": 172,
                  "offset": 171
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "pow(3, 5)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 172,
                  "offset": 171
                },
                "end": {
                  "line": 1,
                  "column": 183,
                  "offset": 182
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is equivalent to the expression ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 183,
                  "offset": 182
                },
                "end": {
                  "line": 1,
                  "column": 216,
                  "offset": 215
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "3 * 3 * 3 * 3 * 3",
              "position": {
                "start": {
                  "line": 1,
                  "column": 216,
                  "offset": 215
                },
                "end": {
                  "line": 1,
                  "column": 235,
                  "offset": 234
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 235,
                  "offset": 234
                },
                "end": {
                  "line": 1,
                  "column": 240,
                  "offset": 239
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "pow(3, -5)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 240,
                  "offset": 239
                },
                "end": {
                  "line": 1,
                  "column": 252,
                  "offset": 251
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is equivalent to ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 252,
                  "offset": 251
                },
                "end": {
                  "line": 1,
                  "column": 270,
                  "offset": 269
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "1 / 3 * 3 * 3 * 3 * 3",
              "position": {
                "start": {
                  "line": 1,
                  "column": 270,
                  "offset": 269
                },
                "end": {
                  "line": 1,
                  "column": 293,
                  "offset": 292
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 293,
                  "offset": 292
                },
                "end": {
                  "line": 1,
                  "column": 294,
                  "offset": 293
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 294,
              "offset": 293
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 294,
          "offset": 293
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Facilitates exponential expressions. The `pow()` function is an efficient way of multiplying numbers by themselves (or their reciprocal) in large quantities. For example, `pow(3, 5)` is equivalent to the expression `3 * 3 * 3 * 3 * 3` and `pow(3, -5)` is equivalent to `1 / 3 * 3 * 3 * 3 * 3`.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "pow"
      },
      {
        "title": "param",
        "description": "Base of the exponential expression.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "num"
      },
      {
        "title": "param",
        "description": "Power of which to raise the base.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "exponent"
      },
      {
        "title": "return",
        "description": "the result",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5560,
        "column": 0
      },
      "end": {
        "line": 5570,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5571,
          "column": 0
        },
        "end": {
          "line": 5571,
          "column": 19
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "num",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Base of the exponential expression.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 36,
                      "offset": 35
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 36,
              "offset": 35
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "exponent",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Power of which to raise the base.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 34,
              "offset": 33
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the result",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 11,
              "offset": 10
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "pow",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "pow",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".pow"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates the integer closest to the value parameter. For example, ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "round(9.2)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "end": {
                  "line": 1,
                  "column": 81,
                  "offset": 80
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " returns the value ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 81,
                  "offset": 80
                },
                "end": {
                  "line": 1,
                  "column": 100,
                  "offset": 99
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "9",
              "position": {
                "start": {
                  "line": 1,
                  "column": 100,
                  "offset": 99
                },
                "end": {
                  "line": 1,
                  "column": 103,
                  "offset": 102
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 103,
                  "offset": 102
                },
                "end": {
                  "line": 1,
                  "column": 104,
                  "offset": 103
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 104,
              "offset": 103
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 104,
          "offset": 103
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Calculates the integer closest to the value parameter. For example, `round(9.2)` returns the value `9`.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "round"
      },
      {
        "title": "param",
        "description": "The value to be rounded.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "value"
      },
      {
        "title": "return",
        "description": "The rounded value.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5573,
        "column": 0
      },
      "end": {
        "line": 5582,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5583,
          "column": 0
        },
        "end": {
          "line": 5583,
          "column": 23
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "value",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value to be rounded.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The rounded value.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "round",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "round",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".round"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Squares a number (multiplies a number by itself). The result is always a positive number, as multiplying two negative numbers always yields a positive result. For example, ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 173,
                  "offset": 172
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "-1 * -1 = 1",
              "position": {
                "start": {
                  "line": 1,
                  "column": 173,
                  "offset": 172
                },
                "end": {
                  "line": 1,
                  "column": 186,
                  "offset": 185
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 186,
                  "offset": 185
                },
                "end": {
                  "line": 1,
                  "column": 187,
                  "offset": 186
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 187,
              "offset": 186
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 187,
          "offset": 186
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Squares a number (multiplies a number by itself). The result is always a positive number, as multiplying two negative numbers always yields a positive result. For example, `-1 * -1 = 1`.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "sq"
      },
      {
        "title": "param",
        "description": "The value to be squared.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "aNumber"
      },
      {
        "title": "return",
        "description": "Squared number.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5585,
        "column": 0
      },
      "end": {
        "line": 5594,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5595,
          "column": 0
        },
        "end": {
          "line": 5598,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "aNumber",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value to be squared.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Squared number.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 16,
              "offset": 15
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "sq",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "sq",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".sq"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates the square root of a number. The square root of a number is always positive, even though there may be a valid negative root. The square root s of number a is such that ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 180,
                  "offset": 179
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "s * s = a",
              "position": {
                "start": {
                  "line": 1,
                  "column": 180,
                  "offset": 179
                },
                "end": {
                  "line": 1,
                  "column": 191,
                  "offset": 190
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ". It is the opposite of squaring.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 191,
                  "offset": 190
                },
                "end": {
                  "line": 1,
                  "column": 224,
                  "offset": 223
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 224,
              "offset": 223
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 224,
          "offset": 223
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Calculates the square root of a number. The square root of a number is always positive, even though there may be a valid negative root. The square root s of number a is such that `s * s = a`. It is the opposite of squaring.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "sqrt"
      },
      {
        "title": "param",
        "description": "A value.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "val"
      },
      {
        "title": "return",
        "description": "Square root.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5600,
        "column": 0
      },
      "end": {
        "line": 5609,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5610,
          "column": 0
        },
        "end": {
          "line": 5610,
          "column": 21
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "val",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A value.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 9,
                  "offset": 8
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 9,
              "offset": 8
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Square root.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 13,
                      "offset": 12
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 13,
              "offset": 12
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "sqrt",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "sqrt",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".sqrt"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the Perlin noise value at specified coordinates. Perlin noise is a random sequence generator producing a more natural ordered, harmonic succession of numbers compared to the standard ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 192,
                  "offset": 191
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "random()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 192,
                  "offset": 191
                },
                "end": {
                  "line": 1,
                  "column": 202,
                  "offset": 201
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function. It was invented by Ken Perlin in the 1980s and been used since in graphical applications to produce procedural textures, natural motion, shapes, terrains etc.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 202,
                  "offset": 201
                },
                "end": {
                  "line": 1,
                  "column": 371,
                  "offset": 370
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 371,
              "offset": 370
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The main difference to the ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 372
                },
                "end": {
                  "line": 3,
                  "column": 28,
                  "offset": 399
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "random()",
              "position": {
                "start": {
                  "line": 3,
                  "column": 28,
                  "offset": 399
                },
                "end": {
                  "line": 3,
                  "column": 38,
                  "offset": 409
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function is that Perlin noise is defined in an infinite n-dimensional space where each pair of coordinates corresponds to a fixed semi-random value (fixed only for the lifespan of the program). The resulting value will always be between ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 38,
                  "offset": 409
                },
                "end": {
                  "line": 3,
                  "column": 276,
                  "offset": 647
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "0",
              "position": {
                "start": {
                  "line": 3,
                  "column": 276,
                  "offset": 647
                },
                "end": {
                  "line": 3,
                  "column": 279,
                  "offset": 650
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 279,
                  "offset": 650
                },
                "end": {
                  "line": 3,
                  "column": 284,
                  "offset": 655
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "1",
              "position": {
                "start": {
                  "line": 3,
                  "column": 284,
                  "offset": 655
                },
                "end": {
                  "line": 3,
                  "column": 287,
                  "offset": 658
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ". basil.js can compute 1D, 2D and 3D noise, depending on the number of coordinates given. The noise value can be animated by moving through the noise space. The 2nd and 3rd dimension can also be interpreted as time.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 287,
                  "offset": 658
                },
                "end": {
                  "line": 3,
                  "column": 502,
                  "offset": 873
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 372
            },
            "end": {
              "line": 3,
              "column": 502,
              "offset": 873
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The actual noise is structured similar to an audio signal, in respect to the function's use of frequencies. Similar to the concept of harmonics in physics, perlin noise is computed over several octaves which are added together for the final result.",
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 875
                },
                "end": {
                  "line": 5,
                  "column": 249,
                  "offset": 1123
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 5,
              "column": 1,
              "offset": 875
            },
            "end": {
              "line": 5,
              "column": 249,
              "offset": 1123
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Another way to adjust the character of the resulting sequence is the scale of the input coordinates. As the function works within an infinite space the value of the coordinates doesn't matter as such, only the distance between successive coordinates does (eg. when using ",
              "position": {
                "start": {
                  "line": 7,
                  "column": 1,
                  "offset": 1125
                },
                "end": {
                  "line": 7,
                  "column": 272,
                  "offset": 1396
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "noise()",
              "position": {
                "start": {
                  "line": 7,
                  "column": 272,
                  "offset": 1396
                },
                "end": {
                  "line": 7,
                  "column": 281,
                  "offset": 1405
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " within a loop). As a general rule the smaller the difference between coordinates, the smoother the resulting noise sequence will be. Steps of ",
              "position": {
                "start": {
                  "line": 7,
                  "column": 281,
                  "offset": 1405
                },
                "end": {
                  "line": 7,
                  "column": 424,
                  "offset": 1548
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "0.005",
              "position": {
                "start": {
                  "line": 7,
                  "column": 424,
                  "offset": 1548
                },
                "end": {
                  "line": 7,
                  "column": 431,
                  "offset": 1555
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "- ",
              "position": {
                "start": {
                  "line": 7,
                  "column": 431,
                  "offset": 1555
                },
                "end": {
                  "line": 7,
                  "column": 433,
                  "offset": 1557
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "0.03",
              "position": {
                "start": {
                  "line": 7,
                  "column": 433,
                  "offset": 1557
                },
                "end": {
                  "line": 7,
                  "column": 439,
                  "offset": 1563
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " work best for most applications, but this will differ depending on use.",
              "position": {
                "start": {
                  "line": 7,
                  "column": 439,
                  "offset": 1563
                },
                "end": {
                  "line": 7,
                  "column": 511,
                  "offset": 1635
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 7,
              "column": 1,
              "offset": 1125
            },
            "end": {
              "line": 7,
              "column": 511,
              "offset": 1635
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 7,
          "column": 511,
          "offset": 1635
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns the Perlin noise value at specified coordinates. Perlin noise is a random sequence generator producing a more natural ordered, harmonic succession of numbers compared to the standard `random()` function. It was invented by Ken Perlin in the 1980s and been used since in graphical applications to produce procedural textures, natural motion, shapes, terrains etc.\n\nThe main difference to the `random()` function is that Perlin noise is defined in an infinite n-dimensional space where each pair of coordinates corresponds to a fixed semi-random value (fixed only for the lifespan of the program). The resulting value will always be between `0` and `1`. basil.js can compute 1D, 2D and 3D noise, depending on the number of coordinates given. The noise value can be animated by moving through the noise space. The 2nd and 3rd dimension can also be interpreted as time.\n\nThe actual noise is structured similar to an audio signal, in respect to the function's use of frequencies. Similar to the concept of harmonics in physics, perlin noise is computed over several octaves which are added together for the final result.\n\nAnother way to adjust the character of the resulting sequence is the scale of the input coordinates. As the function works within an infinite space the value of the coordinates doesn't matter as such, only the distance between successive coordinates does (eg. when using `noise()` within a loop). As a general rule the smaller the difference between coordinates, the smoother the resulting noise sequence will be. Steps of `0.005`- `0.03` work best for most applications, but this will differ depending on use.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 9
      },
      {
        "title": "subcat",
        "description": "Random",
        "lineNumber": 10
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 11,
        "name": "noise"
      },
      {
        "title": "param",
        "description": "Coordinate in x space.",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x"
      },
      {
        "title": "param",
        "description": "Coordinate in y space.",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "y"
      },
      {
        "title": "param",
        "description": "Coordinate in z space.",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "z"
      },
      {
        "title": "return",
        "description": "The noise value.",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5616,
        "column": 0
      },
      "end": {
        "line": 5633,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5634,
          "column": 0
        },
        "end": {
          "line": 5656,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Coordinate in x space.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "y",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Coordinate in y space.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "title": "param",
        "name": "z",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Coordinate in z space.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The noise value.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "noise",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "noise",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".noise"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Adjusts the character and level of detail produced by the Perlin noise function. Similar to harmonics in physics, noise is computed over several octaves. Lower octaves contribute more to the output signal and as such define the overal intensity of the noise, whereas higher octaves create finer grained details in the noise sequence. By default, noise is computed over 4 octaves with each octave contributing exactly half than its predecessor, starting at 50% strength for the 1st octave. This falloff amount can be changed by adding an additional function parameter. Eg. a falloff factor of ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 593,
                  "offset": 592
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "0.75",
              "position": {
                "start": {
                  "line": 1,
                  "column": 593,
                  "offset": 592
                },
                "end": {
                  "line": 1,
                  "column": 599,
                  "offset": 598
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " means each octave will now have 75% impact (25% less) of the previous lower octave. Any value between ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 599,
                  "offset": 598
                },
                "end": {
                  "line": 1,
                  "column": 702,
                  "offset": 701
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "0",
              "position": {
                "start": {
                  "line": 1,
                  "column": 702,
                  "offset": 701
                },
                "end": {
                  "line": 1,
                  "column": 705,
                  "offset": 704
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 705,
                  "offset": 704
                },
                "end": {
                  "line": 1,
                  "column": 710,
                  "offset": 709
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "1",
              "position": {
                "start": {
                  "line": 1,
                  "column": 710,
                  "offset": 709
                },
                "end": {
                  "line": 1,
                  "column": 713,
                  "offset": 712
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is valid, however note that values greater than ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 713,
                  "offset": 712
                },
                "end": {
                  "line": 1,
                  "column": 762,
                  "offset": 761
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "0.5",
              "position": {
                "start": {
                  "line": 1,
                  "column": 762,
                  "offset": 761
                },
                "end": {
                  "line": 1,
                  "column": 767,
                  "offset": 766
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " might result in greater than ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 767,
                  "offset": 766
                },
                "end": {
                  "line": 1,
                  "column": 797,
                  "offset": 796
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "1",
              "position": {
                "start": {
                  "line": 1,
                  "column": 797,
                  "offset": 796
                },
                "end": {
                  "line": 1,
                  "column": 800,
                  "offset": 799
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " values returned by ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 800,
                  "offset": 799
                },
                "end": {
                  "line": 1,
                  "column": 820,
                  "offset": 819
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "noise()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 820,
                  "offset": 819
                },
                "end": {
                  "line": 1,
                  "column": 829,
                  "offset": 828
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 829,
                  "offset": 828
                },
                "end": {
                  "line": 1,
                  "column": 830,
                  "offset": 829
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 830,
              "offset": 829
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "By changing these parameters, the signal created by the ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 831
                },
                "end": {
                  "line": 3,
                  "column": 57,
                  "offset": 887
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "noise()",
              "position": {
                "start": {
                  "line": 3,
                  "column": 57,
                  "offset": 887
                },
                "end": {
                  "line": 3,
                  "column": 66,
                  "offset": 896
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function can be adapted to fit very specific needs and characteristics.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 66,
                  "offset": 896
                },
                "end": {
                  "line": 3,
                  "column": 138,
                  "offset": 968
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 831
            },
            "end": {
              "line": 3,
              "column": 138,
              "offset": 968
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 138,
          "offset": 968
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Adjusts the character and level of detail produced by the Perlin noise function. Similar to harmonics in physics, noise is computed over several octaves. Lower octaves contribute more to the output signal and as such define the overal intensity of the noise, whereas higher octaves create finer grained details in the noise sequence. By default, noise is computed over 4 octaves with each octave contributing exactly half than its predecessor, starting at 50% strength for the 1st octave. This falloff amount can be changed by adding an additional function parameter. Eg. a falloff factor of `0.75` means each octave will now have 75% impact (25% less) of the previous lower octave. Any value between `0` and `1` is valid, however note that values greater than `0.5` might result in greater than `1` values returned by `noise()`.\n\nBy changing these parameters, the signal created by the `noise()` function can be adapted to fit very specific needs and characteristics.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 5
      },
      {
        "title": "subcat",
        "description": "Random",
        "lineNumber": 6
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 7,
        "name": "noiseDetail"
      },
      {
        "title": "param",
        "description": "Number of octaves to be used by the noise() function.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "octaves"
      },
      {
        "title": "param",
        "description": "Falloff factor for each octave.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "fallout"
      }
    ],
    "loc": {
      "start": {
        "line": 5658,
        "column": 0
      },
      "end": {
        "line": 5669,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5670,
          "column": 0
        },
        "end": {
          "line": 5673,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "octaves",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Number of octaves to be used by the noise() function.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 54,
                      "offset": 53
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 54,
              "offset": 53
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "fallout",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Falloff factor for each octave.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "noiseDetail",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "noiseDetail",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".noiseDetail"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the seed value for ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "noise()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "end": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ". By default, ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "noise()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "end": {
                  "line": 1,
                  "column": 57,
                  "offset": 56
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " produces different results each time the program is run. Set the value parameter to a constant to return the same pseudo-random numbers each time the software is run.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 57,
                  "offset": 56
                },
                "end": {
                  "line": 1,
                  "column": 224,
                  "offset": 223
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 224,
              "offset": 223
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 224,
          "offset": 223
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Sets the seed value for `noise()`. By default, `noise()` produces different results each time the program is run. Set the value parameter to a constant to return the same pseudo-random numbers each time the software is run.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Random",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "noiseSeed"
      },
      {
        "title": "param",
        "description": "Noise seed value.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "seed"
      }
    ],
    "loc": {
      "start": {
        "line": 5675,
        "column": 0
      },
      "end": {
        "line": 5683,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5684,
          "column": 0
        },
        "end": {
          "line": 5687,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "seed",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Noise seed value.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "noiseSeed",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "noiseSeed",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".noiseSeed"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Generates random numbers. Each time the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "random()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "end": {
                  "line": 1,
                  "column": 51,
                  "offset": 50
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function is called, it returns an unexpected value within the specified range. If one parameter is passed to the function it will return a float between zero and the value of the high parameter. The function call ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 51,
                  "offset": 50
                },
                "end": {
                  "line": 1,
                  "column": 265,
                  "offset": 264
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "random(5)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 265,
                  "offset": 264
                },
                "end": {
                  "line": 1,
                  "column": 276,
                  "offset": 275
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " returns values between ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 276,
                  "offset": 275
                },
                "end": {
                  "line": 1,
                  "column": 300,
                  "offset": 299
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "0",
              "position": {
                "start": {
                  "line": 1,
                  "column": 300,
                  "offset": 299
                },
                "end": {
                  "line": 1,
                  "column": 303,
                  "offset": 302
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 303,
                  "offset": 302
                },
                "end": {
                  "line": 1,
                  "column": 308,
                  "offset": 307
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "5",
              "position": {
                "start": {
                  "line": 1,
                  "column": 308,
                  "offset": 307
                },
                "end": {
                  "line": 1,
                  "column": 311,
                  "offset": 310
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ". If two parameters are passed, it will return a float with a value between the the parameters. The function call ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 311,
                  "offset": 310
                },
                "end": {
                  "line": 1,
                  "column": 425,
                  "offset": 424
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "random(-5, 10.2)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 425,
                  "offset": 424
                },
                "end": {
                  "line": 1,
                  "column": 443,
                  "offset": 442
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " returns values between ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 443,
                  "offset": 442
                },
                "end": {
                  "line": 1,
                  "column": 467,
                  "offset": 466
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "-5",
              "position": {
                "start": {
                  "line": 1,
                  "column": 467,
                  "offset": 466
                },
                "end": {
                  "line": 1,
                  "column": 471,
                  "offset": 470
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 471,
                  "offset": 470
                },
                "end": {
                  "line": 1,
                  "column": 476,
                  "offset": 475
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "10.2",
              "position": {
                "start": {
                  "line": 1,
                  "column": 476,
                  "offset": 475
                },
                "end": {
                  "line": 1,
                  "column": 482,
                  "offset": 481
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".\nOne parameter sets the range from ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 482,
                  "offset": 481
                },
                "end": {
                  "line": 2,
                  "column": 35,
                  "offset": 517
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "0",
              "position": {
                "start": {
                  "line": 2,
                  "column": 35,
                  "offset": 517
                },
                "end": {
                  "line": 2,
                  "column": 38,
                  "offset": 520
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " to the given parameter, while with two parameters present you set the range from ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 38,
                  "offset": 520
                },
                "end": {
                  "line": 2,
                  "column": 120,
                  "offset": 602
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "val1",
              "position": {
                "start": {
                  "line": 2,
                  "column": 120,
                  "offset": 602
                },
                "end": {
                  "line": 2,
                  "column": 126,
                  "offset": 608
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " to ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 126,
                  "offset": 608
                },
                "end": {
                  "line": 2,
                  "column": 130,
                  "offset": 612
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "val2",
              "position": {
                "start": {
                  "line": 2,
                  "column": 130,
                  "offset": 612
                },
                "end": {
                  "line": 2,
                  "column": 136,
                  "offset": 618
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 2,
                  "column": 136,
                  "offset": 618
                },
                "end": {
                  "line": 2,
                  "column": 137,
                  "offset": 619
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 137,
              "offset": 619
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 137,
          "offset": 619
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Generates random numbers. Each time the `random()` function is called, it returns an unexpected value within the specified range. If one parameter is passed to the function it will return a float between zero and the value of the high parameter. The function call `random(5)` returns values between `0` and `5`. If two parameters are passed, it will return a float with a value between the the parameters. The function call `random(-5, 10.2)` returns values between `-5` and `10.2`.\nOne parameter sets the range from `0` to the given parameter, while with two parameters present you set the range from `val1` to `val2`.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "Random",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "random"
      },
      {
        "title": "param",
        "description": "The low border of the range.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "low"
      },
      {
        "title": "param",
        "description": "The high border of the range.",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "high"
      },
      {
        "title": "return",
        "description": "A random number.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5689,
        "column": 0
      },
      "end": {
        "line": 5700,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5701,
          "column": 0
        },
        "end": {
          "line": 5707,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "low",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The low border of the range.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "title": "param",
        "name": "high",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The high border of the range.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A random number.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "random",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "random",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".random"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the seed value for ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "random()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".\nBy default, ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "end": {
                  "line": 2,
                  "column": 13,
                  "offset": 48
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "random()",
              "position": {
                "start": {
                  "line": 2,
                  "column": 13,
                  "offset": 48
                },
                "end": {
                  "line": 2,
                  "column": 23,
                  "offset": 58
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " produces different results each time the program is run. Set the seed parameter to a constant to return the same pseudo-random numbers each time the software is run.",
              "position": {
                "start": {
                  "line": 2,
                  "column": 23,
                  "offset": 58
                },
                "end": {
                  "line": 2,
                  "column": 189,
                  "offset": 224
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 189,
              "offset": 224
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 189,
          "offset": 224
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Sets the seed value for `random()`.\nBy default, `random()` produces different results each time the program is run. Set the seed parameter to a constant to return the same pseudo-random numbers each time the software is run.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "Random",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "randomSeed"
      },
      {
        "title": "param",
        "description": "The seed value.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "seed"
      }
    ],
    "loc": {
      "start": {
        "line": 5709,
        "column": 0
      },
      "end": {
        "line": 5718,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5719,
          "column": 0
        },
        "end": {
          "line": 5721,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "seed",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The seed value.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 16,
              "offset": 15
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "randomSeed",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "randomSeed",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".randomSeed"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The inverse of ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "cos()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", returns the arc cosine of a value. This function expects the values in the range of ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "end": {
                  "line": 1,
                  "column": 109,
                  "offset": 108
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "-1",
              "position": {
                "start": {
                  "line": 1,
                  "column": 109,
                  "offset": 108
                },
                "end": {
                  "line": 1,
                  "column": 113,
                  "offset": 112
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " to ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 113,
                  "offset": 112
                },
                "end": {
                  "line": 1,
                  "column": 117,
                  "offset": 116
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "1",
              "position": {
                "start": {
                  "line": 1,
                  "column": 117,
                  "offset": 116
                },
                "end": {
                  "line": 1,
                  "column": 120,
                  "offset": 119
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and values are returned in the range ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 120,
                  "offset": 119
                },
                "end": {
                  "line": 1,
                  "column": 158,
                  "offset": 157
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "0",
              "position": {
                "start": {
                  "line": 1,
                  "column": 158,
                  "offset": 157
                },
                "end": {
                  "line": 1,
                  "column": 161,
                  "offset": 160
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " to ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 161,
                  "offset": 160
                },
                "end": {
                  "line": 1,
                  "column": 165,
                  "offset": 164
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "PI",
              "position": {
                "start": {
                  "line": 1,
                  "column": 165,
                  "offset": 164
                },
                "end": {
                  "line": 1,
                  "column": 169,
                  "offset": 168
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " (",
              "position": {
                "start": {
                  "line": 1,
                  "column": 169,
                  "offset": 168
                },
                "end": {
                  "line": 1,
                  "column": 171,
                  "offset": 170
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "3.1415927",
              "position": {
                "start": {
                  "line": 1,
                  "column": 171,
                  "offset": 170
                },
                "end": {
                  "line": 1,
                  "column": 182,
                  "offset": 181
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ").",
              "position": {
                "start": {
                  "line": 1,
                  "column": 182,
                  "offset": 181
                },
                "end": {
                  "line": 1,
                  "column": 184,
                  "offset": 183
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 184,
              "offset": 183
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 184,
          "offset": 183
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "The inverse of `cos()`, returns the arc cosine of a value. This function expects the values in the range of `-1` to `1` and values are returned in the range `0` to `PI` (`3.1415927`).",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Trigonometry",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "acos"
      },
      {
        "title": "param",
        "description": "The value whose arc cosine is to be returned.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "value"
      },
      {
        "title": "return",
        "description": "The arc cosine.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5727,
        "column": 0
      },
      "end": {
        "line": 5736,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5737,
          "column": 0
        },
        "end": {
          "line": 5737,
          "column": 21
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "value",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value whose arc cosine is to be returned.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The arc cosine.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 16,
              "offset": 15
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "acos",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "acos",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".acos"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The inverse of ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "sin()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", returns the arc sine of a value. This function expects the values in the range of ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "end": {
                  "line": 1,
                  "column": 107,
                  "offset": 106
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "-1",
              "position": {
                "start": {
                  "line": 1,
                  "column": 107,
                  "offset": 106
                },
                "end": {
                  "line": 1,
                  "column": 111,
                  "offset": 110
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " to ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 111,
                  "offset": 110
                },
                "end": {
                  "line": 1,
                  "column": 115,
                  "offset": 114
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "1",
              "position": {
                "start": {
                  "line": 1,
                  "column": 115,
                  "offset": 114
                },
                "end": {
                  "line": 1,
                  "column": 118,
                  "offset": 117
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and values are returned in the range ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 118,
                  "offset": 117
                },
                "end": {
                  "line": 1,
                  "column": 156,
                  "offset": 155
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "0",
              "position": {
                "start": {
                  "line": 1,
                  "column": 156,
                  "offset": 155
                },
                "end": {
                  "line": 1,
                  "column": 159,
                  "offset": 158
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " to ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 159,
                  "offset": 158
                },
                "end": {
                  "line": 1,
                  "column": 163,
                  "offset": 162
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "PI",
              "position": {
                "start": {
                  "line": 1,
                  "column": 163,
                  "offset": 162
                },
                "end": {
                  "line": 1,
                  "column": 167,
                  "offset": 166
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " (",
              "position": {
                "start": {
                  "line": 1,
                  "column": 167,
                  "offset": 166
                },
                "end": {
                  "line": 1,
                  "column": 169,
                  "offset": 168
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "3.1415927",
              "position": {
                "start": {
                  "line": 1,
                  "column": 169,
                  "offset": 168
                },
                "end": {
                  "line": 1,
                  "column": 180,
                  "offset": 179
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ").",
              "position": {
                "start": {
                  "line": 1,
                  "column": 180,
                  "offset": 179
                },
                "end": {
                  "line": 1,
                  "column": 182,
                  "offset": 181
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 182,
              "offset": 181
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 182,
          "offset": 181
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "The inverse of `sin()`, returns the arc sine of a value. This function expects the values in the range of `-1` to `1` and values are returned in the range `0` to `PI` (`3.1415927`).",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Trigonometry",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "asin"
      },
      {
        "title": "param",
        "description": "The value whose arc sine is to be returned.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "value"
      },
      {
        "title": "return",
        "description": "The arc sine.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5739,
        "column": 0
      },
      "end": {
        "line": 5748,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5749,
          "column": 0
        },
        "end": {
          "line": 5749,
          "column": 21
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "value",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value whose arc sine is to be returned.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 44,
                      "offset": 43
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 44,
                  "offset": 43
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 44,
              "offset": 43
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The arc sine.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 14,
              "offset": 13
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "asin",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "asin",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".asin"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The inverse of ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "tan()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", returns the arc tangent of a value. This function expects the values in the range of ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "end": {
                  "line": 1,
                  "column": 110,
                  "offset": 109
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "-1",
              "position": {
                "start": {
                  "line": 1,
                  "column": 110,
                  "offset": 109
                },
                "end": {
                  "line": 1,
                  "column": 114,
                  "offset": 113
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " to ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 114,
                  "offset": 113
                },
                "end": {
                  "line": 1,
                  "column": 118,
                  "offset": 117
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "1",
              "position": {
                "start": {
                  "line": 1,
                  "column": 118,
                  "offset": 117
                },
                "end": {
                  "line": 1,
                  "column": 121,
                  "offset": 120
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and values are returned in the range ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 121,
                  "offset": 120
                },
                "end": {
                  "line": 1,
                  "column": 159,
                  "offset": 158
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "0",
              "position": {
                "start": {
                  "line": 1,
                  "column": 159,
                  "offset": 158
                },
                "end": {
                  "line": 1,
                  "column": 162,
                  "offset": 161
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " to ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 162,
                  "offset": 161
                },
                "end": {
                  "line": 1,
                  "column": 166,
                  "offset": 165
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "PI",
              "position": {
                "start": {
                  "line": 1,
                  "column": 166,
                  "offset": 165
                },
                "end": {
                  "line": 1,
                  "column": 170,
                  "offset": 169
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " (",
              "position": {
                "start": {
                  "line": 1,
                  "column": 170,
                  "offset": 169
                },
                "end": {
                  "line": 1,
                  "column": 172,
                  "offset": 171
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "3.1415927",
              "position": {
                "start": {
                  "line": 1,
                  "column": 172,
                  "offset": 171
                },
                "end": {
                  "line": 1,
                  "column": 183,
                  "offset": 182
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ").",
              "position": {
                "start": {
                  "line": 1,
                  "column": 183,
                  "offset": 182
                },
                "end": {
                  "line": 1,
                  "column": 185,
                  "offset": 184
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 185,
              "offset": 184
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 185,
          "offset": 184
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "The inverse of `tan()`, returns the arc tangent of a value. This function expects the values in the range of `-1` to `1` and values are returned in the range `0` to `PI` (`3.1415927`).",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Trigonometry",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "atan"
      },
      {
        "title": "param",
        "description": "The value whose arc tangent is to be returned.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "value"
      },
      {
        "title": "return",
        "description": "The arc tangent.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5751,
        "column": 0
      },
      "end": {
        "line": 5760,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5761,
          "column": 0
        },
        "end": {
          "line": 5761,
          "column": 21
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "value",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value whose arc tangent is to be returned.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 47,
                      "offset": 46
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 47,
                  "offset": 46
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 47,
              "offset": 46
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The arc tangent.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "atan",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "atan",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".atan"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates the angle (in radians) from a specified point to the coordinate origin as measured from the positive x-axis. Values are returned as a float in the range from ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 170,
                  "offset": 169
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "PI",
              "position": {
                "start": {
                  "line": 1,
                  "column": 170,
                  "offset": 169
                },
                "end": {
                  "line": 1,
                  "column": 174,
                  "offset": 173
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " to ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 174,
                  "offset": 173
                },
                "end": {
                  "line": 1,
                  "column": 178,
                  "offset": 177
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "-PI",
              "position": {
                "start": {
                  "line": 1,
                  "column": 178,
                  "offset": 177
                },
                "end": {
                  "line": 1,
                  "column": 183,
                  "offset": 182
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ". The ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 183,
                  "offset": 182
                },
                "end": {
                  "line": 1,
                  "column": 189,
                  "offset": 188
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "atan2()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 189,
                  "offset": 188
                },
                "end": {
                  "line": 1,
                  "column": 198,
                  "offset": 197
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function is most often used for orienting geometry to the position of the cursor. Note: The y-coordinate of the point is the first parameter and the x-coordinate is the second due the the structure of calculating the tangent.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 198,
                  "offset": 197
                },
                "end": {
                  "line": 1,
                  "column": 424,
                  "offset": 423
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 424,
              "offset": 423
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 424,
          "offset": 423
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Calculates the angle (in radians) from a specified point to the coordinate origin as measured from the positive x-axis. Values are returned as a float in the range from `PI` to `-PI`. The `atan2()` function is most often used for orienting geometry to the position of the cursor. Note: The y-coordinate of the point is the first parameter and the x-coordinate is the second due the the structure of calculating the tangent.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Trigonometry",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "atan2"
      },
      {
        "title": "param",
        "description": "The y coordinate.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y"
      },
      {
        "title": "param",
        "description": "The x coordinate.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x"
      },
      {
        "title": "return",
        "description": "The atan2 value.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5763,
        "column": 0
      },
      "end": {
        "line": 5773,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5774,
          "column": 0
        },
        "end": {
          "line": 5774,
          "column": 23
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "y",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The y coordinate.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "x",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The x coordinate.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The atan2 value.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "atan2",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "atan2",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".atan2"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates the cosine of an angle. This function expects the values of the angle parameter to be provided in radians (values from ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 131,
                  "offset": 130
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "0",
              "position": {
                "start": {
                  "line": 1,
                  "column": 131,
                  "offset": 130
                },
                "end": {
                  "line": 1,
                  "column": 134,
                  "offset": 133
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " to ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 134,
                  "offset": 133
                },
                "end": {
                  "line": 1,
                  "column": 138,
                  "offset": 137
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "PI * 2",
              "position": {
                "start": {
                  "line": 1,
                  "column": 138,
                  "offset": 137
                },
                "end": {
                  "line": 1,
                  "column": 146,
                  "offset": 145
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "). Values are returned in the range ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 146,
                  "offset": 145
                },
                "end": {
                  "line": 1,
                  "column": 182,
                  "offset": 181
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "-1",
              "position": {
                "start": {
                  "line": 1,
                  "column": 182,
                  "offset": 181
                },
                "end": {
                  "line": 1,
                  "column": 186,
                  "offset": 185
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " to ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 186,
                  "offset": 185
                },
                "end": {
                  "line": 1,
                  "column": 190,
                  "offset": 189
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "1",
              "position": {
                "start": {
                  "line": 1,
                  "column": 190,
                  "offset": 189
                },
                "end": {
                  "line": 1,
                  "column": 193,
                  "offset": 192
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 193,
                  "offset": 192
                },
                "end": {
                  "line": 1,
                  "column": 194,
                  "offset": 193
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 194,
              "offset": 193
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 194,
          "offset": 193
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Calculates the cosine of an angle. This function expects the values of the angle parameter to be provided in radians (values from `0` to `PI * 2`). Values are returned in the range `-1` to `1`.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Trigonometry",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "cos"
      },
      {
        "title": "param",
        "description": "A value in radians.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "rad"
      },
      {
        "title": "return",
        "description": "The cosine.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5776,
        "column": 0
      },
      "end": {
        "line": 5785,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5786,
          "column": 0
        },
        "end": {
          "line": 5786,
          "column": 19
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "rad",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A value in radians.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The cosine.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 12,
              "offset": 11
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "cos",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "cos",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".cos"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Converts a radian measurement to its corresponding value in degrees. Radians and degrees are two ways of measuring the same thing. There are 360 degrees in a circle and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 170,
                  "offset": 169
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "2 * PI",
              "position": {
                "start": {
                  "line": 1,
                  "column": 170,
                  "offset": 169
                },
                "end": {
                  "line": 1,
                  "column": 178,
                  "offset": 177
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " radians in a circle. For example, ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 178,
                  "offset": 177
                },
                "end": {
                  "line": 1,
                  "column": 213,
                  "offset": 212
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "90° = PI / 2 = 1.5707964",
              "position": {
                "start": {
                  "line": 1,
                  "column": 213,
                  "offset": 212
                },
                "end": {
                  "line": 1,
                  "column": 239,
                  "offset": 238
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ". All trigonometric methods in basil require their parameters to be specified in radians.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 239,
                  "offset": 238
                },
                "end": {
                  "line": 1,
                  "column": 328,
                  "offset": 327
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 328,
              "offset": 327
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 328,
          "offset": 327
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Converts a radian measurement to its corresponding value in degrees. Radians and degrees are two ways of measuring the same thing. There are 360 degrees in a circle and `2 * PI` radians in a circle. For example, `90° = PI / 2 = 1.5707964`. All trigonometric methods in basil require their parameters to be specified in radians.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Trigonometry",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "degrees"
      },
      {
        "title": "param",
        "description": "An angle in radians.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "aAngle"
      },
      {
        "title": "return",
        "description": "The given angle in degree.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5788,
        "column": 0
      },
      "end": {
        "line": 5797,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5798,
          "column": 0
        },
        "end": {
          "line": 5800,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "aAngle",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An angle in radians.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The given angle in degree.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "degrees",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "degrees",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".degrees"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Converts a degree measurement to its corresponding value in radians. Radians and degrees are two ways of measuring the same thing. There are 360 degrees in a circle and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 170,
                  "offset": 169
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "2 * PI",
              "position": {
                "start": {
                  "line": 1,
                  "column": 170,
                  "offset": 169
                },
                "end": {
                  "line": 1,
                  "column": 178,
                  "offset": 177
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " radians in a circle. For example, ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 178,
                  "offset": 177
                },
                "end": {
                  "line": 1,
                  "column": 213,
                  "offset": 212
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "90° = PI / 2 = 1.5707964",
              "position": {
                "start": {
                  "line": 1,
                  "column": 213,
                  "offset": 212
                },
                "end": {
                  "line": 1,
                  "column": 239,
                  "offset": 238
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ". All trigonometric methods in basil require their parameters to be specified in radians.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 239,
                  "offset": 238
                },
                "end": {
                  "line": 1,
                  "column": 328,
                  "offset": 327
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 328,
              "offset": 327
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 328,
          "offset": 327
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Converts a degree measurement to its corresponding value in radians. Radians and degrees are two ways of measuring the same thing. There are 360 degrees in a circle and `2 * PI` radians in a circle. For example, `90° = PI / 2 = 1.5707964`. All trigonometric methods in basil require their parameters to be specified in radians.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Trigonometry",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "radians"
      },
      {
        "title": "param",
        "description": "An angle in degree.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "aAngle"
      },
      {
        "title": "return",
        "description": "The given angle in radians.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5802,
        "column": 0
      },
      "end": {
        "line": 5811,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5812,
          "column": 0
        },
        "end": {
          "line": 5814,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "aAngle",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An angle in degree.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The given angle in radians.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "radians",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "radians",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".radians"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates the sine of an angle. This function expects the values of the angle parameter to be provided in radians (values from ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 129,
                  "offset": 128
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "0",
              "position": {
                "start": {
                  "line": 1,
                  "column": 129,
                  "offset": 128
                },
                "end": {
                  "line": 1,
                  "column": 132,
                  "offset": 131
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " to ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 132,
                  "offset": 131
                },
                "end": {
                  "line": 1,
                  "column": 136,
                  "offset": 135
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "6.28",
              "position": {
                "start": {
                  "line": 1,
                  "column": 136,
                  "offset": 135
                },
                "end": {
                  "line": 1,
                  "column": 142,
                  "offset": 141
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "). Values are returned in the range ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 142,
                  "offset": 141
                },
                "end": {
                  "line": 1,
                  "column": 178,
                  "offset": 177
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "-1",
              "position": {
                "start": {
                  "line": 1,
                  "column": 178,
                  "offset": 177
                },
                "end": {
                  "line": 1,
                  "column": 182,
                  "offset": 181
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " to ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 182,
                  "offset": 181
                },
                "end": {
                  "line": 1,
                  "column": 186,
                  "offset": 185
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "1",
              "position": {
                "start": {
                  "line": 1,
                  "column": 186,
                  "offset": 185
                },
                "end": {
                  "line": 1,
                  "column": 189,
                  "offset": 188
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 189,
                  "offset": 188
                },
                "end": {
                  "line": 1,
                  "column": 190,
                  "offset": 189
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 190,
              "offset": 189
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 190,
          "offset": 189
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Calculates the sine of an angle. This function expects the values of the angle parameter to be provided in radians (values from `0` to `6.28`). Values are returned in the range `-1` to `1`.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Trigonometry",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "sin"
      },
      {
        "title": "param",
        "description": "A value in radians.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "rad"
      },
      {
        "title": "return",
        "description": "The sine value.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5816,
        "column": 0
      },
      "end": {
        "line": 5825,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5826,
          "column": 0
        },
        "end": {
          "line": 5826,
          "column": 19
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "rad",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A value in radians.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The sine value.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 16,
              "offset": 15
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "sin",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "sin",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".sin"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates the ratio of the sine and cosine of an angle. This function expects the values of the angle parameter to be provided in radians (values from ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 153,
                  "offset": 152
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "0",
              "position": {
                "start": {
                  "line": 1,
                  "column": 153,
                  "offset": 152
                },
                "end": {
                  "line": 1,
                  "column": 156,
                  "offset": 155
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " to ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 156,
                  "offset": 155
                },
                "end": {
                  "line": 1,
                  "column": 160,
                  "offset": 159
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "PI * 2",
              "position": {
                "start": {
                  "line": 1,
                  "column": 160,
                  "offset": 159
                },
                "end": {
                  "line": 1,
                  "column": 168,
                  "offset": 167
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "). Values are returned in the range ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 168,
                  "offset": 167
                },
                "end": {
                  "line": 1,
                  "column": 204,
                  "offset": 203
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "infinity",
              "position": {
                "start": {
                  "line": 1,
                  "column": 204,
                  "offset": 203
                },
                "end": {
                  "line": 1,
                  "column": 214,
                  "offset": 213
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " to ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 214,
                  "offset": 213
                },
                "end": {
                  "line": 1,
                  "column": 218,
                  "offset": 217
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "-infinity",
              "position": {
                "start": {
                  "line": 1,
                  "column": 218,
                  "offset": 217
                },
                "end": {
                  "line": 1,
                  "column": 229,
                  "offset": 228
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 229,
                  "offset": 228
                },
                "end": {
                  "line": 1,
                  "column": 230,
                  "offset": 229
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 230,
              "offset": 229
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 230,
          "offset": 229
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Calculates the ratio of the sine and cosine of an angle. This function expects the values of the angle parameter to be provided in radians (values from `0` to `PI * 2`). Values are returned in the range `infinity` to `-infinity`.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Trigonometry",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "tan"
      },
      {
        "title": "param",
        "description": "A value in radians.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "rad"
      },
      {
        "title": "return",
        "description": "The tangent value.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5828,
        "column": 0
      },
      "end": {
        "line": 5837,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5838,
          "column": 0
        },
        "end": {
          "line": 5838,
          "column": 19
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "rad",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A value in radians.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The tangent value.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "tan",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "tan",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".tan"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Epsilon",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 8,
                  "offset": 7
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 8,
              "offset": 7
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 8,
          "offset": 7
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Epsilon",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 4
      },
      {
        "title": "property",
        "description": "{Number}",
        "lineNumber": 5,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "EPSILON"
      }
    ],
    "loc": {
      "start": {
        "line": 6211,
        "column": 0
      },
      "end": {
        "line": 6217,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6218,
          "column": 0
        },
        "end": {
          "line": 6218,
          "column": 21
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "EPSILON",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "EPSILON",
        "scope": "static"
      }
    ],
    "namespace": ".EPSILON"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Half Pi",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 8,
                  "offset": 7
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 8,
              "offset": 7
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 8,
          "offset": 7
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Half Pi",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 4
      },
      {
        "title": "property",
        "description": "{Number}",
        "lineNumber": 5,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "HALF_PI"
      }
    ],
    "loc": {
      "start": {
        "line": 6220,
        "column": 0
      },
      "end": {
        "line": 6226,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6227,
          "column": 0
        },
        "end": {
          "line": 6227,
          "column": 26
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "HALF_PI",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "HALF_PI",
        "scope": "static"
      }
    ],
    "namespace": ".HALF_PI"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Kappa",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 6,
              "offset": 5
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 6,
          "offset": 5
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Kappa",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 4
      },
      {
        "title": "property",
        "description": "{Number}",
        "lineNumber": 5,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "KAPPA"
      }
    ],
    "loc": {
      "start": {
        "line": 6229,
        "column": 0
      },
      "end": {
        "line": 6235,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6237,
          "column": 0
        },
        "end": {
          "line": 6237,
          "column": 49
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "KAPPA",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "KAPPA",
        "scope": "static"
      }
    ],
    "namespace": ".KAPPA"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Pi",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 3,
                  "offset": 2
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 3,
              "offset": 2
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 3,
          "offset": 2
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Pi",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 4
      },
      {
        "title": "property",
        "description": "{Number}",
        "lineNumber": 5,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "PI"
      }
    ],
    "loc": {
      "start": {
        "line": 6239,
        "column": 0
      },
      "end": {
        "line": 6245,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6246,
          "column": 0
        },
        "end": {
          "line": 6246,
          "column": 17
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "PI",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "PI",
        "scope": "static"
      }
    ],
    "namespace": ".PI"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Quarter Pi",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 11,
              "offset": 10
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 11,
          "offset": 10
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Quarter Pi",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 4
      },
      {
        "title": "property",
        "description": "{Number}",
        "lineNumber": 5,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "QUARTER_PI"
      }
    ],
    "loc": {
      "start": {
        "line": 6248,
        "column": 0
      },
      "end": {
        "line": 6254,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6255,
          "column": 0
        },
        "end": {
          "line": 6255,
          "column": 29
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "QUARTER_PI",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "QUARTER_PI",
        "scope": "static"
      }
    ],
    "namespace": ".QUARTER_PI"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sin Cos Length",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 15,
              "offset": 14
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 15,
          "offset": 14
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Sin Cos Length",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 4
      },
      {
        "title": "property",
        "description": "{Number}",
        "lineNumber": 5,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "SINCOS_LENGTH"
      }
    ],
    "loc": {
      "start": {
        "line": 6257,
        "column": 0
      },
      "end": {
        "line": 6263,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6264,
          "column": 0
        },
        "end": {
          "line": 6264,
          "column": 24
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "SINCOS_LENGTH",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "SINCOS_LENGTH",
        "scope": "static"
      }
    ],
    "namespace": ".SINCOS_LENGTH"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Two Pi",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 7,
                  "offset": 6
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 7,
              "offset": 6
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 7,
          "offset": 6
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Two Pi",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 4
      },
      {
        "title": "property",
        "description": "{Number}",
        "lineNumber": 5,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "TWO_PI"
      }
    ],
    "loc": {
      "start": {
        "line": 6266,
        "column": 0
      },
      "end": {
        "line": 6272,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6273,
          "column": 0
        },
        "end": {
          "line": 6273,
          "column": 25
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "TWO_PI",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "TWO_PI",
        "scope": "static"
      }
    ],
    "namespace": ".TWO_PI"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Prints a message to the console output in the ExtendScript editor, but unlike ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 79,
                  "offset": 78
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "println()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 79,
                  "offset": 78
                },
                "end": {
                  "line": 1,
                  "column": 90,
                  "offset": 89
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " it doesn't return the carriage to a new line at the end.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 90,
                  "offset": 89
                },
                "end": {
                  "line": 1,
                  "column": 147,
                  "offset": 146
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 147,
              "offset": 146
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 147,
          "offset": 146
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Prints a message to the console output in the ExtendScript editor, but unlike `println()` it doesn't return the carriage to a new line at the end.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Output",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Console",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "print"
      },
      {
        "title": "param",
        "description": "Any combination of Number, String, Object, Boolean, Array to print.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Any"
        },
        "name": "msg"
      }
    ],
    "loc": {
      "start": {
        "line": 6389,
        "column": 0
      },
      "end": {
        "line": 6397,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6398,
          "column": 0
        },
        "end": {
          "line": 6403,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "msg",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Any combination of Number, String, Object, Boolean, Array to print.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 68,
                      "offset": 67
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 68,
                  "offset": 67
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 68,
              "offset": 67
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Any"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "print",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "print",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".print"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Exports the current document as PDF to the documents folder. Please note that export options default to the last used export settings.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 135,
                  "offset": 134
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 135,
              "offset": 134
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 135,
          "offset": 134
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Exports the current document as PDF to the documents folder. Please note that export options default to the last used export settings.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Output",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Files",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "savePDF"
      },
      {
        "title": "param",
        "description": "The file name or a File instance.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        },
        "name": "file"
      },
      {
        "title": "param",
        "description": "Whether to show the export dialog.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Boolean"
          }
        },
        "name": "showOptions"
      },
      {
        "title": "return",
        "description": "The exported PDF file.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "File"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 6425,
        "column": 0
      },
      "end": {
        "line": 6435,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6436,
          "column": 0
        },
        "end": {
          "line": 6446,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "file",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The file name or a File instance.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 34,
              "offset": 33
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "showOptions",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Whether to show the export dialog.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Boolean"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The exported PDF file.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "File"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "savePDF",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "savePDF",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".savePDF"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Exports the current document as PNG (or sequence of PNG files) to the documents folder. Please note, that export options default to the last used export settings.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 163,
                  "offset": 162
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 163,
              "offset": 162
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 163,
          "offset": 162
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Exports the current document as PNG (or sequence of PNG files) to the documents folder. Please note, that export options default to the last used export settings.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Output",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Files",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "savePNG"
      },
      {
        "title": "param",
        "description": "The file name or a File instance",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        },
        "name": "file"
      },
      {
        "title": "param",
        "description": "Whether to show the export dialog",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Boolean"
          }
        },
        "name": "showOptions"
      },
      {
        "title": "return",
        "description": "The exported PNG file.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "File"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 6448,
        "column": 0
      },
      "end": {
        "line": 6458,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6459,
          "column": 0
        },
        "end": {
          "line": 6469,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "file",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The file name or a File instance",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "showOptions",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Whether to show the export dialog",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 34,
              "offset": 33
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Boolean"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The exported PNG file.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "File"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "savePNG",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "savePNG",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".savePNG"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Writes a string to a file. If the given file exists it gets overridden.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 72,
                  "offset": 71
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 72,
              "offset": 71
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 72,
          "offset": 71
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Writes a string to a file. If the given file exists it gets overridden.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Output",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Files",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "saveString"
      },
      {
        "title": "param",
        "description": "The file name or a File instance.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        },
        "name": "file"
      },
      {
        "title": "param",
        "description": "The string to be written.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "string"
      },
      {
        "title": "return",
        "description": "The file the string was written to.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "File"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 6471,
        "column": 0
      },
      "end": {
        "line": 6481,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6482,
          "column": 0
        },
        "end": {
          "line": 6493,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "file",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The file name or a File instance.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 34,
              "offset": 33
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "string",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The string to be written.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 26,
                  "offset": 25
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 26,
              "offset": 25
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The file the string was written to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 36,
                      "offset": 35
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 36,
              "offset": 35
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "File"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "saveString",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "saveString",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".saveString"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Writes an array of strings to a file, one line per string. If the given file exists it gets overridden.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 104,
                  "offset": 103
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 104,
              "offset": 103
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 104,
          "offset": 103
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Writes an array of strings to a file, one line per string. If the given file exists it gets overridden.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Output",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Files",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "saveStrings"
      },
      {
        "title": "param",
        "description": "The file name or a File instance",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        },
        "name": "file"
      },
      {
        "title": "param",
        "description": "The string array to be written",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        },
        "name": "strings"
      },
      {
        "title": "return",
        "description": "The file the strings were written to.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "File"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 6495,
        "column": 0
      },
      "end": {
        "line": 6505,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6506,
          "column": 0
        },
        "end": {
          "line": 6519,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "file",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The file name or a File instance",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "strings",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The string array to be written",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The file the strings were written to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 38,
                  "offset": 37
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 38,
              "offset": 37
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "File"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "saveStrings",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "saveStrings",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".saveStrings"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The origin of new ellipses is modified by the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 47,
                  "offset": 46
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "ellipseMode()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 47,
                  "offset": 46
                },
                "end": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function. The default configuration is ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "end": {
                  "line": 1,
                  "column": 102,
                  "offset": 101
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "ellipseMode(CENTER)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 102,
                  "offset": 101
                },
                "end": {
                  "line": 1,
                  "column": 123,
                  "offset": 122
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", which specifies the location of the ellipse as the center of the shape. The ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 123,
                  "offset": 122
                },
                "end": {
                  "line": 1,
                  "column": 201,
                  "offset": 200
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "RADIUS",
              "position": {
                "start": {
                  "line": 1,
                  "column": 201,
                  "offset": 200
                },
                "end": {
                  "line": 1,
                  "column": 209,
                  "offset": 208
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " mode is the same, but the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 209,
                  "offset": 208
                },
                "end": {
                  "line": 1,
                  "column": 236,
                  "offset": 235
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "w",
              "position": {
                "start": {
                  "line": 1,
                  "column": 236,
                  "offset": 235
                },
                "end": {
                  "line": 1,
                  "column": 239,
                  "offset": 238
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 239,
                  "offset": 238
                },
                "end": {
                  "line": 1,
                  "column": 244,
                  "offset": 243
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "h",
              "position": {
                "start": {
                  "line": 1,
                  "column": 244,
                  "offset": 243
                },
                "end": {
                  "line": 1,
                  "column": 247,
                  "offset": 246
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " parameters to ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 247,
                  "offset": 246
                },
                "end": {
                  "line": 1,
                  "column": 262,
                  "offset": 261
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "ellipse()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 262,
                  "offset": 261
                },
                "end": {
                  "line": 1,
                  "column": 273,
                  "offset": 272
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " specify the radius of the ellipse, rather than the diameter. The ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 273,
                  "offset": 272
                },
                "end": {
                  "line": 1,
                  "column": 339,
                  "offset": 338
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "CORNER",
              "position": {
                "start": {
                  "line": 1,
                  "column": 339,
                  "offset": 338
                },
                "end": {
                  "line": 1,
                  "column": 347,
                  "offset": 346
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " mode draws the shape from the upper-left corner of its bounding box. The ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 347,
                  "offset": 346
                },
                "end": {
                  "line": 1,
                  "column": 421,
                  "offset": 420
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "CORNERS",
              "position": {
                "start": {
                  "line": 1,
                  "column": 421,
                  "offset": 420
                },
                "end": {
                  "line": 1,
                  "column": 430,
                  "offset": 429
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " mode uses the four parameters to ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 430,
                  "offset": 429
                },
                "end": {
                  "line": 1,
                  "column": 464,
                  "offset": 463
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "ellipse()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 464,
                  "offset": 463
                },
                "end": {
                  "line": 1,
                  "column": 475,
                  "offset": 474
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " to set two opposing corners of the ellipse's bounding box.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 475,
                  "offset": 474
                },
                "end": {
                  "line": 1,
                  "column": 534,
                  "offset": 533
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 534,
              "offset": 533
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 534,
          "offset": 533
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "The origin of new ellipses is modified by the `ellipseMode()` function. The default configuration is `ellipseMode(CENTER)`, which specifies the location of the ellipse as the center of the shape. The `RADIUS` mode is the same, but the `w` and `h` parameters to `ellipse()` specify the radius of the ellipse, rather than the diameter. The `CORNER` mode draws the shape from the upper-left corner of its bounding box. The `CORNERS` mode uses the four parameters to `ellipse()` to set two opposing corners of the ellipse's bounding box.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Shape",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Attributes",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "ellipseMode"
      },
      {
        "title": "param",
        "description": "The ellipse mode to switch to: either `CENTER`, `RADIUS`, `CORNER`, or `CORNERS`.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "mode"
      }
    ],
    "loc": {
      "start": {
        "line": 6611,
        "column": 0
      },
      "end": {
        "line": 6619,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6620,
          "column": 0
        },
        "end": {
          "line": 6628,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "mode",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The ellipse mode to switch to: either ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "CENTER",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "end": {
                      "line": 1,
                      "column": 47,
                      "offset": 46
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 47,
                      "offset": 46
                    },
                    "end": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "RADIUS",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "end": {
                      "line": 1,
                      "column": 57,
                      "offset": 56
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 57,
                      "offset": 56
                    },
                    "end": {
                      "line": 1,
                      "column": 59,
                      "offset": 58
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "CORNER",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 59,
                      "offset": 58
                    },
                    "end": {
                      "line": 1,
                      "column": 67,
                      "offset": 66
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", or ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 67,
                      "offset": 66
                    },
                    "end": {
                      "line": 1,
                      "column": 72,
                      "offset": 71
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "CORNERS",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 72,
                      "offset": 71
                    },
                    "end": {
                      "line": 1,
                      "column": 81,
                      "offset": 80
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 81,
                      "offset": 80
                    },
                    "end": {
                      "line": 1,
                      "column": 82,
                      "offset": 81
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 82,
                  "offset": 81
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 82,
              "offset": 81
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "ellipseMode",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "ellipseMode",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".ellipseMode"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Modifies the location from which rectangles or text frames draw. The default mode is ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 86,
                  "offset": 85
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "rectMode(CORNER)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 86,
                  "offset": 85
                },
                "end": {
                  "line": 1,
                  "column": 104,
                  "offset": 103
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", which specifies the location to be the upper left corner of the shape and uses the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 104,
                  "offset": 103
                },
                "end": {
                  "line": 1,
                  "column": 189,
                  "offset": 188
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "w",
              "position": {
                "start": {
                  "line": 1,
                  "column": 189,
                  "offset": 188
                },
                "end": {
                  "line": 1,
                  "column": 192,
                  "offset": 191
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 192,
                  "offset": 191
                },
                "end": {
                  "line": 1,
                  "column": 197,
                  "offset": 196
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "h",
              "position": {
                "start": {
                  "line": 1,
                  "column": 197,
                  "offset": 196
                },
                "end": {
                  "line": 1,
                  "column": 200,
                  "offset": 199
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " parameters to specify the width and height. The syntax ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 200,
                  "offset": 199
                },
                "end": {
                  "line": 1,
                  "column": 256,
                  "offset": 255
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "rectMode(CORNERS)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 256,
                  "offset": 255
                },
                "end": {
                  "line": 1,
                  "column": 275,
                  "offset": 274
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " uses the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 275,
                  "offset": 274
                },
                "end": {
                  "line": 1,
                  "column": 285,
                  "offset": 284
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "x",
              "position": {
                "start": {
                  "line": 1,
                  "column": 285,
                  "offset": 284
                },
                "end": {
                  "line": 1,
                  "column": 288,
                  "offset": 287
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 288,
                  "offset": 287
                },
                "end": {
                  "line": 1,
                  "column": 293,
                  "offset": 292
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "y",
              "position": {
                "start": {
                  "line": 1,
                  "column": 293,
                  "offset": 292
                },
                "end": {
                  "line": 1,
                  "column": 296,
                  "offset": 295
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " parameters of ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 296,
                  "offset": 295
                },
                "end": {
                  "line": 1,
                  "column": 311,
                  "offset": 310
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "rect()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 311,
                  "offset": 310
                },
                "end": {
                  "line": 1,
                  "column": 319,
                  "offset": 318
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " or ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 319,
                  "offset": 318
                },
                "end": {
                  "line": 1,
                  "column": 323,
                  "offset": 322
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "text()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 323,
                  "offset": 322
                },
                "end": {
                  "line": 1,
                  "column": 331,
                  "offset": 330
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " to set the location of one corner and uses the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 331,
                  "offset": 330
                },
                "end": {
                  "line": 1,
                  "column": 379,
                  "offset": 378
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "w",
              "position": {
                "start": {
                  "line": 1,
                  "column": 379,
                  "offset": 378
                },
                "end": {
                  "line": 1,
                  "column": 382,
                  "offset": 381
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 382,
                  "offset": 381
                },
                "end": {
                  "line": 1,
                  "column": 387,
                  "offset": 386
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "h",
              "position": {
                "start": {
                  "line": 1,
                  "column": 387,
                  "offset": 386
                },
                "end": {
                  "line": 1,
                  "column": 390,
                  "offset": 389
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " parameters to set the opposite corner. The syntax ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 390,
                  "offset": 389
                },
                "end": {
                  "line": 1,
                  "column": 441,
                  "offset": 440
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "rectMode(CENTER)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 441,
                  "offset": 440
                },
                "end": {
                  "line": 1,
                  "column": 459,
                  "offset": 458
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " draws the shape from its center point and uses the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 459,
                  "offset": 458
                },
                "end": {
                  "line": 1,
                  "column": 511,
                  "offset": 510
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "w",
              "position": {
                "start": {
                  "line": 1,
                  "column": 511,
                  "offset": 510
                },
                "end": {
                  "line": 1,
                  "column": 514,
                  "offset": 513
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 514,
                  "offset": 513
                },
                "end": {
                  "line": 1,
                  "column": 519,
                  "offset": 518
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "h",
              "position": {
                "start": {
                  "line": 1,
                  "column": 519,
                  "offset": 518
                },
                "end": {
                  "line": 1,
                  "column": 522,
                  "offset": 521
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " parameters to specify the shape's width and height. The syntax ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 522,
                  "offset": 521
                },
                "end": {
                  "line": 1,
                  "column": 586,
                  "offset": 585
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "rectMode(RADIUS)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 586,
                  "offset": 585
                },
                "end": {
                  "line": 1,
                  "column": 604,
                  "offset": 603
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " draws the shape from its center point and uses the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 604,
                  "offset": 603
                },
                "end": {
                  "line": 1,
                  "column": 656,
                  "offset": 655
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "w",
              "position": {
                "start": {
                  "line": 1,
                  "column": 656,
                  "offset": 655
                },
                "end": {
                  "line": 1,
                  "column": 659,
                  "offset": 658
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 659,
                  "offset": 658
                },
                "end": {
                  "line": 1,
                  "column": 664,
                  "offset": 663
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "h",
              "position": {
                "start": {
                  "line": 1,
                  "column": 664,
                  "offset": 663
                },
                "end": {
                  "line": 1,
                  "column": 667,
                  "offset": 666
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " parameters to specify half of the shape's width and height.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 667,
                  "offset": 666
                },
                "end": {
                  "line": 1,
                  "column": 727,
                  "offset": 726
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 727,
              "offset": 726
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 727,
          "offset": 726
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Modifies the location from which rectangles or text frames draw. The default mode is `rectMode(CORNER)`, which specifies the location to be the upper left corner of the shape and uses the `w` and `h` parameters to specify the width and height. The syntax `rectMode(CORNERS)` uses the `x` and `y` parameters of `rect()` or `text()` to set the location of one corner and uses the `w` and `h` parameters to set the opposite corner. The syntax `rectMode(CENTER)` draws the shape from its center point and uses the `w` and `h` parameters to specify the shape's width and height. The syntax `rectMode(RADIUS)` draws the shape from its center point and uses the `w` and `h` parameters to specify half of the shape's width and height.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Shape",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Attributes",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "rectMode"
      },
      {
        "title": "param",
        "description": "The rectMode to switch to: either `CORNER`, `CORNERS`, `CENTER`, or `RADIUS`.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "mode"
      }
    ],
    "loc": {
      "start": {
        "line": 6630,
        "column": 0
      },
      "end": {
        "line": 6638,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6639,
          "column": 0
        },
        "end": {
          "line": 6647,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "mode",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The rectMode to switch to: either ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "CORNER",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "end": {
                      "line": 1,
                      "column": 45,
                      "offset": 44
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "CORNERS",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 45,
                      "offset": 44
                    },
                    "end": {
                      "line": 1,
                      "column": 54,
                      "offset": 53
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 54,
                      "offset": 53
                    },
                    "end": {
                      "line": 1,
                      "column": 56,
                      "offset": 55
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "CENTER",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 56,
                      "offset": 55
                    },
                    "end": {
                      "line": 1,
                      "column": 64,
                      "offset": 63
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", or ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 64,
                      "offset": 63
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "RADIUS",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "end": {
                      "line": 1,
                      "column": 77,
                      "offset": 76
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 77,
                      "offset": 76
                    },
                    "end": {
                      "line": 1,
                      "column": 78,
                      "offset": 77
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 78,
                  "offset": 77
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 78,
              "offset": 77
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "rectMode",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "rectMode",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".rectMode"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the width of the stroke used for lines and the border around shapes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 74,
                  "offset": 73
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 74,
              "offset": 73
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 74,
          "offset": 73
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Sets the width of the stroke used for lines and the border around shapes.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Shape",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Attributes",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "strokeWeight"
      },
      {
        "title": "param",
        "description": "The width of the stroke in points.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "weight"
      }
    ],
    "loc": {
      "start": {
        "line": 6649,
        "column": 0
      },
      "end": {
        "line": 6657,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6658,
          "column": 0
        },
        "end": {
          "line": 6664,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "weight",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The width of the stroke in points.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "strokeWeight",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "strokeWeight",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".strokeWeight"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "arc()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "end": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function draws an arc. Arcs are drawn along the outer edge of an ellipse defined by the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "end": {
                  "line": 1,
                  "column": 101,
                  "offset": 100
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "x",
              "position": {
                "start": {
                  "line": 1,
                  "column": 101,
                  "offset": 100
                },
                "end": {
                  "line": 1,
                  "column": 104,
                  "offset": 103
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 104,
                  "offset": 103
                },
                "end": {
                  "line": 1,
                  "column": 106,
                  "offset": 105
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "y",
              "position": {
                "start": {
                  "line": 1,
                  "column": 106,
                  "offset": 105
                },
                "end": {
                  "line": 1,
                  "column": 109,
                  "offset": 108
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 109,
                  "offset": 108
                },
                "end": {
                  "line": 1,
                  "column": 111,
                  "offset": 110
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "width",
              "position": {
                "start": {
                  "line": 1,
                  "column": 111,
                  "offset": 110
                },
                "end": {
                  "line": 1,
                  "column": 118,
                  "offset": 117
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 118,
                  "offset": 117
                },
                "end": {
                  "line": 1,
                  "column": 123,
                  "offset": 122
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "height",
              "position": {
                "start": {
                  "line": 1,
                  "column": 123,
                  "offset": 122
                },
                "end": {
                  "line": 1,
                  "column": 131,
                  "offset": 130
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " parameters. The origin or the arc's ellipse may be changed with the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 131,
                  "offset": 130
                },
                "end": {
                  "line": 1,
                  "column": 200,
                  "offset": 199
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "ellipseMode()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 200,
                  "offset": 199
                },
                "end": {
                  "line": 1,
                  "column": 215,
                  "offset": 214
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function. The start and stop parameters specify the angles at which to draw the arc.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 215,
                  "offset": 214
                },
                "end": {
                  "line": 1,
                  "column": 300,
                  "offset": 299
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 300,
              "offset": 299
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 300,
          "offset": 299
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "The `arc()` function draws an arc. Arcs are drawn along the outer edge of an ellipse defined by the `x`, `y`, `width` and `height` parameters. The origin or the arc's ellipse may be changed with the `ellipseMode()` function. The start and stop parameters specify the angles at which to draw the arc.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Shape",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Primitives",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "arc"
      },
      {
        "title": "param",
        "description": "X-coordinate of the arc's center.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "cx"
      },
      {
        "title": "param",
        "description": "Y-coordinate of the arc's center.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "cy"
      },
      {
        "title": "param",
        "description": "Width of the arc's ellipse.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "w"
      },
      {
        "title": "param",
        "description": "Height of the arc's ellipse.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "h"
      },
      {
        "title": "param",
        "description": "Starting angle of the arc in radians.",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "startAngle"
      },
      {
        "title": "param",
        "description": "Ending angle of the arc in radians.",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "endAngle"
      },
      {
        "title": "param",
        "description": "Mode to define the rendering technique of the arc: `OPEN` (default), `CHORD`, or `PIE`.",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        },
        "name": "mode"
      },
      {
        "title": "return",
        "description": "The resulting GraphicLine or Polygon object (in InDesign Scripting terms the corresponding type is GraphicLine or Polygon, not Arc).",
        "lineNumber": 14,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "GraphicLine"
            },
            {
              "type": "NameExpression",
              "name": "Polygon"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 6670,
        "column": 0
      },
      "end": {
        "line": 6685,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6686,
          "column": 0
        },
        "end": {
          "line": 6752,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "cx",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "X-coordinate of the arc's center.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 34,
              "offset": 33
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "cy",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Y-coordinate of the arc's center.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 34,
              "offset": 33
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "w",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Width of the arc's ellipse.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "h",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Height of the arc's ellipse.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "startAngle",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Starting angle of the arc in radians.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 38,
                  "offset": 37
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 38,
              "offset": 37
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "endAngle",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Ending angle of the arc in radians.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 36,
                      "offset": 35
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 36,
              "offset": 35
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "mode",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Mode to define the rendering technique of the arc: ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 52,
                      "offset": 51
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "OPEN",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 52,
                      "offset": 51
                    },
                    "end": {
                      "line": 1,
                      "column": 58,
                      "offset": 57
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " (default), ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 58,
                      "offset": 57
                    },
                    "end": {
                      "line": 1,
                      "column": 70,
                      "offset": 69
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "CHORD",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 70,
                      "offset": 69
                    },
                    "end": {
                      "line": 1,
                      "column": 77,
                      "offset": 76
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", or ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 77,
                      "offset": 76
                    },
                    "end": {
                      "line": 1,
                      "column": 82,
                      "offset": 81
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "PIE",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 82,
                      "offset": 81
                    },
                    "end": {
                      "line": 1,
                      "column": 87,
                      "offset": 86
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 87,
                      "offset": 86
                    },
                    "end": {
                      "line": 1,
                      "column": 88,
                      "offset": 87
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 88,
                  "offset": 87
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 88,
              "offset": 87
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The resulting GraphicLine or Polygon object (in InDesign Scripting terms the corresponding type is GraphicLine or Polygon, not Arc).",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 133,
                      "offset": 132
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 133,
                  "offset": 132
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 133,
              "offset": 132
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "GraphicLine"
            },
            {
              "type": "NameExpression",
              "name": "Polygon"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "arc",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "arc",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".arc"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Draws an ellipse (oval) in the display window. An ellipse with an equal width and height is a circle. The first two parameters set the location, the third sets the width, and the fourth sets the height. If no height is specified, the value of width is used for both the width and height. If a negative height or width is specified, the absolute value is taken. The origin may be changed with the ellipseMode() function.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 420,
                  "offset": 419
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 420,
              "offset": 419
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 420,
          "offset": 419
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Draws an ellipse (oval) in the display window. An ellipse with an equal width and height is a circle. The first two parameters set the location, the third sets the width, and the fourth sets the height. If no height is specified, the value of width is used for both the width and height. If a negative height or width is specified, the absolute value is taken. The origin may be changed with the ellipseMode() function.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Shape",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Primitives",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "ellipse"
      },
      {
        "title": "param",
        "description": "X-coordinate of the ellipse.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x"
      },
      {
        "title": "param",
        "description": "Y-coordinate of the ellipse.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y"
      },
      {
        "title": "param",
        "description": "Width of the ellipse.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "w"
      },
      {
        "title": "param",
        "description": "Height of the ellipse.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "h"
      },
      {
        "title": "return",
        "description": "New Oval (in InDesign Scripting terms the corresponding type is Oval, not Ellipse).",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Oval"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 6754,
        "column": 0
      },
      "end": {
        "line": 6766,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6767,
          "column": 0
        },
        "end": {
          "line": 6821,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "X-coordinate of the ellipse.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "y",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Y-coordinate of the ellipse.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "w",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Width of the ellipse.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "h",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Height of the ellipse.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "New Oval (in InDesign Scripting terms the corresponding type is Oval, not Ellipse).",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 84,
                      "offset": 83
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 84,
                  "offset": 83
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 84,
              "offset": 83
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Oval"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "ellipse",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "ellipse",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".ellipse"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Draws a line (a direct path between two points) to the page.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 61,
                  "offset": 60
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 61,
              "offset": 60
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 61,
          "offset": 60
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Draws a line (a direct path between two points) to the page.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Shape",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Primitives",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "line"
      },
      {
        "title": "param",
        "description": "X-coordinate of Point 1.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x1"
      },
      {
        "title": "param",
        "description": "Y-coordinate of Point 1.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y1"
      },
      {
        "title": "param",
        "description": "X-coordinate of Point 2.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x2"
      },
      {
        "title": "param",
        "description": "Y-coordinate of Point 2.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y2"
      },
      {
        "title": "return",
        "description": "New GraphicLine.",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "GraphicLine"
        }
      },
      {
        "title": "example",
        "description": "var vec1 = new Vector(x1, y1);\nvar vec2 = new Vector(x2, y2);\nline( vec1, vec2 );",
        "lineNumber": 13
      }
    ],
    "loc": {
      "start": {
        "line": 6823,
        "column": 0
      },
      "end": {
        "line": 6840,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6841,
          "column": 0
        },
        "end": {
          "line": 6857,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "var vec1 = new Vector(x1, y1);\nvar vec2 = new Vector(x2, y2);\nline( vec1, vec2 );"
      }
    ],
    "params": [
      {
        "title": "param",
        "name": "x1",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "X-coordinate of Point 1.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "y1",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Y-coordinate of Point 1.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "x2",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "X-coordinate of Point 2.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "y2",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Y-coordinate of Point 2.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "New GraphicLine.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "GraphicLine"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "line",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "line",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".line"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Draws a point, a coordinate in space at the dimension of the current stroke weight. The first parameter is the horizontal value for the point, the second value is the vertical value for the point. The color of the point is determined by the current stroke.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 257,
                  "offset": 256
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 257,
              "offset": 256
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 257,
          "offset": 256
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Draws a point, a coordinate in space at the dimension of the current stroke weight. The first parameter is the horizontal value for the point, the second value is the vertical value for the point. The color of the point is determined by the current stroke.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Shape",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Primitives",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "point"
      },
      {
        "title": "param",
        "description": "X-coordinate of the point.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x"
      },
      {
        "title": "param",
        "description": "Y-coordinate of the point.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y"
      },
      {
        "title": "return",
        "description": "The point as an Oval object.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Oval"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 6859,
        "column": 0
      },
      "end": {
        "line": 6869,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6870,
          "column": 0
        },
        "end": {
          "line": 6904,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "X-coordinate of the point.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "y",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Y-coordinate of the point.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The point as an Oval object.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Oval"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "point",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "point",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".point"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Draws a quad to the page. A quad is a quadrilateral, a four sided polygon. It is similar to a rectangle, but the angles between its edges are not constrained to ninety degrees. The first pair of parameters (",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 208,
                  "offset": 207
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "x1",
              "position": {
                "start": {
                  "line": 1,
                  "column": 208,
                  "offset": 207
                },
                "end": {
                  "line": 1,
                  "column": 212,
                  "offset": 211
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 212,
                  "offset": 211
                },
                "end": {
                  "line": 1,
                  "column": 214,
                  "offset": 213
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "y1",
              "position": {
                "start": {
                  "line": 1,
                  "column": 214,
                  "offset": 213
                },
                "end": {
                  "line": 1,
                  "column": 218,
                  "offset": 217
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ") sets the first vertex, the subsequent pairs proceed around the defined shape.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 218,
                  "offset": 217
                },
                "end": {
                  "line": 1,
                  "column": 297,
                  "offset": 296
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 297,
              "offset": 296
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 297,
          "offset": 296
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Draws a quad to the page. A quad is a quadrilateral, a four sided polygon. It is similar to a rectangle, but the angles between its edges are not constrained to ninety degrees. The first pair of parameters (`x1`, `y1`) sets the first vertex, the subsequent pairs proceed around the defined shape.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Shape",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Primitives",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "quad"
      },
      {
        "title": "param",
        "description": "X-coordinate of Point 1.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x1"
      },
      {
        "title": "param",
        "description": "Y-coordinate of Point 1.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y1"
      },
      {
        "title": "param",
        "description": "X-coordinate of Point 2.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x2"
      },
      {
        "title": "param",
        "description": "Y-coordinate of Point 2.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y2"
      },
      {
        "title": "param",
        "description": "X-coordinate of Point 3.",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x3"
      },
      {
        "title": "param",
        "description": "Y-coordinate of Point 3.",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y3"
      },
      {
        "title": "param",
        "description": "X-coordinate of Point 4.",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x3"
      },
      {
        "title": "param",
        "description": "Y-coordinate of Point 4.",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y3"
      },
      {
        "title": "return",
        "description": "The new quad as a Polygon object.",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "Polygon"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 6906,
        "column": 0
      },
      "end": {
        "line": 6922,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6923,
          "column": 0
        },
        "end": {
          "line": 6935,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "x1",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "X-coordinate of Point 1.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "y1",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Y-coordinate of Point 1.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "x2",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "X-coordinate of Point 2.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "y2",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Y-coordinate of Point 2.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "x3",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "X-coordinate of Point 4.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "y3",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Y-coordinate of Point 4.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "x4",
        "lineNumber": 6923
      },
      {
        "title": "param",
        "name": "y4",
        "lineNumber": 6923
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The new quad as a Polygon object.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 34,
              "offset": 33
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Polygon"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "quad",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "quad",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".quad"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Draws a rectangle on the page.\nBy default, the first two parameters set the location of the upper-left corner, the third sets the width, and the fourth sets the height. The way these parameters are interpreted, however, may be changed with the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 214,
                  "offset": 244
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "rectMode()",
              "position": {
                "start": {
                  "line": 2,
                  "column": 214,
                  "offset": 244
                },
                "end": {
                  "line": 2,
                  "column": 226,
                  "offset": 256
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function.\nThe fifth, sixth, seventh and eighth parameters, if specified, determine corner radius for the top-right, top-left, lower-right and lower-left corners, respectively. If only a fifth parameter is provided, all corners will be set to this radius.",
              "position": {
                "start": {
                  "line": 2,
                  "column": 226,
                  "offset": 256
                },
                "end": {
                  "line": 3,
                  "column": 245,
                  "offset": 511
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 245,
              "offset": 511
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 245,
          "offset": 511
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Draws a rectangle on the page.\nBy default, the first two parameters set the location of the upper-left corner, the third sets the width, and the fourth sets the height. The way these parameters are interpreted, however, may be changed with the `rectMode()` function.\nThe fifth, sixth, seventh and eighth parameters, if specified, determine corner radius for the top-right, top-left, lower-right and lower-left corners, respectively. If only a fifth parameter is provided, all corners will be set to this radius.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Shape",
        "lineNumber": 5
      },
      {
        "title": "subcat",
        "description": "Primitives",
        "lineNumber": 6
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 7,
        "name": "rect"
      },
      {
        "title": "param",
        "description": "X-coordinate of the rectangle.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x"
      },
      {
        "title": "param",
        "description": "Y-coordinate of the rectangle.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y"
      },
      {
        "title": "param",
        "description": "Width of the rectangle.",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "w"
      },
      {
        "title": "param",
        "description": "Height of the rectangle.",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "h"
      },
      {
        "title": "param",
        "description": "Radius of top left corner or radius of all 4 corners (optional).",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "tl"
      },
      {
        "title": "param",
        "description": "Radius of top right corner (optional).",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "tr"
      },
      {
        "title": "param",
        "description": "Radius of bottom right corner (optional).",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "br"
      },
      {
        "title": "param",
        "description": "Radius of bottom left corner (optional).",
        "lineNumber": 16,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "bl"
      },
      {
        "title": "return",
        "description": "The rectangle that was created.",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "Rectangle"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 6937,
        "column": 0
      },
      "end": {
        "line": 6955,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6956,
          "column": 0
        },
        "end": {
          "line": 7021,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "X-coordinate of the rectangle.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "y",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Y-coordinate of the rectangle.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "w",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Width of the rectangle.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "h",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Height of the rectangle.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "tl",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Radius of top left corner or radius of all 4 corners (optional).",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 65,
                      "offset": 64
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 65,
              "offset": 64
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "title": "param",
        "name": "tr",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Radius of top right corner (optional).",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 39,
              "offset": 38
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "title": "param",
        "name": "br",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Radius of bottom right corner (optional).",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 42,
                      "offset": 41
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 42,
              "offset": 41
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "title": "param",
        "name": "bl",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Radius of bottom left corner (optional).",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 41,
                      "offset": 40
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 41,
              "offset": 40
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The rectangle that was created.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Rectangle"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "rect",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "rect",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".rect"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Draws a triangle to the page. The first two arguments specify the first point, the middle two arguments specify the second point, and the last two arguments specify the third point.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 182,
                  "offset": 181
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 182,
              "offset": 181
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 182,
          "offset": 181
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Draws a triangle to the page. The first two arguments specify the first point, the middle two arguments specify the second point, and the last two arguments specify the third point.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Shape",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Primitives",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "triangle"
      },
      {
        "title": "param",
        "description": "X-coordinate of Point 1.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x1"
      },
      {
        "title": "param",
        "description": "Y-coordinate of Point 1.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y1"
      },
      {
        "title": "param",
        "description": "X-coordinate of Point 2.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x2"
      },
      {
        "title": "param",
        "description": "Y-coordinate of Point 2.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y2"
      },
      {
        "title": "param",
        "description": "X-coordinate of Point 3.",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x3"
      },
      {
        "title": "param",
        "description": "Y-coordinate of Point 3.",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y3"
      },
      {
        "title": "return",
        "description": "The new triangle as a Polygon object.",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Polygon"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 7023,
        "column": 0
      },
      "end": {
        "line": 7037,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 7038,
          "column": 0
        },
        "end": {
          "line": 7050,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "x1",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "X-coordinate of Point 1.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "y1",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Y-coordinate of Point 1.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "x2",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "X-coordinate of Point 2.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "y2",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Y-coordinate of Point 2.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "x3",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "X-coordinate of Point 3.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "y3",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Y-coordinate of Point 3.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The new triangle as a Polygon object.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 38,
                  "offset": 37
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 38,
              "offset": 37
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Polygon"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "triangle",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "triangle",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".triangle"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "inlineCode",
              "value": "addPath()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is used to create multi component paths. Call ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "end": {
                  "line": 1,
                  "column": 59,
                  "offset": 58
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "addPath()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 59,
                  "offset": 58
                },
                "end": {
                  "line": 1,
                  "column": 70,
                  "offset": 69
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " to add the vertices drawn so far to a single path. New vertices will then end up in a new path and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 70,
                  "offset": 69
                },
                "end": {
                  "line": 1,
                  "column": 170,
                  "offset": 169
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "endShape()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 170,
                  "offset": 169
                },
                "end": {
                  "line": 1,
                  "column": 182,
                  "offset": 181
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " will return a multi path object. All component paths will account for the setting (see ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 182,
                  "offset": 181
                },
                "end": {
                  "line": 1,
                  "column": 270,
                  "offset": 269
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "CLOSE",
              "position": {
                "start": {
                  "line": 1,
                  "column": 270,
                  "offset": 269
                },
                "end": {
                  "line": 1,
                  "column": 277,
                  "offset": 276
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ") given in ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 277,
                  "offset": 276
                },
                "end": {
                  "line": 1,
                  "column": 288,
                  "offset": 287
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "beginShape(shapeMode)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 288,
                  "offset": 287
                },
                "end": {
                  "line": 1,
                  "column": 311,
                  "offset": 310
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 311,
                  "offset": 310
                },
                "end": {
                  "line": 1,
                  "column": 312,
                  "offset": 311
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 312,
              "offset": 311
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 312,
          "offset": 311
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "`addPath()` is used to create multi component paths. Call `addPath()` to add the vertices drawn so far to a single path. New vertices will then end up in a new path and `endShape()` will return a multi path object. All component paths will account for the setting (see `CLOSE`) given in `beginShape(shapeMode)`.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Shape",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Vertex",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "addPath"
      }
    ],
    "loc": {
      "start": {
        "line": 7056,
        "column": 0
      },
      "end": {
        "line": 7062,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 7063,
          "column": 0
        },
        "end": {
          "line": 7066,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "addPath",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "addPath",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".addPath"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Using the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "beginShape()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "endShape()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " functions allows to create more complex forms. ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "end": {
                  "line": 1,
                  "column": 90,
                  "offset": 89
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "beginShape()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 90,
                  "offset": 89
                },
                "end": {
                  "line": 1,
                  "column": 104,
                  "offset": 103
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " begins recording vertices for a shape and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 104,
                  "offset": 103
                },
                "end": {
                  "line": 1,
                  "column": 147,
                  "offset": 146
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "endShape()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 147,
                  "offset": 146
                },
                "end": {
                  "line": 1,
                  "column": 159,
                  "offset": 158
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " stops recording. After calling the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 159,
                  "offset": 158
                },
                "end": {
                  "line": 1,
                  "column": 195,
                  "offset": 194
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "beginShape()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 195,
                  "offset": 194
                },
                "end": {
                  "line": 1,
                  "column": 209,
                  "offset": 208
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function, a series of ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 209,
                  "offset": 208
                },
                "end": {
                  "line": 1,
                  "column": 232,
                  "offset": 231
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "vertex()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 232,
                  "offset": 231
                },
                "end": {
                  "line": 1,
                  "column": 242,
                  "offset": 241
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " commands must follow. To stop drawing the shape, call ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 242,
                  "offset": 241
                },
                "end": {
                  "line": 1,
                  "column": 297,
                  "offset": 296
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "endShape()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 297,
                  "offset": 296
                },
                "end": {
                  "line": 1,
                  "column": 309,
                  "offset": 308
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 309,
                  "offset": 308
                },
                "end": {
                  "line": 1,
                  "column": 310,
                  "offset": 309
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 310,
              "offset": 309
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 310,
          "offset": 309
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Using the `beginShape()` and `endShape()` functions allows to create more complex forms. `beginShape()` begins recording vertices for a shape and `endShape()` stops recording. After calling the `beginShape()` function, a series of `vertex()` commands must follow. To stop drawing the shape, call `endShape()`.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Shape",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Vertex",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "beginShape"
      }
    ],
    "loc": {
      "start": {
        "line": 7068,
        "column": 0
      },
      "end": {
        "line": 7075,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 7076,
          "column": 0
        },
        "end": {
          "line": 7080,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "beginShape",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "beginShape",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".beginShape"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "endShape()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function is the companion to ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "end": {
                  "line": 1,
                  "column": 47,
                  "offset": 46
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "beginShape()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 47,
                  "offset": 46
                },
                "end": {
                  "line": 1,
                  "column": 61,
                  "offset": 60
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and may only be called after ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 61,
                  "offset": 60
                },
                "end": {
                  "line": 1,
                  "column": 91,
                  "offset": 90
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "beginShape()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 91,
                  "offset": 90
                },
                "end": {
                  "line": 1,
                  "column": 105,
                  "offset": 104
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ". It creates and returns a path of the previously called ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 105,
                  "offset": 104
                },
                "end": {
                  "line": 1,
                  "column": 162,
                  "offset": 161
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "vertex()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 162,
                  "offset": 161
                },
                "end": {
                  "line": 1,
                  "column": 172,
                  "offset": 171
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " points. The ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 172,
                  "offset": 171
                },
                "end": {
                  "line": 1,
                  "column": 185,
                  "offset": 184
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "shapeMode",
              "position": {
                "start": {
                  "line": 1,
                  "column": 185,
                  "offset": 184
                },
                "end": {
                  "line": 1,
                  "column": 196,
                  "offset": 195
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " parameter allows to close the shape (to connect the beginning and the end).",
              "position": {
                "start": {
                  "line": 1,
                  "column": 196,
                  "offset": 195
                },
                "end": {
                  "line": 1,
                  "column": 272,
                  "offset": 271
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 272,
              "offset": 271
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 272,
          "offset": 271
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "The `endShape()` function is the companion to `beginShape()` and may only be called after `beginShape()`. It creates and returns a path of the previously called `vertex()` points. The `shapeMode` parameter allows to close the shape (to connect the beginning and the end).",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Shape",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Vertex",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "endShape"
      },
      {
        "title": "param",
        "description": "Set to `CLOSE` if the new path should be auto-closed.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "shapeMode"
      },
      {
        "title": "return",
        "description": "The GraphicLine or Polygon object that was created.",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "GraphicLine"
            },
            {
              "type": "NameExpression",
              "name": "Polygon"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 7082,
        "column": 0
      },
      "end": {
        "line": 7091,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 7092,
          "column": 0
        },
        "end": {
          "line": 7103,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "shapeMode",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Set to ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "CLOSE",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 1,
                      "column": 15,
                      "offset": 14
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " if the new path should be auto-closed.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 15,
                      "offset": 14
                    },
                    "end": {
                      "line": 1,
                      "column": 54,
                      "offset": 53
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 54,
              "offset": 53
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The GraphicLine or Polygon object that was created.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 52,
                      "offset": 51
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 52,
                  "offset": 51
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 52,
              "offset": 51
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "GraphicLine"
            },
            {
              "type": "NameExpression",
              "name": "Polygon"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "endShape",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "endShape",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".endShape"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Shapes are constructed by connecting a series of vertices. ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "vertex()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "end": {
                  "line": 1,
                  "column": 70,
                  "offset": 69
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is used to specify the vertex coordinates of lines and polygons. It is used exclusively between the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 70,
                  "offset": 69
                },
                "end": {
                  "line": 1,
                  "column": 171,
                  "offset": 170
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "beginShape()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 171,
                  "offset": 170
                },
                "end": {
                  "line": 1,
                  "column": 185,
                  "offset": 184
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 185,
                  "offset": 184
                },
                "end": {
                  "line": 1,
                  "column": 190,
                  "offset": 189
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "endShape()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 190,
                  "offset": 189
                },
                "end": {
                  "line": 1,
                  "column": 202,
                  "offset": 201
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " functions.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 202,
                  "offset": 201
                },
                "end": {
                  "line": 1,
                  "column": 213,
                  "offset": 212
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 213,
              "offset": 212
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Use either ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 214
                },
                "end": {
                  "line": 3,
                  "column": 12,
                  "offset": 225
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "vertex(x, y)",
              "position": {
                "start": {
                  "line": 3,
                  "column": 12,
                  "offset": 225
                },
                "end": {
                  "line": 3,
                  "column": 26,
                  "offset": 239
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " for drawing straight corners or ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 26,
                  "offset": 239
                },
                "end": {
                  "line": 3,
                  "column": 59,
                  "offset": 272
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "vertex(x, y, xLeftHandle, yLeftHandle, xRightHandle, yRightHandle)",
              "position": {
                "start": {
                  "line": 3,
                  "column": 59,
                  "offset": 272
                },
                "end": {
                  "line": 3,
                  "column": 127,
                  "offset": 340
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " for drawing bezier shapes. You can also mix the two approaches.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 127,
                  "offset": 340
                },
                "end": {
                  "line": 3,
                  "column": 191,
                  "offset": 404
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 214
            },
            "end": {
              "line": 3,
              "column": 191,
              "offset": 404
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 191,
          "offset": 404
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Shapes are constructed by connecting a series of vertices. `vertex()` is used to specify the vertex coordinates of lines and polygons. It is used exclusively between the `beginShape()` and `endShape()` functions.\n\nUse either `vertex(x, y)` for drawing straight corners or `vertex(x, y, xLeftHandle, yLeftHandle, xRightHandle, yRightHandle)` for drawing bezier shapes. You can also mix the two approaches.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Shape",
        "lineNumber": 5
      },
      {
        "title": "subcat",
        "description": "Vertex",
        "lineNumber": 6
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 7,
        "name": "vertex"
      },
      {
        "title": "param",
        "description": "X-coordinate of the vertex.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x"
      },
      {
        "title": "param",
        "description": "Y-coordinate of the vertex.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y"
      },
      {
        "title": "param",
        "description": "X-coordinate of the left-direction point.",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "xLeftHandle"
      },
      {
        "title": "param",
        "description": "Y-coordinate of the left-direction point.",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "yLeftHandle"
      },
      {
        "title": "param",
        "description": "X-coordinate of the right-direction point.",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "xRightHandle"
      },
      {
        "title": "param",
        "description": "Y-coordinate of the right-direction point.",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "yRightHandle"
      }
    ],
    "loc": {
      "start": {
        "line": 7105,
        "column": 0
      },
      "end": {
        "line": 7120,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 7121,
          "column": 0
        },
        "end": {
          "line": 7136,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "X-coordinate of the vertex.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "y",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Y-coordinate of the vertex.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "xLeftHandle",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "X-coordinate of the left-direction point.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 42,
                      "offset": 41
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 42,
              "offset": 41
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "title": "param",
        "name": "yLeftHandle",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Y-coordinate of the left-direction point.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 42,
                      "offset": 41
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 42,
              "offset": 41
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "title": "param",
        "name": "xRightHandle",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "X-coordinate of the right-direction point.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 43,
              "offset": 42
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "title": "param",
        "name": "yRightHandle",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Y-coordinate of the right-direction point.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 43,
              "offset": 42
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "vertex",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "vertex",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".vertex"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used to set the performance mode. While modes can be switched during script execution, to use a mode for the entire script execution, ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 135,
                  "offset": 134
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "mode()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 135,
                  "offset": 134
                },
                "end": {
                  "line": 1,
                  "column": 143,
                  "offset": 142
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " should be placed in the beginning of the script. In basil there are three different performance modes:",
              "position": {
                "start": {
                  "line": 1,
                  "column": 143,
                  "offset": 142
                },
                "end": {
                  "line": 1,
                  "column": 246,
                  "offset": 245
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 246,
              "offset": 245
            },
            "indent": []
          }
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "loose": false,
          "children": [
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "VISIBLE",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 3,
                          "offset": 249
                        },
                        "end": {
                          "line": 3,
                          "column": 12,
                          "offset": 258
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " is the default mode. In this mode, during script execution the document will be processed with screen redraw, allowing to see direct results during the process. As the screen needs to redraw continuously, this is slower than the other modes.",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 12,
                          "offset": 258
                        },
                        "end": {
                          "line": 3,
                          "column": 254,
                          "offset": 500
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 3,
                      "offset": 249
                    },
                    "end": {
                      "line": 3,
                      "column": 254,
                      "offset": 500
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 247
                },
                "end": {
                  "line": 3,
                  "column": 254,
                  "offset": 500
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "HIDDEN",
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 3,
                          "offset": 503
                        },
                        "end": {
                          "line": 4,
                          "column": 11,
                          "offset": 511
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " allows to process the document in background mode. The document is not visible in this mode, which speeds up the script execution. In this mode you will likely look at InDesign with no open document for quite some time – do not work in InDesign during this time. You may want to use ",
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 11,
                          "offset": 511
                        },
                        "end": {
                          "line": 4,
                          "column": 295,
                          "offset": 795
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "println(\"yourMessage\")",
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 295,
                          "offset": 795
                        },
                        "end": {
                          "line": 4,
                          "column": 319,
                          "offset": 819
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " in your script and look at the console to get information about the process. Note: In order to enter this mode either a saved document needs to be open or no document at all. If you have an unsaved document open, basil will automatically save it for you. If it has not been saved before, you will be prompted to save it to your hard drive.",
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 319,
                          "offset": 819
                        },
                        "end": {
                          "line": 4,
                          "column": 659,
                          "offset": 1159
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 3,
                      "offset": 503
                    },
                    "end": {
                      "line": 4,
                      "column": 659,
                      "offset": 1159
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 4,
                  "column": 1,
                  "offset": 501
                },
                "end": {
                  "line": 4,
                  "column": 659,
                  "offset": 1159
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "SILENT",
                      "position": {
                        "start": {
                          "line": 5,
                          "column": 3,
                          "offset": 1162
                        },
                        "end": {
                          "line": 5,
                          "column": 11,
                          "offset": 1170
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " processes the document without redrawing the screen. The document will stay visible and only update once the script is finished or once the mode is changed back to ",
                      "position": {
                        "start": {
                          "line": 5,
                          "column": 11,
                          "offset": 1170
                        },
                        "end": {
                          "line": 5,
                          "column": 176,
                          "offset": 1335
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "VISIBLE",
                      "position": {
                        "start": {
                          "line": 5,
                          "column": 176,
                          "offset": 1335
                        },
                        "end": {
                          "line": 5,
                          "column": 185,
                          "offset": 1344
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ".",
                      "position": {
                        "start": {
                          "line": 5,
                          "column": 185,
                          "offset": 1344
                        },
                        "end": {
                          "line": 5,
                          "column": 186,
                          "offset": 1345
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 3,
                      "offset": 1162
                    },
                    "end": {
                      "line": 5,
                      "column": 186,
                      "offset": 1345
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 1160
                },
                "end": {
                  "line": 5,
                  "column": 186,
                  "offset": 1345
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 247
            },
            "end": {
              "line": 5,
              "column": 186,
              "offset": 1345
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 5,
          "column": 186,
          "offset": 1345
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Used to set the performance mode. While modes can be switched during script execution, to use a mode for the entire script execution, `mode()` should be placed in the beginning of the script. In basil there are three different performance modes:\n\n- `VISIBLE` is the default mode. In this mode, during script execution the document will be processed with screen redraw, allowing to see direct results during the process. As the screen needs to redraw continuously, this is slower than the other modes.\n- `HIDDEN` allows to process the document in background mode. The document is not visible in this mode, which speeds up the script execution. In this mode you will likely look at InDesign with no open document for quite some time – do not work in InDesign during this time. You may want to use `println(\"yourMessage\")` in your script and look at the console to get information about the process. Note: In order to enter this mode either a saved document needs to be open or no document at all. If you have an unsaved document open, basil will automatically save it for you. If it has not been saved before, you will be prompted to save it to your hard drive.\n- `SILENT` processes the document without redrawing the screen. The document will stay visible and only update once the script is finished or once the mode is changed back to `VISIBLE`.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Structure",
        "lineNumber": 7
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 8,
        "name": "mode"
      },
      {
        "title": "param",
        "description": "The performance mode to switch to.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "mode"
      }
    ],
    "loc": {
      "start": {
        "line": 7239,
        "column": 0
      },
      "end": {
        "line": 7250,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 7251,
          "column": 0
        },
        "end": {
          "line": 7305,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "mode",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The performance mode to switch to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "mode",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "mode",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".mode"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Stops basil from continuously executing the code within ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 57,
                  "offset": 56
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "loop()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 57,
                  "offset": 56
                },
                "end": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and quits the script.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "end": {
                  "line": 1,
                  "column": 87,
                  "offset": 86
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 87,
              "offset": 86
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 87,
          "offset": 86
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Stops basil from continuously executing the code within `loop()` and quits the script.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Structure",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "noLoop"
      }
    ],
    "loc": {
      "start": {
        "line": 7307,
        "column": 0
      },
      "end": {
        "line": 7312,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 7313,
          "column": 0
        },
        "end": {
          "line": 7323,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "printFinished",
        "lineNumber": 7313
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "noLoop",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "noLoop",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".noLoop"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Multiplies the current matrix by the one specified through the parameters.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 75,
                  "offset": 74
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 75,
              "offset": 74
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 75,
          "offset": 74
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Multiplies the current matrix by the one specified through the parameters.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Transform",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "applyMatrix"
      },
      {
        "title": "param",
        "description": "The matrix to be applied.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Matrix2D"
        },
        "name": "matrix"
      }
    ],
    "loc": {
      "start": {
        "line": 7333,
        "column": 0
      },
      "end": {
        "line": 7340,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 7341,
          "column": 0
        },
        "end": {
          "line": 7343,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "matrix",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The matrix to be applied.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 26,
                  "offset": 25
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 26,
              "offset": 25
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Matrix2D"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "applyMatrix",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "applyMatrix",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".applyMatrix"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Pops the current transformation matrix off the matrix stack. Understanding pushing and popping requires understanding the concept of a matrix stack. The ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 154,
                  "offset": 153
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "pushMatrix()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 154,
                  "offset": 153
                },
                "end": {
                  "line": 1,
                  "column": 168,
                  "offset": 167
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function saves the current coordinate system to the stack and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 168,
                  "offset": 167
                },
                "end": {
                  "line": 1,
                  "column": 231,
                  "offset": 230
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "popMatrix()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 231,
                  "offset": 230
                },
                "end": {
                  "line": 1,
                  "column": 244,
                  "offset": 243
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " restores the prior coordinate system. ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 244,
                  "offset": 243
                },
                "end": {
                  "line": 1,
                  "column": 283,
                  "offset": 282
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "pushMatrix()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 283,
                  "offset": 282
                },
                "end": {
                  "line": 1,
                  "column": 297,
                  "offset": 296
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 297,
                  "offset": 296
                },
                "end": {
                  "line": 1,
                  "column": 302,
                  "offset": 301
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "popMatrix()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 302,
                  "offset": 301
                },
                "end": {
                  "line": 1,
                  "column": 315,
                  "offset": 314
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " are used in conjuction with the other transformation methods and may be embedded to control the scope of the transformations.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 315,
                  "offset": 314
                },
                "end": {
                  "line": 1,
                  "column": 441,
                  "offset": 440
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 441,
              "offset": 440
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 441,
          "offset": 440
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Pops the current transformation matrix off the matrix stack. Understanding pushing and popping requires understanding the concept of a matrix stack. The `pushMatrix()` function saves the current coordinate system to the stack and `popMatrix()` restores the prior coordinate system. `pushMatrix()` and `popMatrix()` are used in conjuction with the other transformation methods and may be embedded to control the scope of the transformations.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Transform",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "popMatrix"
      }
    ],
    "loc": {
      "start": {
        "line": 7345,
        "column": 0
      },
      "end": {
        "line": 7350,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 7351,
          "column": 0
        },
        "end": {
          "line": 7357,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "popMatrix",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "popMatrix",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".popMatrix"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Prints the current matrix to the console window.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 49,
              "offset": 48
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 49,
          "offset": 48
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Prints the current matrix to the console window.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Transform",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "printMatrix"
      }
    ],
    "loc": {
      "start": {
        "line": 7359,
        "column": 0
      },
      "end": {
        "line": 7364,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 7365,
          "column": 0
        },
        "end": {
          "line": 7367,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "printMatrix",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "printMatrix",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".printMatrix"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Pushes the current transformation matrix onto the matrix stack. Understanding ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 79,
                  "offset": 78
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "pushMatrix()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 79,
                  "offset": 78
                },
                "end": {
                  "line": 1,
                  "column": 93,
                  "offset": 92
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 93,
                  "offset": 92
                },
                "end": {
                  "line": 1,
                  "column": 98,
                  "offset": 97
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "popMatrix()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 98,
                  "offset": 97
                },
                "end": {
                  "line": 1,
                  "column": 111,
                  "offset": 110
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " requires understanding the concept of a matrix stack. The ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 111,
                  "offset": 110
                },
                "end": {
                  "line": 1,
                  "column": 170,
                  "offset": 169
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "pushMatrix()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 170,
                  "offset": 169
                },
                "end": {
                  "line": 1,
                  "column": 184,
                  "offset": 183
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function saves the current coordinate system to the stack and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 184,
                  "offset": 183
                },
                "end": {
                  "line": 1,
                  "column": 247,
                  "offset": 246
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "popMatrix()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 247,
                  "offset": 246
                },
                "end": {
                  "line": 1,
                  "column": 260,
                  "offset": 259
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " restores the prior coordinate system. ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 260,
                  "offset": 259
                },
                "end": {
                  "line": 1,
                  "column": 299,
                  "offset": 298
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "pushMatrix()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 299,
                  "offset": 298
                },
                "end": {
                  "line": 1,
                  "column": 313,
                  "offset": 312
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 313,
                  "offset": 312
                },
                "end": {
                  "line": 1,
                  "column": 318,
                  "offset": 317
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "popMatrix()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 318,
                  "offset": 317
                },
                "end": {
                  "line": 1,
                  "column": 331,
                  "offset": 330
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " are used in conjuction with the other transformation methods and may be embedded to control the scope of the transformations.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 331,
                  "offset": 330
                },
                "end": {
                  "line": 1,
                  "column": 457,
                  "offset": 456
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 457,
              "offset": 456
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 457,
          "offset": 456
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Pushes the current transformation matrix onto the matrix stack. Understanding `pushMatrix()` and `popMatrix()` requires understanding the concept of a matrix stack. The `pushMatrix()` function saves the current coordinate system to the stack and `popMatrix()` restores the prior coordinate system. `pushMatrix()` and `popMatrix()` are used in conjuction with the other transformation methods and may be embedded to control the scope of the transformations.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Transform",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "pushMatrix"
      }
    ],
    "loc": {
      "start": {
        "line": 7369,
        "column": 0
      },
      "end": {
        "line": 7374,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 7375,
          "column": 0
        },
        "end": {
          "line": 7377,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "pushMatrix",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "pushMatrix",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".pushMatrix"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Replaces the current matrix with the identity matrix.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 54,
              "offset": 53
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 54,
          "offset": 53
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Replaces the current matrix with the identity matrix.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Transform",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "resetMatrix"
      }
    ],
    "loc": {
      "start": {
        "line": 7379,
        "column": 0
      },
      "end": {
        "line": 7384,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 7385,
          "column": 0
        },
        "end": {
          "line": 7390,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "resetMatrix",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "resetMatrix",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".resetMatrix"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Rotates an object the amount specified by the angle parameter. Angles should be specified in radians (values from 0 to ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 120,
                  "offset": 119
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "PI",
              "position": {
                "start": {
                  "line": 1,
                  "column": 120,
                  "offset": 119
                },
                "end": {
                  "line": 1,
                  "column": 124,
                  "offset": 123
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "*2) or converted to radians with the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 124,
                  "offset": 123
                },
                "end": {
                  "line": 1,
                  "column": 161,
                  "offset": 160
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "radians()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 161,
                  "offset": 160
                },
                "end": {
                  "line": 1,
                  "column": 172,
                  "offset": 171
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function. Objects are always rotated around their relative position to the origin and positive numbers rotate objects in a clockwise direction with 0 radians or degrees being up and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 172,
                  "offset": 171
                },
                "end": {
                  "line": 1,
                  "column": 355,
                  "offset": 354
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "HALF_PI",
              "position": {
                "start": {
                  "line": 1,
                  "column": 355,
                  "offset": 354
                },
                "end": {
                  "line": 1,
                  "column": 364,
                  "offset": 363
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " being to the right etc. Transformations apply to everything that happens after and subsequent calls to the function accumulates the effect. For example, calling ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 364,
                  "offset": 363
                },
                "end": {
                  "line": 1,
                  "column": 526,
                  "offset": 525
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "rotate(PI/2)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 526,
                  "offset": 525
                },
                "end": {
                  "line": 1,
                  "column": 540,
                  "offset": 539
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and then ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 540,
                  "offset": 539
                },
                "end": {
                  "line": 1,
                  "column": 550,
                  "offset": 549
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "rotate(PI/2)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 550,
                  "offset": 549
                },
                "end": {
                  "line": 1,
                  "column": 564,
                  "offset": 563
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is the same as ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 564,
                  "offset": 563
                },
                "end": {
                  "line": 1,
                  "column": 580,
                  "offset": 579
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "rotate(PI)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 580,
                  "offset": 579
                },
                "end": {
                  "line": 1,
                  "column": 592,
                  "offset": 591
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ". If ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 592,
                  "offset": 591
                },
                "end": {
                  "line": 1,
                  "column": 597,
                  "offset": 596
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "rotate()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 597,
                  "offset": 596
                },
                "end": {
                  "line": 1,
                  "column": 607,
                  "offset": 606
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is called within the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 607,
                  "offset": 606
                },
                "end": {
                  "line": 1,
                  "column": 629,
                  "offset": 628
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "draw()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 629,
                  "offset": 628
                },
                "end": {
                  "line": 1,
                  "column": 637,
                  "offset": 636
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", the transformation is reset when the loop begins again. Technically, ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 637,
                  "offset": 636
                },
                "end": {
                  "line": 1,
                  "column": 708,
                  "offset": 707
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "rotate()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 708,
                  "offset": 707
                },
                "end": {
                  "line": 1,
                  "column": 718,
                  "offset": 717
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " multiplies the current transformation matrix by a rotation matrix. This function can be further controlled by the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 718,
                  "offset": 717
                },
                "end": {
                  "line": 1,
                  "column": 833,
                  "offset": 832
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "pushMatrix()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 833,
                  "offset": 832
                },
                "end": {
                  "line": 1,
                  "column": 847,
                  "offset": 846
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 847,
                  "offset": 846
                },
                "end": {
                  "line": 1,
                  "column": 852,
                  "offset": 851
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "popMatrix()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 852,
                  "offset": 851
                },
                "end": {
                  "line": 1,
                  "column": 865,
                  "offset": 864
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 865,
                  "offset": 864
                },
                "end": {
                  "line": 1,
                  "column": 866,
                  "offset": 865
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 866,
              "offset": 865
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 866,
          "offset": 865
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Rotates an object the amount specified by the angle parameter. Angles should be specified in radians (values from 0 to `PI`*2) or converted to radians with the `radians()` function. Objects are always rotated around their relative position to the origin and positive numbers rotate objects in a clockwise direction with 0 radians or degrees being up and `HALF_PI` being to the right etc. Transformations apply to everything that happens after and subsequent calls to the function accumulates the effect. For example, calling `rotate(PI/2)` and then `rotate(PI/2)` is the same as `rotate(PI)`. If `rotate()` is called within the `draw()`, the transformation is reset when the loop begins again. Technically, `rotate()` multiplies the current transformation matrix by a rotation matrix. This function can be further controlled by the `pushMatrix()` and `popMatrix()`.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Transform",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "rotate"
      },
      {
        "title": "param",
        "description": "The angle specified in radians",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "angle"
      }
    ],
    "loc": {
      "start": {
        "line": 7392,
        "column": 0
      },
      "end": {
        "line": 7399,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 7400,
          "column": 0
        },
        "end": {
          "line": 7405,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "angle",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The angle specified in radians",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "rotate",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "rotate",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".rotate"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Increasing and decreasing the size of an object by expanding and contracting vertices. Scale values are specified as decimal percentages. The function call ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 157,
                  "offset": 156
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "scale(2.0)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 157,
                  "offset": 156
                },
                "end": {
                  "line": 1,
                  "column": 169,
                  "offset": 168
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " increases the dimension of a shape by 200%. Objects always scale from their relative origin to the coordinate system. Transformations apply to everything that happens after and subsequent calls to the function multiply the effect. For example, calling ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 169,
                  "offset": 168
                },
                "end": {
                  "line": 1,
                  "column": 422,
                  "offset": 421
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "scale(2.0)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 422,
                  "offset": 421
                },
                "end": {
                  "line": 1,
                  "column": 434,
                  "offset": 433
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and then ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 434,
                  "offset": 433
                },
                "end": {
                  "line": 1,
                  "column": 444,
                  "offset": 443
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "scale(1.5)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 444,
                  "offset": 443
                },
                "end": {
                  "line": 1,
                  "column": 456,
                  "offset": 455
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is the same as ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 456,
                  "offset": 455
                },
                "end": {
                  "line": 1,
                  "column": 472,
                  "offset": 471
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "scale(3.0)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 472,
                  "offset": 471
                },
                "end": {
                  "line": 1,
                  "column": 484,
                  "offset": 483
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ". If ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 484,
                  "offset": 483
                },
                "end": {
                  "line": 1,
                  "column": 489,
                  "offset": 488
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "scale()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 489,
                  "offset": 488
                },
                "end": {
                  "line": 1,
                  "column": 498,
                  "offset": 497
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is called within ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 498,
                  "offset": 497
                },
                "end": {
                  "line": 1,
                  "column": 516,
                  "offset": 515
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "draw()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 516,
                  "offset": 515
                },
                "end": {
                  "line": 1,
                  "column": 524,
                  "offset": 523
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", the transformation is reset when the loop begins again. This function can be further controlled by ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 524,
                  "offset": 523
                },
                "end": {
                  "line": 1,
                  "column": 625,
                  "offset": 624
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "pushMatrix()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 625,
                  "offset": 624
                },
                "end": {
                  "line": 1,
                  "column": 639,
                  "offset": 638
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 639,
                  "offset": 638
                },
                "end": {
                  "line": 1,
                  "column": 644,
                  "offset": 643
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "popMatrix()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 644,
                  "offset": 643
                },
                "end": {
                  "line": 1,
                  "column": 657,
                  "offset": 656
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ". If only one parameter is given, it is applied on X and Y axis.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 657,
                  "offset": 656
                },
                "end": {
                  "line": 1,
                  "column": 721,
                  "offset": 720
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 721,
              "offset": 720
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 721,
          "offset": 720
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Increasing and decreasing the size of an object by expanding and contracting vertices. Scale values are specified as decimal percentages. The function call `scale(2.0)` increases the dimension of a shape by 200%. Objects always scale from their relative origin to the coordinate system. Transformations apply to everything that happens after and subsequent calls to the function multiply the effect. For example, calling `scale(2.0)` and then `scale(1.5)` is the same as `scale(3.0)`. If `scale()` is called within `draw()`, the transformation is reset when the loop begins again. This function can be further controlled by `pushMatrix()` and `popMatrix()`. If only one parameter is given, it is applied on X and Y axis.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Transform",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "scale"
      },
      {
        "title": "param",
        "description": "The amount to scale the X axis.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "scaleX"
      },
      {
        "title": "param",
        "description": "The amount to scale the Y axis.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "scaleY"
      }
    ],
    "loc": {
      "start": {
        "line": 7407,
        "column": 0
      },
      "end": {
        "line": 7415,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 7416,
          "column": 0
        },
        "end": {
          "line": 7421,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "scaleX",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The amount to scale the X axis.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "scaleY",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The amount to scale the Y axis.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "scale",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "scale",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".scale"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Transforms a given page item. The type of transformation is determinded with the second parameter. The third parameter is the transformation value, either a number or an array of x and y values. The transformation's reference point (top left, bottom center etc.) can be set beforehand by using the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 299,
                  "offset": 298
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "referencePoint()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 299,
                  "offset": 298
                },
                "end": {
                  "line": 1,
                  "column": 317,
                  "offset": 316
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function. If the third parameter is ommited, the function can be used to measure the value of the page item. There are 10 different transformation types:",
              "position": {
                "start": {
                  "line": 1,
                  "column": 317,
                  "offset": 316
                },
                "end": {
                  "line": 1,
                  "column": 471,
                  "offset": 470
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 471,
              "offset": 470
            },
            "indent": []
          }
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "loose": false,
          "children": [
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "\"translate\"",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 3,
                          "offset": 473
                        },
                        "end": {
                          "line": 2,
                          "column": 16,
                          "offset": 486
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": Translates the page item by the given ",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 16,
                          "offset": 486
                        },
                        "end": {
                          "line": 2,
                          "column": 56,
                          "offset": 526
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "[x, y]",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 56,
                          "offset": 526
                        },
                        "end": {
                          "line": 2,
                          "column": 64,
                          "offset": 534
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " values. Returns the coordinates of the page item's anchor point as anray.",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 64,
                          "offset": 534
                        },
                        "end": {
                          "line": 2,
                          "column": 138,
                          "offset": 608
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 3,
                      "offset": 473
                    },
                    "end": {
                      "line": 2,
                      "column": 138,
                      "offset": 608
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 2,
                  "column": 1,
                  "offset": 471
                },
                "end": {
                  "line": 2,
                  "column": 138,
                  "offset": 608
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "\"rotate\"",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 3,
                          "offset": 611
                        },
                        "end": {
                          "line": 3,
                          "column": 13,
                          "offset": 621
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": Rotates the page item to the given degree value. Returns the page item's rotation value in degrees.",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 13,
                          "offset": 621
                        },
                        "end": {
                          "line": 3,
                          "column": 114,
                          "offset": 722
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 3,
                      "offset": 611
                    },
                    "end": {
                      "line": 3,
                      "column": 114,
                      "offset": 722
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 609
                },
                "end": {
                  "line": 3,
                  "column": 114,
                  "offset": 722
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "\"scale\"",
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 3,
                          "offset": 725
                        },
                        "end": {
                          "line": 4,
                          "column": 12,
                          "offset": 734
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": Scales the page item to the given ",
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 12,
                          "offset": 734
                        },
                        "end": {
                          "line": 4,
                          "column": 48,
                          "offset": 770
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "[x, y]",
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 48,
                          "offset": 770
                        },
                        "end": {
                          "line": 4,
                          "column": 56,
                          "offset": 778
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " scale factor values. Alternatively, a single scale factor value can be usto scale the page item uniformely. Returns the scale factor values of the page item's current scale as an array.",
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 56,
                          "offset": 778
                        },
                        "end": {
                          "line": 4,
                          "column": 242,
                          "offset": 964
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 3,
                      "offset": 725
                    },
                    "end": {
                      "line": 4,
                      "column": 242,
                      "offset": 964
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 4,
                  "column": 1,
                  "offset": 723
                },
                "end": {
                  "line": 4,
                  "column": 242,
                  "offset": 964
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "\"shear\"",
                      "position": {
                        "start": {
                          "line": 5,
                          "column": 3,
                          "offset": 967
                        },
                        "end": {
                          "line": 5,
                          "column": 12,
                          "offset": 976
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": Shears the page item to the given degree value. Returns the page item's shear value in degrees.",
                      "position": {
                        "start": {
                          "line": 5,
                          "column": 12,
                          "offset": 976
                        },
                        "end": {
                          "line": 5,
                          "column": 109,
                          "offset": 1073
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 3,
                      "offset": 967
                    },
                    "end": {
                      "line": 5,
                      "column": 109,
                      "offset": 1073
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 965
                },
                "end": {
                  "line": 5,
                  "column": 109,
                  "offset": 1073
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "\"size\"",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 3,
                          "offset": 1076
                        },
                        "end": {
                          "line": 6,
                          "column": 11,
                          "offset": 1084
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": Sets the page item's size to the given ",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 11,
                          "offset": 1084
                        },
                        "end": {
                          "line": 6,
                          "column": 52,
                          "offset": 1125
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "[x, y]",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 52,
                          "offset": 1125
                        },
                        "end": {
                          "line": 6,
                          "column": 60,
                          "offset": 1133
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " dimensions. Returns the size of the page item as an array.",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 60,
                          "offset": 1133
                        },
                        "end": {
                          "line": 6,
                          "column": 119,
                          "offset": 1192
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 3,
                      "offset": 1076
                    },
                    "end": {
                      "line": 6,
                      "column": 119,
                      "offset": 1192
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 6,
                  "column": 1,
                  "offset": 1074
                },
                "end": {
                  "line": 6,
                  "column": 119,
                  "offset": 1192
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "\"width\"",
                      "position": {
                        "start": {
                          "line": 7,
                          "column": 3,
                          "offset": 1195
                        },
                        "end": {
                          "line": 7,
                          "column": 12,
                          "offset": 1204
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": Sets the page item's width to the given value. Returns the width of the page item.",
                      "position": {
                        "start": {
                          "line": 7,
                          "column": 12,
                          "offset": 1204
                        },
                        "end": {
                          "line": 7,
                          "column": 96,
                          "offset": 1288
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 3,
                      "offset": 1195
                    },
                    "end": {
                      "line": 7,
                      "column": 96,
                      "offset": 1288
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 7,
                  "column": 1,
                  "offset": 1193
                },
                "end": {
                  "line": 7,
                  "column": 96,
                  "offset": 1288
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "\"height\"",
                      "position": {
                        "start": {
                          "line": 8,
                          "column": 3,
                          "offset": 1291
                        },
                        "end": {
                          "line": 8,
                          "column": 13,
                          "offset": 1301
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": Sets the page item's height to the given value. Returns the height of the page item.",
                      "position": {
                        "start": {
                          "line": 8,
                          "column": 13,
                          "offset": 1301
                        },
                        "end": {
                          "line": 8,
                          "column": 99,
                          "offset": 1387
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 8,
                      "column": 3,
                      "offset": 1291
                    },
                    "end": {
                      "line": 8,
                      "column": 99,
                      "offset": 1387
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 8,
                  "column": 1,
                  "offset": 1289
                },
                "end": {
                  "line": 8,
                  "column": 99,
                  "offset": 1387
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "\"position\"",
                      "position": {
                        "start": {
                          "line": 9,
                          "column": 3,
                          "offset": 1390
                        },
                        "end": {
                          "line": 9,
                          "column": 15,
                          "offset": 1402
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": Sets the position of the page item's anchor point to the given ",
                      "position": {
                        "start": {
                          "line": 9,
                          "column": 15,
                          "offset": 1402
                        },
                        "end": {
                          "line": 9,
                          "column": 80,
                          "offset": 1467
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "[x, y]",
                      "position": {
                        "start": {
                          "line": 9,
                          "column": 80,
                          "offset": 1467
                        },
                        "end": {
                          "line": 9,
                          "column": 88,
                          "offset": 1475
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " coordinates. Returns the coordinates of the page item's anchor point as an array.",
                      "position": {
                        "start": {
                          "line": 9,
                          "column": 88,
                          "offset": 1475
                        },
                        "end": {
                          "line": 9,
                          "column": 170,
                          "offset": 1557
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 9,
                      "column": 3,
                      "offset": 1390
                    },
                    "end": {
                      "line": 9,
                      "column": 170,
                      "offset": 1557
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 9,
                  "column": 1,
                  "offset": 1388
                },
                "end": {
                  "line": 9,
                  "column": 170,
                  "offset": 1557
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "\"x\"",
                      "position": {
                        "start": {
                          "line": 10,
                          "column": 3,
                          "offset": 1560
                        },
                        "end": {
                          "line": 10,
                          "column": 8,
                          "offset": 1565
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": Sets the x-position of the page item's anchor point to the given value. Returns the x-coordinate of the page item's anr point.",
                      "position": {
                        "start": {
                          "line": 10,
                          "column": 8,
                          "offset": 1565
                        },
                        "end": {
                          "line": 10,
                          "column": 136,
                          "offset": 1693
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 10,
                      "column": 3,
                      "offset": 1560
                    },
                    "end": {
                      "line": 10,
                      "column": 136,
                      "offset": 1693
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 10,
                  "column": 1,
                  "offset": 1558
                },
                "end": {
                  "line": 10,
                  "column": 136,
                  "offset": 1693
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "\"y\"",
                      "position": {
                        "start": {
                          "line": 11,
                          "column": 3,
                          "offset": 1696
                        },
                        "end": {
                          "line": 11,
                          "column": 8,
                          "offset": 1701
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": Sets the y-position of the page item's anchor point to the given value. Returns the y-coordinate of the page item's anchor point.",
                      "position": {
                        "start": {
                          "line": 11,
                          "column": 8,
                          "offset": 1701
                        },
                        "end": {
                          "line": 11,
                          "column": 139,
                          "offset": 1832
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 11,
                      "column": 3,
                      "offset": 1696
                    },
                    "end": {
                      "line": 11,
                      "column": 139,
                      "offset": 1832
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 11,
                  "column": 1,
                  "offset": 1694
                },
                "end": {
                  "line": 11,
                  "column": 139,
                  "offset": 1832
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 2,
              "column": 1,
              "offset": 471
            },
            "end": {
              "line": 11,
              "column": 139,
              "offset": 1832
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 11,
          "column": 139,
          "offset": 1832
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Transforms a given page item. The type of transformation is determinded with the second parameter. The third parameter is the transformation value, either a number or an array of x and y values. The transformation's reference point (top left, bottom center etc.) can be set beforehand by using the `referencePoint()` function. If the third parameter is ommited, the function can be used to measure the value of the page item. There are 10 different transformation types:\n- `\"translate\"`: Translates the page item by the given `[x, y]` values. Returns the coordinates of the page item's anchor point as anray.\n- `\"rotate\"`: Rotates the page item to the given degree value. Returns the page item's rotation value in degrees.\n- `\"scale\"`: Scales the page item to the given `[x, y]` scale factor values. Alternatively, a single scale factor value can be usto scale the page item uniformely. Returns the scale factor values of the page item's current scale as an array.\n- `\"shear\"`: Shears the page item to the given degree value. Returns the page item's shear value in degrees.\n- `\"size\"`: Sets the page item's size to the given `[x, y]` dimensions. Returns the size of the page item as an array.\n- `\"width\"`: Sets the page item's width to the given value. Returns the width of the page item.\n- `\"height\"`: Sets the page item's height to the given value. Returns the height of the page item.\n- `\"position\"`: Sets the position of the page item's anchor point to the given `[x, y]` coordinates. Returns the coordinates of the page item's anchor point as an array.\n- `\"x\"`: Sets the x-position of the page item's anchor point to the given value. Returns the x-coordinate of the page item's anr point.\n- `\"y\"`: Sets the y-position of the page item's anchor point to the given value. Returns the y-coordinate of the page item's anchor point.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Transform",
        "lineNumber": 13
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 14,
        "name": "transform"
      },
      {
        "title": "param",
        "description": "The page item to transform.",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        },
        "name": "pItem"
      },
      {
        "title": "param",
        "description": "The type of transformation.",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "type"
      },
      {
        "title": "param",
        "description": "The value(s) of the transformation.",
        "lineNumber": 18,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Number"
              },
              {
                "type": "NameExpression",
                "name": "Array"
              }
            ]
          }
        },
        "name": "value"
      },
      {
        "title": "return",
        "description": "The current value(s) of the specified transformation.",
        "lineNumber": 19,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        }
      },
      {
        "title": "example",
        "description": "var r = rect(20, 40, 200, 100);\ntransform(r, \"rotate\", 25);",
        "lineNumber": 21,
        "caption": "Rotating a rectangle to a 25 degrees angle"
      },
      {
        "title": "example",
        "description": "var r = rect(20, 40, random(100, 300), 100);\nvar w = transform(r, \"width\");\nprintln(w); // prints the rectangle's random width between 100 and 300",
        "lineNumber": 25,
        "caption": "Measure the width of a rectangle"
      },
      {
        "title": "example",
        "description": "var r = rect(20, 40, random(100, 300), random(50, 150));\nreferencePoint(BOTTOM_RIGHT);\ntransform(r, \"position\", [40, 40]);",
        "lineNumber": 30,
        "caption": "Position a rectangle's lower right corner at a certain position"
      }
    ],
    "loc": {
      "start": {
        "line": 7423,
        "column": 0
      },
      "end": {
        "line": 7457,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 7458,
          "column": 0
        },
        "end": {
          "line": 7615,
          "column": 1
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "var r = rect(20, 40, 200, 100);\ntransform(r, \"rotate\", 25);",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Rotating a rectangle to a 25 degrees angle",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 43,
              "offset": 42
            }
          }
        }
      },
      {
        "description": "var r = rect(20, 40, random(100, 300), 100);\nvar w = transform(r, \"width\");\nprintln(w); // prints the rectangle's random width between 100 and 300",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Measure the width of a rectangle",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        }
      },
      {
        "description": "var r = rect(20, 40, random(100, 300), random(50, 150));\nreferencePoint(BOTTOM_RIGHT);\ntransform(r, \"position\", [40, 40]);",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Position a rectangle's lower right corner at a certain position",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 64,
                      "offset": 63
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 64,
                  "offset": 63
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 64,
              "offset": 63
            }
          }
        }
      }
    ],
    "params": [
      {
        "title": "param",
        "name": "pItem",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The page item to transform.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        }
      },
      {
        "title": "param",
        "name": "type",
        "lineNumber": 17,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The type of transformation.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      },
      {
        "title": "param",
        "name": "value",
        "lineNumber": 18,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value(s) of the transformation.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 36,
                      "offset": 35
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 36,
              "offset": 35
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Number"
              },
              {
                "type": "NameExpression",
                "name": "Array"
              }
            ]
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current value(s) of the specified transformation.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 54,
                      "offset": 53
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 54,
              "offset": 53
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "transform",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "transform",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".transform"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Specifies an amount to displace objects within the page. The ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "x",
              "position": {
                "start": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "end": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " parameter specifies left/right translation, the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "end": {
                  "line": 1,
                  "column": 114,
                  "offset": 113
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "y",
              "position": {
                "start": {
                  "line": 1,
                  "column": 114,
                  "offset": 113
                },
                "end": {
                  "line": 1,
                  "column": 117,
                  "offset": 116
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " parameter specifies up/down translation. Transformations apply to everything that happens after and subsequent calls to the function accumulates the effect. For example, calling ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 117,
                  "offset": 116
                },
                "end": {
                  "line": 1,
                  "column": 296,
                  "offset": 295
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "translate(50, 0)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 296,
                  "offset": 295
                },
                "end": {
                  "line": 1,
                  "column": 314,
                  "offset": 313
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and then ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 314,
                  "offset": 313
                },
                "end": {
                  "line": 1,
                  "column": 324,
                  "offset": 323
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "translate(20, 0)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 324,
                  "offset": 323
                },
                "end": {
                  "line": 1,
                  "column": 342,
                  "offset": 341
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is the same as ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 342,
                  "offset": 341
                },
                "end": {
                  "line": 1,
                  "column": 358,
                  "offset": 357
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "translate(70, 0)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 358,
                  "offset": 357
                },
                "end": {
                  "line": 1,
                  "column": 376,
                  "offset": 375
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ". This function can be further controlled by the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 376,
                  "offset": 375
                },
                "end": {
                  "line": 1,
                  "column": 425,
                  "offset": 424
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "pushMatrix()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 425,
                  "offset": 424
                },
                "end": {
                  "line": 1,
                  "column": 439,
                  "offset": 438
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 439,
                  "offset": 438
                },
                "end": {
                  "line": 1,
                  "column": 444,
                  "offset": 443
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "popMatrix()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 444,
                  "offset": 443
                },
                "end": {
                  "line": 1,
                  "column": 457,
                  "offset": 456
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 457,
                  "offset": 456
                },
                "end": {
                  "line": 1,
                  "column": 458,
                  "offset": 457
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 458,
              "offset": 457
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 458,
          "offset": 457
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Specifies an amount to displace objects within the page. The `x` parameter specifies left/right translation, the `y` parameter specifies up/down translation. Transformations apply to everything that happens after and subsequent calls to the function accumulates the effect. For example, calling `translate(50, 0)` and then `translate(20, 0)` is the same as `translate(70, 0)`. This function can be further controlled by the `pushMatrix()` and `popMatrix()`.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Transform",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "translate"
      },
      {
        "title": "param",
        "description": "The amount of offset on the X axis.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "tx"
      },
      {
        "title": "param",
        "description": "The amount of offset on the Y axis.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "ty"
      }
    ],
    "loc": {
      "start": {
        "line": 7617,
        "column": 0
      },
      "end": {
        "line": 7625,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 7626,
          "column": 0
        },
        "end": {
          "line": 7631,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "tx",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The amount of offset on the X axis.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 36,
                      "offset": 35
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 36,
              "offset": 35
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "ty",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The amount of offset on the Y axis.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 36,
                      "offset": 35
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 36,
              "offset": 35
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "translate",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "translate",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".translate"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Creates a text frame on the current layer on the current page in the current document. The text frame gets created in the position specified by the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 149,
                  "offset": 148
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "x",
              "position": {
                "start": {
                  "line": 1,
                  "column": 149,
                  "offset": 148
                },
                "end": {
                  "line": 1,
                  "column": 152,
                  "offset": 151
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 152,
                  "offset": 151
                },
                "end": {
                  "line": 1,
                  "column": 157,
                  "offset": 156
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "y",
              "position": {
                "start": {
                  "line": 1,
                  "column": 157,
                  "offset": 156
                },
                "end": {
                  "line": 1,
                  "column": 160,
                  "offset": 159
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " parameters. The default document font will be used unless a font is set with the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 160,
                  "offset": 159
                },
                "end": {
                  "line": 1,
                  "column": 242,
                  "offset": 241
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "textFont()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 242,
                  "offset": 241
                },
                "end": {
                  "line": 1,
                  "column": 254,
                  "offset": 253
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function. The default document font size will be used unless a font size is set with the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 254,
                  "offset": 253
                },
                "end": {
                  "line": 1,
                  "column": 344,
                  "offset": 343
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "textSize()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 344,
                  "offset": 343
                },
                "end": {
                  "line": 1,
                  "column": 356,
                  "offset": 355
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function. Change the color of the text with the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 356,
                  "offset": 355
                },
                "end": {
                  "line": 1,
                  "column": 405,
                  "offset": 404
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "fill()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 405,
                  "offset": 404
                },
                "end": {
                  "line": 1,
                  "column": 413,
                  "offset": 412
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function. The text displays in relation to the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 413,
                  "offset": 412
                },
                "end": {
                  "line": 1,
                  "column": 461,
                  "offset": 460
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "textAlign()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 461,
                  "offset": 460
                },
                "end": {
                  "line": 1,
                  "column": 474,
                  "offset": 473
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 474,
                  "offset": 473
                },
                "end": {
                  "line": 1,
                  "column": 479,
                  "offset": 478
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "textYAlign()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 479,
                  "offset": 478
                },
                "end": {
                  "line": 1,
                  "column": 493,
                  "offset": 492
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " functions. The ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 493,
                  "offset": 492
                },
                "end": {
                  "line": 1,
                  "column": 509,
                  "offset": 508
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "w",
              "position": {
                "start": {
                  "line": 1,
                  "column": 509,
                  "offset": 508
                },
                "end": {
                  "line": 1,
                  "column": 512,
                  "offset": 511
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 512,
                  "offset": 511
                },
                "end": {
                  "line": 1,
                  "column": 517,
                  "offset": 516
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "h",
              "position": {
                "start": {
                  "line": 1,
                  "column": 517,
                  "offset": 516
                },
                "end": {
                  "line": 1,
                  "column": 520,
                  "offset": 519
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " parameters define a rectangular area. If a rectangle, an oval, a polygon or a graphic line are used instead of an x position, the given text will be placed in/on this shape.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 520,
                  "offset": 519
                },
                "end": {
                  "line": 1,
                  "column": 694,
                  "offset": 693
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 694,
              "offset": 693
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 694,
          "offset": 693
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Creates a text frame on the current layer on the current page in the current document. The text frame gets created in the position specified by the `x` and `y` parameters. The default document font will be used unless a font is set with the `textFont()` function. The default document font size will be used unless a font size is set with the `textSize()` function. Change the color of the text with the `fill()` function. The text displays in relation to the `textAlign()` and `textYAlign()` functions. The `w` and `h` parameters define a rectangular area. If a rectangle, an oval, a polygon or a graphic line are used instead of an x position, the given text will be placed in/on this shape.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "text"
      },
      {
        "title": "param",
        "description": "The text content to set in the text frame.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "txt"
      },
      {
        "title": "param",
        "description": "x-coordinate of text frame or item to place the text in or graphic line to place the text onto as a text path.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Rectangle"
            },
            {
              "type": "NameExpression",
              "name": "Oval"
            },
            {
              "type": "NameExpression",
              "name": "Polygon"
            },
            {
              "type": "NameExpression",
              "name": "GraphicLine"
            },
            {
              "type": "NameExpression",
              "name": "TextFrame"
            }
          ]
        },
        "name": "x"
      },
      {
        "title": "param",
        "description": "y-coordinate of text frame",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y"
      },
      {
        "title": "param",
        "description": "width of text frame",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "w"
      },
      {
        "title": "param",
        "description": "height of text frame",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "h"
      },
      {
        "title": "return",
        "description": "The created text frame instance or the text path",
        "lineNumber": 11,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "TextPath"
            }
          ]
        }
      },
      {
        "title": "example",
        "description": "text(LOREM, 50, 50, 100, 200);",
        "lineNumber": 13,
        "caption": "Create a text frame with a Lorem ipsum text."
      },
      {
        "title": "example",
        "description": "var ell = ellipse(50, 50, 100, 100);\ntext(LOREM, ell);",
        "lineNumber": 16,
        "caption": "Place a Lorem ipsum text inside an oval shape."
      },
      {
        "title": "example",
        "description": "var l = line(50, 50, 200, 80);\ntext(LOREM, l);",
        "lineNumber": 20,
        "caption": "Place a Lorem ipsum text as a text path onto a line."
      }
    ],
    "loc": {
      "start": {
        "line": 7806,
        "column": 0
      },
      "end": {
        "line": 7829,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 7830,
          "column": 0
        },
        "end": {
          "line": 7900,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "text(LOREM, 50, 50, 100, 200);",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Create a text frame with a Lorem ipsum text.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 45,
                      "offset": 44
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 45,
                  "offset": 44
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 45,
              "offset": 44
            }
          }
        }
      },
      {
        "description": "var ell = ellipse(50, 50, 100, 100);\ntext(LOREM, ell);",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Place a Lorem ipsum text inside an oval shape.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 47,
                      "offset": 46
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 47,
                  "offset": 46
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 47,
              "offset": 46
            }
          }
        }
      },
      {
        "description": "var l = line(50, 50, 200, 80);\ntext(LOREM, l);",
        "caption": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Place a Lorem ipsum text as a text path onto a line.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 53,
              "offset": 52
            }
          }
        }
      }
    ],
    "params": [
      {
        "title": "param",
        "name": "txt",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The text content to set in the text frame.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 43,
              "offset": 42
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      },
      {
        "title": "param",
        "name": "x",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "x-coordinate of text frame or item to place the text in or graphic line to place the text onto as a text path.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 111,
                      "offset": 110
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 111,
                  "offset": 110
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 111,
              "offset": 110
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Rectangle"
            },
            {
              "type": "NameExpression",
              "name": "Oval"
            },
            {
              "type": "NameExpression",
              "name": "Polygon"
            },
            {
              "type": "NameExpression",
              "name": "GraphicLine"
            },
            {
              "type": "NameExpression",
              "name": "TextFrame"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "y",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "y-coordinate of text frame",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "w",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "width of text frame",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "h",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "height of text frame",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The created text frame instance or the text path",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 49,
              "offset": 48
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "TextPath"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "text",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "text",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".text"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the current horizontal and vertical text alignment.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 57,
                  "offset": 56
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 57,
              "offset": 56
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 57,
          "offset": 56
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Sets the current horizontal and vertical text alignment.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Attributes",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "textAlign"
      },
      {
        "title": "param",
        "description": "The horizontal text alignment to set. Must be one of the InDesign `Justification` enum values:\n- `Justification.AWAY_FROM_BINDING_SIDE`\n- `Justification.CENTER_ALIGN`\n- `Justification.CENTER_JUSTIFIED`\n- `Justification.FULLY_JUSTIFIED`\n- `Justification.LEFT_ALIGN`\n- `Justification.RIGHT_ALIGN`\n- `Justification.RIGHT_JUSTIFIED`\n- `Justification.TO_BINDING_SIDE`",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "align"
      },
      {
        "title": "param",
        "description": "The vertical text alignment to set. Must be one of the InDesign `VerticalJustification` enum values:\n- `VerticalJustification.BOTTOM_ALIGN`\n- `VerticalJustification.CENTER_ALIGN`\n- `VerticalJustification.JUSTIFY_ALIGN`\n- `VerticalJustification.TOP_ALIGN`",
        "lineNumber": 16,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        },
        "name": "yAlign"
      }
    ],
    "loc": {
      "start": {
        "line": 7906,
        "column": 0
      },
      "end": {
        "line": 7927,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 7928,
          "column": 0
        },
        "end": {
          "line": 7931,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "align",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The horizontal text alignment to set. Must be one of the InDesign ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 67,
                      "offset": 66
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "Justification",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 67,
                      "offset": 66
                    },
                    "end": {
                      "line": 1,
                      "column": 82,
                      "offset": 81
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " enum values:",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 82,
                      "offset": 81
                    },
                    "end": {
                      "line": 1,
                      "column": 95,
                      "offset": 94
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 95,
                  "offset": 94
                },
                "indent": []
              }
            },
            {
              "type": "list",
              "ordered": false,
              "start": null,
              "loose": false,
              "children": [
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "Justification.AWAY_FROM_BINDING_SIDE",
                          "position": {
                            "start": {
                              "line": 2,
                              "column": 3,
                              "offset": 97
                            },
                            "end": {
                              "line": 2,
                              "column": 41,
                              "offset": 135
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 3,
                          "offset": 97
                        },
                        "end": {
                          "line": 2,
                          "column": 41,
                          "offset": 135
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 95
                    },
                    "end": {
                      "line": 2,
                      "column": 41,
                      "offset": 135
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "Justification.CENTER_ALIGN",
                          "position": {
                            "start": {
                              "line": 3,
                              "column": 3,
                              "offset": 138
                            },
                            "end": {
                              "line": 3,
                              "column": 31,
                              "offset": 166
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 3,
                          "offset": 138
                        },
                        "end": {
                          "line": 3,
                          "column": 31,
                          "offset": 166
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 1,
                      "offset": 136
                    },
                    "end": {
                      "line": 3,
                      "column": 31,
                      "offset": 166
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "Justification.CENTER_JUSTIFIED",
                          "position": {
                            "start": {
                              "line": 4,
                              "column": 3,
                              "offset": 169
                            },
                            "end": {
                              "line": 4,
                              "column": 35,
                              "offset": 201
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 3,
                          "offset": 169
                        },
                        "end": {
                          "line": 4,
                          "column": 35,
                          "offset": 201
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 1,
                      "offset": 167
                    },
                    "end": {
                      "line": 4,
                      "column": 35,
                      "offset": 201
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "Justification.FULLY_JUSTIFIED",
                          "position": {
                            "start": {
                              "line": 5,
                              "column": 3,
                              "offset": 204
                            },
                            "end": {
                              "line": 5,
                              "column": 34,
                              "offset": 235
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 5,
                          "column": 3,
                          "offset": 204
                        },
                        "end": {
                          "line": 5,
                          "column": 34,
                          "offset": 235
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 202
                    },
                    "end": {
                      "line": 5,
                      "column": 34,
                      "offset": 235
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "Justification.LEFT_ALIGN",
                          "position": {
                            "start": {
                              "line": 6,
                              "column": 3,
                              "offset": 238
                            },
                            "end": {
                              "line": 6,
                              "column": 29,
                              "offset": 264
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 3,
                          "offset": 238
                        },
                        "end": {
                          "line": 6,
                          "column": 29,
                          "offset": 264
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 1,
                      "offset": 236
                    },
                    "end": {
                      "line": 6,
                      "column": 29,
                      "offset": 264
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "Justification.RIGHT_ALIGN",
                          "position": {
                            "start": {
                              "line": 7,
                              "column": 3,
                              "offset": 267
                            },
                            "end": {
                              "line": 7,
                              "column": 30,
                              "offset": 294
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 7,
                          "column": 3,
                          "offset": 267
                        },
                        "end": {
                          "line": 7,
                          "column": 30,
                          "offset": 294
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 1,
                      "offset": 265
                    },
                    "end": {
                      "line": 7,
                      "column": 30,
                      "offset": 294
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "Justification.RIGHT_JUSTIFIED",
                          "position": {
                            "start": {
                              "line": 8,
                              "column": 3,
                              "offset": 297
                            },
                            "end": {
                              "line": 8,
                              "column": 34,
                              "offset": 328
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 8,
                          "column": 3,
                          "offset": 297
                        },
                        "end": {
                          "line": 8,
                          "column": 34,
                          "offset": 328
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 8,
                      "column": 1,
                      "offset": 295
                    },
                    "end": {
                      "line": 8,
                      "column": 34,
                      "offset": 328
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "Justification.TO_BINDING_SIDE",
                          "position": {
                            "start": {
                              "line": 9,
                              "column": 3,
                              "offset": 331
                            },
                            "end": {
                              "line": 9,
                              "column": 34,
                              "offset": 362
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 9,
                          "column": 3,
                          "offset": 331
                        },
                        "end": {
                          "line": 9,
                          "column": 34,
                          "offset": 362
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 9,
                      "column": 1,
                      "offset": 329
                    },
                    "end": {
                      "line": 9,
                      "column": 34,
                      "offset": 362
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 2,
                  "column": 1,
                  "offset": 95
                },
                "end": {
                  "line": 9,
                  "column": 34,
                  "offset": 362
                },
                "indent": [
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 9,
              "column": 34,
              "offset": 362
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      },
      {
        "title": "param",
        "name": "yAlign",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The vertical text alignment to set. Must be one of the InDesign ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 65,
                      "offset": 64
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "VerticalJustification",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 65,
                      "offset": 64
                    },
                    "end": {
                      "line": 1,
                      "column": 88,
                      "offset": 87
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " enum values:",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 88,
                      "offset": 87
                    },
                    "end": {
                      "line": 1,
                      "column": 101,
                      "offset": 100
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 101,
                  "offset": 100
                },
                "indent": []
              }
            },
            {
              "type": "list",
              "ordered": false,
              "start": null,
              "loose": false,
              "children": [
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "VerticalJustification.BOTTOM_ALIGN",
                          "position": {
                            "start": {
                              "line": 2,
                              "column": 3,
                              "offset": 103
                            },
                            "end": {
                              "line": 2,
                              "column": 39,
                              "offset": 139
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 3,
                          "offset": 103
                        },
                        "end": {
                          "line": 2,
                          "column": 39,
                          "offset": 139
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 101
                    },
                    "end": {
                      "line": 2,
                      "column": 39,
                      "offset": 139
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "VerticalJustification.CENTER_ALIGN",
                          "position": {
                            "start": {
                              "line": 3,
                              "column": 3,
                              "offset": 142
                            },
                            "end": {
                              "line": 3,
                              "column": 39,
                              "offset": 178
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 3,
                          "offset": 142
                        },
                        "end": {
                          "line": 3,
                          "column": 39,
                          "offset": 178
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 1,
                      "offset": 140
                    },
                    "end": {
                      "line": 3,
                      "column": 39,
                      "offset": 178
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "VerticalJustification.JUSTIFY_ALIGN",
                          "position": {
                            "start": {
                              "line": 4,
                              "column": 3,
                              "offset": 181
                            },
                            "end": {
                              "line": 4,
                              "column": 40,
                              "offset": 218
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 3,
                          "offset": 181
                        },
                        "end": {
                          "line": 4,
                          "column": 40,
                          "offset": 218
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 1,
                      "offset": 179
                    },
                    "end": {
                      "line": 4,
                      "column": 40,
                      "offset": 218
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "VerticalJustification.TOP_ALIGN",
                          "position": {
                            "start": {
                              "line": 5,
                              "column": 3,
                              "offset": 221
                            },
                            "end": {
                              "line": 5,
                              "column": 36,
                              "offset": 254
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 5,
                          "column": 3,
                          "offset": 221
                        },
                        "end": {
                          "line": 5,
                          "column": 36,
                          "offset": 254
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 219
                    },
                    "end": {
                      "line": 5,
                      "column": 36,
                      "offset": 254
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 2,
                  "column": 1,
                  "offset": 101
                },
                "end": {
                  "line": 5,
                  "column": 36,
                  "offset": 254
                },
                "indent": [
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 5,
              "column": 36,
              "offset": 254
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "textAlign",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "textAlign",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".textAlign"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the current font and sets it if argument ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 50,
                  "offset": 49
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "fontName",
              "position": {
                "start": {
                  "line": 1,
                  "column": 50,
                  "offset": 49
                },
                "end": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is given.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "end": {
                  "line": 1,
                  "column": 70,
                  "offset": 69
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 70,
              "offset": 69
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 70,
          "offset": 69
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns the current font and sets it if argument `fontName` is given.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Attributes",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "textFont"
      },
      {
        "title": "param",
        "description": "The name of the font to set e.g. Helvetica",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        },
        "name": "fontName"
      },
      {
        "title": "param",
        "description": "The font style e.g. Bold",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        },
        "name": "fontStyle"
      },
      {
        "title": "return",
        "description": "The current font object",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Font"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 7933,
        "column": 0
      },
      "end": {
        "line": 7943,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 7944,
          "column": 0
        },
        "end": {
          "line": 7964,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "fontName",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The name of the font to set e.g. Helvetica",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 43,
              "offset": 42
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        }
      },
      {
        "title": "param",
        "name": "fontStyle",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The font style e.g. Bold",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current font object",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Font"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "textFont",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "textFont",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".textFont"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the current kerning and sets it if argument ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "kerning",
              "position": {
                "start": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "end": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is given.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "end": {
                  "line": 1,
                  "column": 72,
                  "offset": 71
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 72,
              "offset": 71
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 72,
          "offset": 71
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns the current kerning and sets it if argument `kerning` is given.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Attributes",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "textKerning"
      },
      {
        "title": "param",
        "description": "The value to set.",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "kerning"
      },
      {
        "title": "return",
        "description": "The current kerning.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 7966,
        "column": 0
      },
      "end": {
        "line": 7975,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 7976,
          "column": 0
        },
        "end": {
          "line": 7981,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "kerning",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value to set.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current kerning.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "textKerning",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "textKerning",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".textKerning"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the spacing between lines of text in units of points and sets it if argument ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 86,
                  "offset": 85
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "leading",
              "position": {
                "start": {
                  "line": 1,
                  "column": 86,
                  "offset": 85
                },
                "end": {
                  "line": 1,
                  "column": 95,
                  "offset": 94
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is given.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 95,
                  "offset": 94
                },
                "end": {
                  "line": 1,
                  "column": 105,
                  "offset": 104
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 105,
              "offset": 104
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 105,
          "offset": 104
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns the spacing between lines of text in units of points and sets it if argument `leading` is given.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Attributes",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "textLeading"
      },
      {
        "title": "param",
        "description": "The spacing between lines of text in units of points or the default InDesign enum value `Leading.AUTO`.",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Number"
              },
              {
                "type": "NameExpression",
                "name": "String"
              }
            ]
          }
        },
        "name": "leading"
      },
      {
        "title": "return",
        "description": "The current leading.",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 7983,
        "column": 0
      },
      "end": {
        "line": 7992,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 7993,
          "column": 0
        },
        "end": {
          "line": 7998,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "leading",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The spacing between lines of text in units of points or the default InDesign enum value ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 89,
                      "offset": 88
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "Leading.AUTO",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 89,
                      "offset": 88
                    },
                    "end": {
                      "line": 1,
                      "column": 103,
                      "offset": 102
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 103,
                      "offset": 102
                    },
                    "end": {
                      "line": 1,
                      "column": 104,
                      "offset": 103
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 104,
                  "offset": 103
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 104,
              "offset": 103
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Number"
              },
              {
                "type": "NameExpression",
                "name": "String"
              }
            ]
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current leading.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "textLeading",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "textLeading",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".textLeading"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the current font size in points and sets it if argument ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "pointSize",
              "position": {
                "start": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "end": {
                  "line": 1,
                  "column": 76,
                  "offset": 75
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is given.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 76,
                  "offset": 75
                },
                "end": {
                  "line": 1,
                  "column": 86,
                  "offset": 85
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 86,
              "offset": 85
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 86,
          "offset": 85
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns the current font size in points and sets it if argument `pointSize` is given.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Attributes",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "textSize"
      },
      {
        "title": "param",
        "description": "The size in points to set.",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "pointSize"
      },
      {
        "title": "return",
        "description": "The current point size.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 8000,
        "column": 0
      },
      "end": {
        "line": 8009,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 8010,
          "column": 0
        },
        "end": {
          "line": 8015,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "pointSize",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The size in points to set.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current point size.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "textSize",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "textSize",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".textSize"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the current tracking and sets it if argument ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "tracking",
              "position": {
                "start": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "end": {
                  "line": 1,
                  "column": 64,
                  "offset": 63
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is given.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 64,
                  "offset": 63
                },
                "end": {
                  "line": 1,
                  "column": 74,
                  "offset": 73
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 74,
              "offset": 73
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 74,
          "offset": 73
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns the current tracking and sets it if argument `tracking` is given.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Attributes",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "textTracking"
      },
      {
        "title": "param",
        "description": "The value to set.",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "tracking"
      },
      {
        "title": "return",
        "description": "The current tracking.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 8017,
        "column": 0
      },
      "end": {
        "line": 8026,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 8027,
          "column": 0
        },
        "end": {
          "line": 8032,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "tracking",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value to set.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current tracking.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "textTracking",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "textTracking",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".textTracking"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets text properties to the given item. If the item is not an instance the text property can be set to, the property gets set to the direct descendants of the given item, e.g. all stories of a given document.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 209,
                  "offset": 208
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 209,
              "offset": 208
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "If no value is given and the given property is a string, the function acts as a getter and returns the corresponding value(s) in an array. This can either be an array containing the value of the concrete item (e.g. character) the values of the item's descendants (e.g. paragraphs of given text frame).",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 210
                },
                "end": {
                  "line": 3,
                  "column": 302,
                  "offset": 511
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 210
            },
            "end": {
              "line": 3,
              "column": 302,
              "offset": 511
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 302,
          "offset": 511
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Sets text properties to the given item. If the item is not an instance the text property can be set to, the property gets set to the direct descendants of the given item, e.g. all stories of a given document.\n\nIf no value is given and the given property is a string, the function acts as a getter and returns the corresponding value(s) in an array. This can either be an array containing the value of the concrete item (e.g. character) the values of the item's descendants (e.g. paragraphs of given text frame).",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 5
      },
      {
        "title": "subcat",
        "description": "Attributes",
        "lineNumber": 6
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 7,
        "name": "typo"
      },
      {
        "title": "param",
        "description": "The object to apply the property to.",
        "lineNumber": 9,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Spread"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            },
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "TextPath"
            },
            {
              "type": "NameExpression",
              "name": "Text"
            }
          ]
        },
        "name": "item"
      },
      {
        "title": "param",
        "description": "The text property name or an object of key/value property/value pairs. If property is a string and no value is given, the function acts as getter.",
        "lineNumber": 10,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        },
        "name": "property"
      },
      {
        "title": "param",
        "description": "The value to apply to the property.",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "String"
              },
              {
                "type": "NameExpression",
                "name": "Number"
              },
              {
                "type": "NameExpression",
                "name": "Object"
              }
            ]
          }
        },
        "name": "value"
      },
      {
        "title": "return",
        "description": "The property value(s) if the function acts as getter or the items the property was assigned to.",
        "lineNumber": 12,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "String"
                }
              ]
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "Number"
                }
              ]
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "Object"
                }
              ]
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 8034,
        "column": 0
      },
      "end": {
        "line": 8047,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 8048,
          "column": 0
        },
        "end": {
          "line": 8101,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "item",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The object to apply the property to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 37,
              "offset": 36
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Spread"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            },
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "TextPath"
            },
            {
              "type": "NameExpression",
              "name": "Text"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "property",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The text property name or an object of key/value property/value pairs. If property is a string and no value is given, the function acts as getter.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 147,
                      "offset": 146
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 147,
                  "offset": 146
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 147,
              "offset": 146
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "value",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value to apply to the property.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 36,
                      "offset": 35
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 36,
              "offset": 35
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "String"
              },
              {
                "type": "NameExpression",
                "name": "Number"
              },
              {
                "type": "NameExpression",
                "name": "Object"
              }
            ]
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The property value(s) if the function acts as getter or the items the property was assigned to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 96,
                      "offset": 95
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 96,
                  "offset": 95
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 96,
              "offset": 95
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "String"
                }
              ]
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "Number"
                }
              ]
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "Object"
                }
              ]
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "typo",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "typo",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".typo"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Applies a character style to the given text object, text frame or story. The character style can be given as name or as character style instance.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 146,
                  "offset": 145
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 146,
              "offset": 145
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 146,
          "offset": 145
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Applies a character style to the given text object, text frame or story. The character style can be given as name or as character style instance.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Styles",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "applyCharacterStyle"
      },
      {
        "title": "param",
        "description": "The text frame, text object or story to apply the style to.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "TextObject"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            }
          ]
        },
        "name": "text"
      },
      {
        "title": "param",
        "description": "A character style instance or the name of the character style to apply.",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "CharacterStyle"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        },
        "name": "style"
      },
      {
        "title": "return",
        "description": "The text that the style was applied to.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Text"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 8107,
        "column": 0
      },
      "end": {
        "line": 8117,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 8119,
          "column": 0
        },
        "end": {
          "line": 8140,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "text",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The text frame, text object or story to apply the style to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 60,
                      "offset": 59
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 60,
              "offset": 59
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "TextObject"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "style",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A character style instance or the name of the character style to apply.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 72,
                      "offset": 71
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 72,
                  "offset": 71
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 72,
              "offset": 71
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "CharacterStyle"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The text that the style was applied to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 40,
              "offset": 39
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Text"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "applyCharacterStyle",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "applyCharacterStyle",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".applyCharacterStyle"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Applies a paragraph style to the given text object, text frame or story. The paragraph style can be given as name or as paragraph style instance.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 146,
                  "offset": 145
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 146,
              "offset": 145
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 146,
          "offset": 145
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Applies a paragraph style to the given text object, text frame or story. The paragraph style can be given as name or as paragraph style instance.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Styles",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "applyParagraphStyle"
      },
      {
        "title": "param",
        "description": "The text frame, text object or story to apply the style to.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "TextObject"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            }
          ]
        },
        "name": "text"
      },
      {
        "title": "param",
        "description": "A paragraph style instance or the name of the paragraph style to apply.",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "ParagraphStyle"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        },
        "name": "style"
      },
      {
        "title": "return",
        "description": "The text that the style was applied to.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Text"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 8142,
        "column": 0
      },
      "end": {
        "line": 8152,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 8154,
          "column": 0
        },
        "end": {
          "line": 8175,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "text",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The text frame, text object or story to apply the style to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 60,
                      "offset": 59
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 60,
              "offset": 59
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "TextObject"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "style",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A paragraph style instance or the name of the paragraph style to apply.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 72,
                      "offset": 71
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 72,
                  "offset": 71
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 72,
              "offset": 71
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "ParagraphStyle"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The text that the style was applied to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 40,
              "offset": 39
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Text"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "applyParagraphStyle",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "applyParagraphStyle",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".applyParagraphStyle"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the character style of a given text object or the character style with the given name. If a character style of the given name does not exist, it gets created. Optionally a props object of property name/value pairs can be used to set the character style's properties.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 275,
                  "offset": 274
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 275,
              "offset": 274
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 275,
          "offset": 274
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns the character style of a given text object or the character style with the given name. If a character style of the given name does not exist, it gets created. Optionally a props object of property name/value pairs can be used to set the character style's properties.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Styles",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "characterStyle"
      },
      {
        "title": "param",
        "description": "A text object whose style to return or the name of the character style to return.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Text"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        },
        "name": "textOrName"
      },
      {
        "title": "param",
        "description": "Optional: An object of property name/value pairs to set the style's properties.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        },
        "name": "props"
      },
      {
        "title": "return",
        "description": "The character style instance.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "CharacterStyle"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 8177,
        "column": 0
      },
      "end": {
        "line": 8187,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 8188,
          "column": 0
        },
        "end": {
          "line": 8218,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "textOrName",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A text object whose style to return or the name of the character style to return.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 82,
                      "offset": 81
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 82,
                  "offset": 81
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 82,
              "offset": 81
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Text"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "props",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional: An object of property name/value pairs to set the style's properties.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 80,
                      "offset": 79
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 80,
                  "offset": 79
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 80,
              "offset": 79
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The character style instance.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "CharacterStyle"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "characterStyle",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "characterStyle",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".characterStyle"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the paragraph style of a given text object or the paragraph style with the given name. If a paragraph style of the given name does not exist, it gets created. Optionally a props object of property name/value pairs can be used to set the paragraph style's properties.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 275,
                  "offset": 274
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 275,
              "offset": 274
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 275,
          "offset": 274
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns the paragraph style of a given text object or the paragraph style with the given name. If a paragraph style of the given name does not exist, it gets created. Optionally a props object of property name/value pairs can be used to set the paragraph style's properties.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Styles",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "paragraphStyle"
      },
      {
        "title": "param",
        "description": "A text object whose style to return or the name of the paragraph style to return.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Text"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        },
        "name": "textOrName"
      },
      {
        "title": "param",
        "description": "Optional: An object of property name/value pairs to set the style's properties.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        },
        "name": "props"
      },
      {
        "title": "return",
        "description": "The paragraph style instance.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "ParagraphStyle"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 8220,
        "column": 0
      },
      "end": {
        "line": 8230,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 8231,
          "column": 0
        },
        "end": {
          "line": 8261,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "textOrName",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A text object whose style to return or the name of the paragraph style to return.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 82,
                      "offset": 81
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 82,
                  "offset": 81
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 82,
              "offset": 81
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Text"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "props",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional: An object of property name/value pairs to set the style's properties.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 80,
                      "offset": 79
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 80,
                  "offset": 79
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 80,
              "offset": 79
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The paragraph style instance.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "ParagraphStyle"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "paragraphStyle",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "paragraphStyle",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".paragraphStyle"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns a Lorem ipsum string that can be used for testing.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 59,
                  "offset": 58
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 59,
              "offset": 58
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 59,
          "offset": 58
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns a Lorem ipsum string that can be used for testing.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 4
      },
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 5,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "LOREM"
      }
    ],
    "loc": {
      "start": {
        "line": 8267,
        "column": 0
      },
      "end": {
        "line": 8273,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 8274,
          "column": 0
        },
        "end": {
          "line": 8274,
          "column": 353
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "LOREM",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "LOREM",
        "scope": "static"
      }
    ],
    "namespace": ".LOREM"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used to run a function on all elements of an array. ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "forEach()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "end": {
                  "line": 1,
                  "column": 64,
                  "offset": 63
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " calls this callback function on each element of the given array. When the callback function returns false, the loop stops and an array of all elements up to this point is returned.\nPlease note the existence of the convenience methods ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 64,
                  "offset": 63
                },
                "end": {
                  "line": 2,
                  "column": 54,
                  "offset": 298
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "stories()",
              "position": {
                "start": {
                  "line": 2,
                  "column": 54,
                  "offset": 298
                },
                "end": {
                  "line": 2,
                  "column": 65,
                  "offset": 309
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 65,
                  "offset": 309
                },
                "end": {
                  "line": 2,
                  "column": 67,
                  "offset": 311
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "paragraphs()",
              "position": {
                "start": {
                  "line": 2,
                  "column": 67,
                  "offset": 311
                },
                "end": {
                  "line": 2,
                  "column": 81,
                  "offset": 325
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 81,
                  "offset": 325
                },
                "end": {
                  "line": 2,
                  "column": 83,
                  "offset": 327
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "lines()",
              "position": {
                "start": {
                  "line": 2,
                  "column": 83,
                  "offset": 327
                },
                "end": {
                  "line": 2,
                  "column": 92,
                  "offset": 336
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 92,
                  "offset": 336
                },
                "end": {
                  "line": 2,
                  "column": 94,
                  "offset": 338
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "words()",
              "position": {
                "start": {
                  "line": 2,
                  "column": 94,
                  "offset": 338
                },
                "end": {
                  "line": 2,
                  "column": 103,
                  "offset": 347
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 103,
                  "offset": 347
                },
                "end": {
                  "line": 2,
                  "column": 108,
                  "offset": 352
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "characters()",
              "position": {
                "start": {
                  "line": 2,
                  "column": 108,
                  "offset": 352
                },
                "end": {
                  "line": 2,
                  "column": 122,
                  "offset": 366
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " that are used to iterate through all instances of the given type in the given document.",
              "position": {
                "start": {
                  "line": 2,
                  "column": 122,
                  "offset": 366
                },
                "end": {
                  "line": 2,
                  "column": 210,
                  "offset": 454
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 210,
              "offset": 454
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 210,
          "offset": 454
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Used to run a function on all elements of an array. `forEach()` calls this callback function on each element of the given array. When the callback function returns false, the loop stops and an array of all elements up to this point is returned.\nPlease note the existence of the convenience methods `stories()`, `paragraphs()`, `lines()`, `words()` and `characters()` that are used to iterate through all instances of the given type in the given document.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "Collections",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "forEach"
      },
      {
        "title": "param",
        "description": "The array to be processed.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        },
        "name": "collection"
      },
      {
        "title": "param",
        "description": "The function that will be called on each element. The call will be like `function(item, i)` where `i` is the current index of the item within the array.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Function"
        },
        "name": "cb"
      },
      {
        "title": "return",
        "description": "An array of the input array elements.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1563,
        "column": 0
      },
      "end": {
        "line": 1574,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1575,
          "column": 0
        },
        "end": {
          "line": 1591,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "collection",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The array to be processed.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      },
      {
        "title": "param",
        "name": "cb",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The function that will be called on each element. The call will be like ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 73,
                      "offset": 72
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "function(item, i)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 73,
                      "offset": 72
                    },
                    "end": {
                      "line": 1,
                      "column": 92,
                      "offset": 91
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " where ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 92,
                      "offset": 91
                    },
                    "end": {
                      "line": 1,
                      "column": 99,
                      "offset": 98
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "i",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 99,
                      "offset": 98
                    },
                    "end": {
                      "line": 1,
                      "column": 102,
                      "offset": 101
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " is the current index of the item within the array.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 102,
                      "offset": 101
                    },
                    "end": {
                      "line": 1,
                      "column": 153,
                      "offset": 152
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 153,
                  "offset": 152
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 153,
              "offset": 152
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Function"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An array of the input array elements.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 38,
                  "offset": 37
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 38,
              "offset": 37
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "forEach",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "forEach",
        "kind": "function"
      }
    ],
    "namespace": "forEach"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Function parses a string as CSV-object Array.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 46,
          "offset": 45
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Function parses a string as CSV-object Array.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "CSV",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "CSV.decode"
      },
      {
        "title": "param",
        "description": "to be parsed as CSV-object.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "String"
      },
      {
        "title": "return",
        "description": "Returns CSV-object Array",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      },
      {
        "title": "example",
        "description": "var arr = CSV.decode(str);\nvar str = CSV.encode(arr);",
        "lineNumber": 10
      }
    ],
    "loc": {
      "start": {
        "line": 1705,
        "column": 2
      },
      "end": {
        "line": 1718,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1719,
          "column": 2
        },
        "end": {
          "line": 1731,
          "column": 4
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "var arr = CSV.decode(str);\nvar str = CSV.encode(arr);"
      }
    ],
    "params": [
      {
        "title": "param",
        "name": "text",
        "lineNumber": 1719
      },
      {
        "title": "param",
        "name": "String",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "to be parsed as CSV-object.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns CSV-object Array",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "CSV.decode",
    "memberof": "CSV",
    "scope": "instance",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "CSV.decode",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#CSV.decode"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the delimiter of the CSV decode and encode function.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 58,
                  "offset": 57
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 58,
              "offset": 57
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 58,
          "offset": 57
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Sets the delimiter of the CSV decode and encode function.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "CSV",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "CSV.delimiter"
      },
      {
        "title": "param",
        "description": "Optional Sets the delimiter for CSV parsing",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        },
        "name": "delimiter"
      },
      {
        "title": "return",
        "description": "Returns the current delimiter if called without argument",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1733,
        "column": 2
      },
      "end": {
        "line": 1742,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1743,
          "column": 2
        },
        "end": {
          "line": 1750,
          "column": 4
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "delimiter",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional Sets the delimiter for CSV parsing",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 44,
                      "offset": 43
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 44,
                  "offset": 43
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 44,
              "offset": 43
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns the current delimiter if called without argument",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 57,
                      "offset": 56
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 57,
                  "offset": 56
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 57,
              "offset": 56
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "CSV.delimiter",
    "memberof": "CSV",
    "scope": "instance",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "CSV.delimiter",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#CSV.delimiter"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Function convert an javascript array of objects to a CSV-string.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 65,
              "offset": 64
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 65,
          "offset": 64
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Function convert an javascript array of objects to a CSV-string.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "CSV",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "CSV.encode"
      },
      {
        "title": "param",
        "description": "to be converted to a CSV-string",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        },
        "name": "Array"
      },
      {
        "title": "return",
        "description": "Returns CSV-string",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      },
      {
        "title": "example",
        "description": "var str = CSV.encode(arr);\nvar arr = CSV.decode(str);",
        "lineNumber": 10
      }
    ],
    "loc": {
      "start": {
        "line": 1752,
        "column": 2
      },
      "end": {
        "line": 1765,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1766,
          "column": 2
        },
        "end": {
          "line": 1786,
          "column": 4
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "var str = CSV.encode(arr);\nvar arr = CSV.decode(str);"
      }
    ],
    "params": [
      {
        "title": "param",
        "name": "rows",
        "lineNumber": 1766
      },
      {
        "title": "param",
        "name": "Array",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "to be converted to a CSV-string",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns CSV-string",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "CSV.encode",
    "memberof": "CSV",
    "scope": "instance",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "CSV.encode",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#CSV.encode"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "HashList is a data container that allows you to store information as key - value pairs. As usual in JavaScript mixed types of keys and values are accepted in one HashList instance.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 181,
                  "offset": 180
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 181,
              "offset": 180
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 181,
          "offset": 180
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "HashList is a data container that allows you to store information as key - value pairs. As usual in JavaScript mixed types of keys and values are accepted in one HashList instance.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "HashList",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "HashList"
      },
      {
        "title": "class",
        "description": null,
        "lineNumber": 7,
        "name": null
      }
    ],
    "loc": {
      "start": {
        "line": 1862,
        "column": 0
      },
      "end": {
        "line": 1870,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1872,
          "column": 0
        },
        "end": {
          "line": 2074,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "class",
    "name": "HashList",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "HashList",
        "kind": "class"
      }
    ],
    "namespace": "HashList"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Deletes all the key - value pairs in this HashList.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 52,
                  "offset": 51
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 52,
              "offset": 51
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 52,
          "offset": 51
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Deletes all the key - value pairs in this HashList.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "HashList",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "HashList.clear"
      }
    ],
    "loc": {
      "start": {
        "line": 1888,
        "column": 2
      },
      "end": {
        "line": 1894,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1895,
          "column": 2
        },
        "end": {
          "line": 1900,
          "column": 4
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "HashList.clear",
    "memberof": "that",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "HashList.clear",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".HashList.clear"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This gets a value by its key.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 30,
          "offset": 29
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "This gets a value by its key.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "HashList",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "HashList.get"
      },
      {
        "title": "param",
        "description": "The key to look for.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "key"
      },
      {
        "title": "return",
        "description": "The value.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1902,
        "column": 2
      },
      "end": {
        "line": 1911,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1912,
          "column": 2
        },
        "end": {
          "line": 1914,
          "column": 4
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "key",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The key to look for.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 11,
              "offset": 10
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "HashList.get",
    "memberof": "that",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "HashList.get",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".HashList.get"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns an array with all keys.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 32,
          "offset": 31
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns an array with all keys.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "HashList",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "HashList.getKeys"
      },
      {
        "title": "return",
        "description": "An array with all the keys.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1916,
        "column": 2
      },
      "end": {
        "line": 1924,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1925,
          "column": 2
        },
        "end": {
          "line": 1936,
          "column": 4
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An array with all the keys.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "HashList.getKeys",
    "memberof": "that",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "HashList.getKeys",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".HashList.getKeys"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns an array of all keys that are sorted by their values from highest to lowest. Please note that this only works if you have conistently used Numbers for values.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 167,
                  "offset": 166
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 167,
              "offset": 166
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 167,
          "offset": 166
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns an array of all keys that are sorted by their values from highest to lowest. Please note that this only works if you have conistently used Numbers for values.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "HashList",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "HashList.getKeysByValues"
      },
      {
        "title": "return",
        "description": "An array with all the keys.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1938,
        "column": 2
      },
      "end": {
        "line": 1946,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1947,
          "column": 2
        },
        "end": {
          "line": 1956,
          "column": 4
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An array with all the keys.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "HashList.getKeysByValues",
    "memberof": "that",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "HashList.getKeysByValues",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".HashList.getKeysByValues"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns an array with all keys in a sorted order from higher to lower magnitude.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 81,
                  "offset": 80
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 81,
              "offset": 80
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 81,
          "offset": 80
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns an array with all keys in a sorted order from higher to lower magnitude.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "HashList",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "HashList.getSortedKeys"
      },
      {
        "title": "return",
        "description": "An array with all the keys sorted.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1958,
        "column": 2
      },
      "end": {
        "line": 1966,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1967,
          "column": 2
        },
        "end": {
          "line": 1969,
          "column": 4
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An array with all the keys sorted.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "HashList.getSortedKeys",
    "memberof": "that",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "HashList.getSortedKeys",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".HashList.getSortedKeys"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns an array with all values.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 34,
              "offset": 33
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 34,
          "offset": 33
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Returns an array with all values.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "HashList",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "HashList.getValues"
      },
      {
        "title": "return",
        "description": "An array with all the values.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1971,
        "column": 2
      },
      "end": {
        "line": 1979,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1980,
          "column": 2
        },
        "end": {
          "line": 1990,
          "column": 4
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An array with all the values.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "HashList.getValues",
    "memberof": "that",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "HashList.getValues",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".HashList.getValues"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Checks for the existence of a given key.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 41,
              "offset": 40
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 41,
          "offset": 40
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Checks for the existence of a given key.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "HashList",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "HashList.hasKey"
      },
      {
        "title": "param",
        "description": "The key to check.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "key"
      },
      {
        "title": "return",
        "description": "Returns true or false.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1992,
        "column": 2
      },
      "end": {
        "line": 2001,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2002,
          "column": 2
        },
        "end": {
          "line": 2005,
          "column": 4
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "key",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The key to check.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns true or false.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "HashList.hasKey",
    "memberof": "that",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "HashList.hasKey",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".HashList.hasKey"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Checks if a certain value exists at least once in all of the key - value pairs.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 80,
                  "offset": 79
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 80,
              "offset": 79
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 80,
          "offset": 79
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Checks if a certain value exists at least once in all of the key - value pairs.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "HashList",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "HashList.hasValue"
      },
      {
        "title": "param",
        "description": "The value to check.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Object"
            },
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Boolean"
            }
          ]
        },
        "name": "value"
      },
      {
        "title": "return",
        "description": "Returns true or false.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2007,
        "column": 2
      },
      "end": {
        "line": 2016,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2017,
          "column": 2
        },
        "end": {
          "line": 2027,
          "column": 4
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "value",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value to check.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Object"
            },
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Boolean"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns true or false.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "HashList.hasValue",
    "memberof": "that",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "HashList.hasValue",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".HashList.hasValue"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This removes a key - value pair by its key.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 44,
                  "offset": 43
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 44,
              "offset": 43
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 44,
          "offset": 43
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "This removes a key - value pair by its key.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "HashList",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "HashList.remove"
      },
      {
        "title": "param",
        "description": "The key to delete.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "key"
      },
      {
        "title": "return",
        "description": "The value before deletion.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2029,
        "column": 2
      },
      "end": {
        "line": 2038,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2039,
          "column": 2
        },
        "end": {
          "line": 2047,
          "column": 4
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "key",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The key to delete.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value before deletion.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "HashList.remove",
    "memberof": "that",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "HashList.remove",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".HashList.remove"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This sets a key - value pair. If a key is already existing, the value will be updated. Please note that Functions are currently not supported as values.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 153,
                  "offset": 152
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 153,
              "offset": 152
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 153,
          "offset": 152
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "This sets a key - value pair. If a key is already existing, the value will be updated. Please note that Functions are currently not supported as values.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "HashList",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "HashList.set"
      },
      {
        "title": "param",
        "description": "The key to use.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "key"
      },
      {
        "title": "param",
        "description": "The value to set.",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Object"
            },
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Boolean"
            }
          ]
        },
        "name": "value"
      },
      {
        "title": "return",
        "description": "The value after setting.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2049,
        "column": 2
      },
      "end": {
        "line": 2059,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2060,
          "column": 2
        },
        "end": {
          "line": 2071,
          "column": 4
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "key",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The key to use.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 16,
              "offset": 15
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      },
      {
        "title": "param",
        "name": "value",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value to set.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Object"
            },
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Boolean"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value after setting.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "HashList.set",
    "memberof": "that",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "HashList.set",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".HashList.set"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Checks whether a string ends with a specific character or string.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 66,
                  "offset": 65
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 66,
              "offset": 65
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 66,
          "offset": 65
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Checks whether a string ends with a specific character or string.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "String Functions",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "endsWith"
      },
      {
        "title": "param",
        "description": "A string to be checked",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "str"
      },
      {
        "title": "param",
        "description": "The string to look for",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "suffix"
      },
      {
        "title": "return",
        "description": "Returns either true or false",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2157,
        "column": 0
      },
      "end": {
        "line": 2167,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2168,
          "column": 0
        },
        "end": {
          "line": 2173,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "str",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A string to be checked",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      },
      {
        "title": "param",
        "name": "suffix",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The string to look for",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns either true or false",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "endsWith",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "endsWith",
        "kind": "function"
      }
    ],
    "namespace": "endsWith"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Checks whether a string starts with a specific character or string.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 68,
                  "offset": 67
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 68,
              "offset": 67
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 68,
          "offset": 67
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Checks whether a string starts with a specific character or string.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "String Functions",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "startsWith"
      },
      {
        "title": "param",
        "description": "A string to be checked",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "str"
      },
      {
        "title": "param",
        "description": "The string to look for",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "prefix"
      },
      {
        "title": "return",
        "description": "Returns either true or false",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2313,
        "column": 0
      },
      "end": {
        "line": 2323,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2324,
          "column": 0
        },
        "end": {
          "line": 2329,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "str",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A string to be checked",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      },
      {
        "title": "param",
        "name": "prefix",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The string to look for",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns either true or false",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "startsWith",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "startsWith",
        "kind": "function"
      }
    ],
    "namespace": "startsWith"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Checks whether a var is an array, returns ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "true",
              "position": {
                "start": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " if this is the case.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "end": {
                  "line": 1,
                  "column": 70,
                  "offset": 69
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 70,
              "offset": 69
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 70,
          "offset": 69
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Checks whether a var is an array, returns `true` if this is the case.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Type-Check",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "isArray"
      },
      {
        "title": "param",
        "description": "The object to check",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Object"
            },
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Boolean"
            }
          ]
        },
        "name": "obj"
      },
      {
        "title": "return",
        "description": "returns true if this is the case",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2373,
        "column": 0
      },
      "end": {
        "line": 2382,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2383,
          "column": 0
        },
        "end": {
          "line": 2388,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "obj",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The object to check",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Object"
            },
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Boolean"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "returns true if this is the case",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "isArray",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "isArray",
        "kind": "function"
      }
    ],
    "namespace": "isArray"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Checks whether a var is an integer, returns ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 45,
                  "offset": 44
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "true",
              "position": {
                "start": {
                  "line": 1,
                  "column": 45,
                  "offset": 44
                },
                "end": {
                  "line": 1,
                  "column": 51,
                  "offset": 50
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " if this is the case.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 51,
                  "offset": 50
                },
                "end": {
                  "line": 1,
                  "column": 72,
                  "offset": 71
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 72,
              "offset": 71
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 72,
          "offset": 71
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Checks whether a var is an integer, returns `true` if this is the case.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Type-Check",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "isInteger"
      },
      {
        "title": "param",
        "description": "The number to check.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Object"
            },
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Boolean"
            }
          ]
        },
        "name": "num"
      },
      {
        "title": "return",
        "description": "Returns true if the given argument is an integer.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2390,
        "column": 0
      },
      "end": {
        "line": 2399,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2400,
          "column": 0
        },
        "end": {
          "line": 2402,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "num",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The number to check.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Object"
            },
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Boolean"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns true if the given argument is an integer.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 50,
                      "offset": 49
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 50,
                  "offset": 49
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 50,
              "offset": 49
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "isInteger",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "isInteger",
        "kind": "function"
      }
    ],
    "namespace": "isInteger"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Checks whether a var is a number, returns `true if this is the case.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 69,
          "offset": 68
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Checks whether a var is a number, returns `true if this is the case.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Type-Check",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "isNumber"
      },
      {
        "title": "param",
        "description": "The number to check",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Object"
            },
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Boolean"
            }
          ]
        },
        "name": "num"
      },
      {
        "title": "return",
        "description": "returns true if this is the case",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2404,
        "column": 0
      },
      "end": {
        "line": 2413,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2414,
          "column": 0
        },
        "end": {
          "line": 2422,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "num",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The number to check",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Object"
            },
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Boolean"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "returns true if this is the case",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "isNumber",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "isNumber",
        "kind": "function"
      }
    ],
    "namespace": "isNumber"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Checks whether a var is a string, returns ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "true",
              "position": {
                "start": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " if this is the case",
              "position": {
                "start": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 69,
          "offset": 68
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Checks whether a var is a string, returns `true` if this is the case",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Type-Check",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "isString"
      },
      {
        "title": "param",
        "description": "The string to check",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Object"
            },
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Boolean"
            }
          ]
        },
        "name": "str"
      },
      {
        "title": "return",
        "description": "returns true if this is the case",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2424,
        "column": 0
      },
      "end": {
        "line": 2433,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2434,
          "column": 0
        },
        "end": {
          "line": 2436,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "str",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The string to check",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Object"
            },
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Boolean"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "returns true if this is the case",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "isString",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "isString",
        "kind": "function"
      }
    ],
    "namespace": "isString"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Checks whether a var is an InDesign text object, returns ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 58,
                  "offset": 57
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "true",
              "position": {
                "start": {
                  "line": 1,
                  "column": 58,
                  "offset": 57
                },
                "end": {
                  "line": 1,
                  "column": 64,
                  "offset": 63
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " if this is the case.\nNB: a InDesign text frame will return ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 64,
                  "offset": 63
                },
                "end": {
                  "line": 2,
                  "column": 39,
                  "offset": 123
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "false",
              "position": {
                "start": {
                  "line": 2,
                  "column": 39,
                  "offset": 123
                },
                "end": {
                  "line": 2,
                  "column": 46,
                  "offset": 130
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " as it is just a container holding text. So you could say that ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 46,
                  "offset": 130
                },
                "end": {
                  "line": 2,
                  "column": 109,
                  "offset": 193
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "isText()",
              "position": {
                "start": {
                  "line": 2,
                  "column": 109,
                  "offset": 193
                },
                "end": {
                  "line": 2,
                  "column": 119,
                  "offset": 203
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " refers to all the things inside a text frame.",
              "position": {
                "start": {
                  "line": 2,
                  "column": 119,
                  "offset": 203
                },
                "end": {
                  "line": 2,
                  "column": 165,
                  "offset": 249
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 165,
              "offset": 249
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 165,
          "offset": 249
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Checks whether a var is an InDesign text object, returns `true` if this is the case.\nNB: a InDesign text frame will return `false` as it is just a container holding text. So you could say that `isText()` refers to all the things inside a text frame.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "Type-Check",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "isText"
      },
      {
        "title": "param",
        "description": "The object to check",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Character"
            },
            {
              "type": "NameExpression",
              "name": "InsertionPoint"
            },
            {
              "type": "NameExpression",
              "name": "Line"
            },
            {
              "type": "NameExpression",
              "name": "Paragraph"
            },
            {
              "type": "NameExpression",
              "name": "TextColumn"
            },
            {
              "type": "NameExpression",
              "name": "TextStyleRange"
            },
            {
              "type": "NameExpression",
              "name": "Word"
            }
          ]
        },
        "name": "obj"
      },
      {
        "title": "return",
        "description": "returns true if this is the case",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2438,
        "column": 0
      },
      "end": {
        "line": 2448,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2449,
          "column": 0
        },
        "end": {
          "line": 2466,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "obj",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The object to check",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Character"
            },
            {
              "type": "NameExpression",
              "name": "InsertionPoint"
            },
            {
              "type": "NameExpression",
              "name": "Line"
            },
            {
              "type": "NameExpression",
              "name": "Paragraph"
            },
            {
              "type": "NameExpression",
              "name": "TextColumn"
            },
            {
              "type": "NameExpression",
              "name": "TextStyleRange"
            },
            {
              "type": "NameExpression",
              "name": "Word"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "returns true if this is the case",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "isText",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "isText",
        "kind": "function"
      }
    ],
    "namespace": "isText"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Checks whether an URL string is valid.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 39,
              "offset": 38
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 39,
          "offset": 38
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Checks whether an URL string is valid.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Type-Check",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "isURL"
      },
      {
        "title": "param",
        "description": "An url string to be checked",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "url"
      },
      {
        "title": "return",
        "description": "Returns either true or false",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2468,
        "column": 0
      },
      "end": {
        "line": 2477,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2478,
          "column": 0
        },
        "end": {
          "line": 2481,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "url",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An url string to be checked",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns either true or false",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "isURL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "isURL",
        "kind": "function"
      }
    ],
    "namespace": "isURL"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the units of the document (like right clicking the rulers). By default basil uses the units of the user's document or the user's default units.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 149,
                  "offset": 148
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 149,
              "offset": 148
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 149,
          "offset": 148
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Sets the units of the document (like right clicking the rulers). By default basil uses the units of the user's document or the user's default units.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "units"
      },
      {
        "title": "param",
        "description": "Supported units: PT, PX, CM, MM or IN.",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        },
        "name": "units"
      },
      {
        "title": "return",
        "description": "Current unit setting.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2783,
        "column": 0
      },
      "end": {
        "line": 2791,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2792,
          "column": 0
        },
        "end": {
          "line": 2792,
          "column": 27
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "units",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Supported units: PT, PX, CM, MM or IN.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 39,
              "offset": 38
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Current unit setting.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "units",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "units",
        "kind": "function"
      }
    ],
    "namespace": "units"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The name of the current script.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 32,
          "offset": 31
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "The name of the current script.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 4
      },
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 5,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "SCRIPTNAME"
      }
    ],
    "loc": {
      "start": {
        "line": 4571,
        "column": 0
      },
      "end": {
        "line": 4577,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4578,
          "column": 0
        },
        "end": {
          "line": 4581,
          "column": 26
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "stackArray",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "stackArray"
      }
    ],
    "namespace": "stackArray"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A class to describe a two or three dimensional vector. This data type stores two or three variables that are commonly used as a position, velocity, and/or acceleration. Technically, position is a point and velocity and acceleration are vectors, but this is often simplified to consider all three as vectors. For example, if you consider a rectangle moving across the screen, at any given instant it has a position (the object's location, expressed as a point.), a velocity (the rate at which the object's position changes per time unit, expressed as a vector), and acceleration (the rate at which the object's velocity changes per time unit, expressed as a vector). Since vectors represent groupings of values, we cannot simply use traditional addition/multiplication/etc. Instead, we'll need to do some \"vector\" math, which is made easy by the methods inside the Vector class.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 878,
                  "offset": 877
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 878,
              "offset": 877
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Constructor of Vector, can be two- or three-dimensional.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 879
                },
                "end": {
                  "line": 3,
                  "column": 57,
                  "offset": 935
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 879
            },
            "end": {
              "line": 3,
              "column": 57,
              "offset": 935
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 57,
          "offset": 935
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "A class to describe a two or three dimensional vector. This data type stores two or three variables that are commonly used as a position, velocity, and/or acceleration. Technically, position is a point and velocity and acceleration are vectors, but this is often simplified to consider all three as vectors. For example, if you consider a rectangle moving across the screen, at any given instant it has a position (the object's location, expressed as a point.), a velocity (the rate at which the object's position changes per time unit, expressed as a vector), and acceleration (the rate at which the object's velocity changes per time unit, expressed as a vector). Since vectors represent groupings of values, we cannot simply use traditional addition/multiplication/etc. Instead, we'll need to do some \"vector\" math, which is made easy by the methods inside the Vector class.\n\nConstructor of Vector, can be two- or three-dimensional.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 5
      },
      {
        "title": "subcat",
        "description": "Vector",
        "lineNumber": 6
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 7,
        "name": "Vector"
      },
      {
        "title": "param",
        "description": "The first vector.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x"
      },
      {
        "title": "param",
        "description": "The second vector.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y"
      },
      {
        "title": "param",
        "description": "The third vector.",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "z"
      },
      {
        "title": "class",
        "description": null,
        "lineNumber": 12,
        "name": null
      }
    ],
    "loc": {
      "start": {
        "line": 5846,
        "column": 2
      },
      "end": {
        "line": 5859,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5860,
          "column": 2
        },
        "end": {
          "line": 5864,
          "column": 3
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The first vector.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "y",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The second vector.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "z",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The third vector.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "class",
    "name": "Vector",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Adds ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 6,
                        "offset": 5
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "x",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 6,
                        "offset": 5
                      },
                      "end": {
                        "line": 1,
                        "column": 9,
                        "offset": 8
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ", ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 9,
                        "offset": 8
                      },
                      "end": {
                        "line": 1,
                        "column": 11,
                        "offset": 10
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "y",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 11,
                        "offset": 10
                      },
                      "end": {
                        "line": 1,
                        "column": 14,
                        "offset": 13
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ", and ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 14,
                        "offset": 13
                      },
                      "end": {
                        "line": 1,
                        "column": 20,
                        "offset": 19
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "z",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 20,
                        "offset": 19
                      },
                      "end": {
                        "line": 1,
                        "column": 23,
                        "offset": 22
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " components to a vector, adds one vector to another.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 23,
                        "offset": 22
                      },
                      "end": {
                        "line": 1,
                        "column": 75,
                        "offset": 74
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 75,
                    "offset": 74
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 75,
                "offset": 74
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Adds `x`, `y`, and `z` components to a vector, adds one vector to another.",
              "lineNumber": 1
            },
            {
              "title": "cat",
              "description": "Math",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "Vector.add"
            },
            {
              "title": "param",
              "description": "Either a full vector or an `x` component.",
              "lineNumber": 7,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              },
              "name": "v"
            },
            {
              "title": "param",
              "description": "The `y` component.",
              "lineNumber": 8,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "y"
            },
            {
              "title": "param",
              "description": "The `z` component.",
              "lineNumber": 9,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "z"
            }
          ],
          "loc": {
            "start": {
              "line": 5932,
              "column": 4
            },
            "end": {
              "line": 5942,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5943,
                "column": 4
              },
              "end": {
                "line": 5953,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "v",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Either a full vector or an ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 28,
                            "offset": 27
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "x",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 28,
                            "offset": 27
                          },
                          "end": {
                            "line": 1,
                            "column": 31,
                            "offset": 30
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " component.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 31,
                            "offset": 30
                          },
                          "end": {
                            "line": 1,
                            "column": 42,
                            "offset": 41
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 42,
                        "offset": 41
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 42,
                    "offset": 41
                  }
                }
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              }
            },
            {
              "title": "param",
              "name": "y",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "y",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "end": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " component.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "end": {
                            "line": 1,
                            "column": 19,
                            "offset": 18
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 19,
                        "offset": 18
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 19,
                    "offset": 18
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            },
            {
              "title": "param",
              "name": "z",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "z",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "end": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " component.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "end": {
                            "line": 1,
                            "column": 19,
                            "offset": 18
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 19,
                        "offset": 18
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 19,
                    "offset": 18
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "function",
          "name": "Vector.add",
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "class"
            },
            {
              "name": "Vector.add",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.add"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns this vector as an array ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 33,
                        "offset": 32
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "[x,y,z]",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 33,
                        "offset": 32
                      },
                      "end": {
                        "line": 1,
                        "column": 42,
                        "offset": 41
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ".",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 42,
                        "offset": 41
                      },
                      "end": {
                        "line": 1,
                        "column": 43,
                        "offset": 42
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 43,
                    "offset": 42
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 43,
                "offset": 42
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Returns this vector as an array `[x,y,z]`.",
              "lineNumber": 1
            },
            {
              "title": "cat",
              "description": "Math",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "Vector.array"
            },
            {
              "title": "return",
              "description": "The `x`, `y` and `z` components as an array of `[x,y,z]`.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Array"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 5955,
              "column": 4
            },
            "end": {
              "line": 5963,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5964,
                "column": 4
              },
              "end": {
                "line": 5966,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "x",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "end": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": ", ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "end": {
                            "line": 1,
                            "column": 10,
                            "offset": 9
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "y",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 10,
                            "offset": 9
                          },
                          "end": {
                            "line": 1,
                            "column": 13,
                            "offset": 12
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " and ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 13,
                            "offset": 12
                          },
                          "end": {
                            "line": 1,
                            "column": 18,
                            "offset": 17
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "z",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 18,
                            "offset": 17
                          },
                          "end": {
                            "line": 1,
                            "column": 21,
                            "offset": 20
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " components as an array of ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 21,
                            "offset": 20
                          },
                          "end": {
                            "line": 1,
                            "column": 48,
                            "offset": 47
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "[x,y,z]",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 48,
                            "offset": 47
                          },
                          "end": {
                            "line": 1,
                            "column": 57,
                            "offset": 56
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": ".",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 57,
                            "offset": 56
                          },
                          "end": {
                            "line": 1,
                            "column": 58,
                            "offset": 57
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 58,
                        "offset": 57
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 58,
                    "offset": 57
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Array"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "function",
          "name": "Vector.array",
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "class"
            },
            {
              "name": "Vector.array",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.array"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Calculates the cross product from this vector to another as ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 61,
                        "offset": 60
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "x",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 61,
                        "offset": 60
                      },
                      "end": {
                        "line": 1,
                        "column": 64,
                        "offset": 63
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ", ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 64,
                        "offset": 63
                      },
                      "end": {
                        "line": 1,
                        "column": 66,
                        "offset": 65
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "y",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 66,
                        "offset": 65
                      },
                      "end": {
                        "line": 1,
                        "column": 69,
                        "offset": 68
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ", and ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 69,
                        "offset": 68
                      },
                      "end": {
                        "line": 1,
                        "column": 75,
                        "offset": 74
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "z",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 75,
                        "offset": 74
                      },
                      "end": {
                        "line": 1,
                        "column": 78,
                        "offset": 77
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " components or full vector.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 78,
                        "offset": 77
                      },
                      "end": {
                        "line": 1,
                        "column": 105,
                        "offset": 104
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 105,
                    "offset": 104
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 105,
                "offset": 104
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Calculates the cross product from this vector to another as `x`, `y`, and `z` components or full vector.",
              "lineNumber": 1
            },
            {
              "title": "cat",
              "description": "Math",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "Vector.cross"
            },
            {
              "title": "param",
              "description": "Either a full vector or an `x` component.",
              "lineNumber": 7,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              },
              "name": "v"
            },
            {
              "title": "param",
              "description": "The `y` component.",
              "lineNumber": 8,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "y"
            },
            {
              "title": "param",
              "description": "The `z` component.",
              "lineNumber": 9,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "z"
            },
            {
              "title": "return",
              "description": "The cross product.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 5968,
              "column": 4
            },
            "end": {
              "line": 5979,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5980,
                "column": 4
              },
              "end": {
                "line": 5985,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "v",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Either a full vector or an ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 28,
                            "offset": 27
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "x",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 28,
                            "offset": 27
                          },
                          "end": {
                            "line": 1,
                            "column": 31,
                            "offset": 30
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " component.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 31,
                            "offset": 30
                          },
                          "end": {
                            "line": 1,
                            "column": 42,
                            "offset": 41
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 42,
                        "offset": 41
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 42,
                    "offset": 41
                  }
                }
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              }
            },
            {
              "title": "param",
              "name": "y",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "y",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "end": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " component.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "end": {
                            "line": 1,
                            "column": 19,
                            "offset": 18
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 19,
                        "offset": 18
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 19,
                    "offset": 18
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            },
            {
              "title": "param",
              "name": "z",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "z",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "end": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " component.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "end": {
                            "line": 1,
                            "column": 19,
                            "offset": 18
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 19,
                        "offset": 18
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 19,
                    "offset": 18
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The cross product.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 19,
                            "offset": 18
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 19,
                        "offset": 18
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 19,
                    "offset": 18
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "function",
          "name": "Vector.cross",
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "class"
            },
            {
              "name": "Vector.cross",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.cross"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Calculates the distance from this vector to another as ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 56,
                        "offset": 55
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "x",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 56,
                        "offset": 55
                      },
                      "end": {
                        "line": 1,
                        "column": 59,
                        "offset": 58
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ", ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 59,
                        "offset": 58
                      },
                      "end": {
                        "line": 1,
                        "column": 61,
                        "offset": 60
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "y",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 61,
                        "offset": 60
                      },
                      "end": {
                        "line": 1,
                        "column": 64,
                        "offset": 63
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ", and ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 64,
                        "offset": 63
                      },
                      "end": {
                        "line": 1,
                        "column": 70,
                        "offset": 69
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "z",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 70,
                        "offset": 69
                      },
                      "end": {
                        "line": 1,
                        "column": 73,
                        "offset": 72
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " components or full vector.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 73,
                        "offset": 72
                      },
                      "end": {
                        "line": 1,
                        "column": 100,
                        "offset": 99
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 100,
                    "offset": 99
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 100,
                "offset": 99
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Calculates the distance from this vector to another as `x`, `y`, and `z` components or full vector.",
              "lineNumber": 1
            },
            {
              "title": "cat",
              "description": "Math",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "Vector.dist"
            },
            {
              "title": "param",
              "description": "Either a full vector or an `x` component.",
              "lineNumber": 7,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              },
              "name": "v"
            },
            {
              "title": "param",
              "description": "The `y` component.",
              "lineNumber": 8,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "y"
            },
            {
              "title": "param",
              "description": "The `z` component.",
              "lineNumber": 9,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "z"
            },
            {
              "title": "return",
              "description": "The distance.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 5987,
              "column": 4
            },
            "end": {
              "line": 5998,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5999,
                "column": 4
              },
              "end": {
                "line": 6004,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "v",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Either a full vector or an ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 28,
                            "offset": 27
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "x",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 28,
                            "offset": 27
                          },
                          "end": {
                            "line": 1,
                            "column": 31,
                            "offset": 30
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " component.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 31,
                            "offset": 30
                          },
                          "end": {
                            "line": 1,
                            "column": 42,
                            "offset": 41
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 42,
                        "offset": 41
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 42,
                    "offset": 41
                  }
                }
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              }
            },
            {
              "title": "param",
              "name": "y",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "y",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "end": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " component.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "end": {
                            "line": 1,
                            "column": 19,
                            "offset": 18
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 19,
                        "offset": 18
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 19,
                    "offset": 18
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            },
            {
              "title": "param",
              "name": "z",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "z",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "end": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " component.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "end": {
                            "line": 1,
                            "column": 19,
                            "offset": 18
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 19,
                        "offset": 18
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 19,
                    "offset": 18
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The distance.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 14,
                            "offset": 13
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 14,
                        "offset": 13
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 14,
                    "offset": 13
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "function",
          "name": "Vector.dist",
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "class"
            },
            {
              "name": "Vector.dist",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.dist"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Divides this vector through ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 29,
                        "offset": 28
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "x",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 29,
                        "offset": 28
                      },
                      "end": {
                        "line": 1,
                        "column": 32,
                        "offset": 31
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ", ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 32,
                        "offset": 31
                      },
                      "end": {
                        "line": 1,
                        "column": 34,
                        "offset": 33
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "y",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 34,
                        "offset": 33
                      },
                      "end": {
                        "line": 1,
                        "column": 37,
                        "offset": 36
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ", and ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 37,
                        "offset": 36
                      },
                      "end": {
                        "line": 1,
                        "column": 43,
                        "offset": 42
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "z",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 43,
                        "offset": 42
                      },
                      "end": {
                        "line": 1,
                        "column": 46,
                        "offset": 45
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " components or another vector.`",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 46,
                        "offset": 45
                      },
                      "end": {
                        "line": 1,
                        "column": 77,
                        "offset": 76
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 77,
                    "offset": 76
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 77,
                "offset": 76
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Divides this vector through `x`, `y`, and `z` components or another vector.`",
              "lineNumber": 1
            },
            {
              "title": "cat",
              "description": "Math",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "Vector.div"
            },
            {
              "title": "param",
              "description": "Either a full vector or an `x` component.",
              "lineNumber": 7,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              },
              "name": "v"
            },
            {
              "title": "param",
              "description": "The `y` component.",
              "lineNumber": 8,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "y"
            },
            {
              "title": "param",
              "description": "The `z` component.",
              "lineNumber": 9,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "z"
            }
          ],
          "loc": {
            "start": {
              "line": 6006,
              "column": 4
            },
            "end": {
              "line": 6016,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 6017,
                "column": 4
              },
              "end": {
                "line": 6027,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "v",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Either a full vector or an ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 28,
                            "offset": 27
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "x",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 28,
                            "offset": 27
                          },
                          "end": {
                            "line": 1,
                            "column": 31,
                            "offset": 30
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " component.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 31,
                            "offset": 30
                          },
                          "end": {
                            "line": 1,
                            "column": 42,
                            "offset": 41
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 42,
                        "offset": 41
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 42,
                    "offset": 41
                  }
                }
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              }
            },
            {
              "title": "param",
              "name": "y",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "y",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "end": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " component.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "end": {
                            "line": 1,
                            "column": 19,
                            "offset": 18
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 19,
                        "offset": 18
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 19,
                    "offset": 18
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            },
            {
              "title": "param",
              "name": "z",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "z",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "end": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " component.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "end": {
                            "line": 1,
                            "column": 19,
                            "offset": 18
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 19,
                        "offset": 18
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 19,
                    "offset": 18
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "function",
          "name": "Vector.div",
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "class"
            },
            {
              "name": "Vector.div",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.div"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Calculates the dot product from this vector to another as ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 59,
                        "offset": 58
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "x",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 59,
                        "offset": 58
                      },
                      "end": {
                        "line": 1,
                        "column": 62,
                        "offset": 61
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ", ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 62,
                        "offset": 61
                      },
                      "end": {
                        "line": 1,
                        "column": 64,
                        "offset": 63
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "y",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 64,
                        "offset": 63
                      },
                      "end": {
                        "line": 1,
                        "column": 67,
                        "offset": 66
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ", and ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 67,
                        "offset": 66
                      },
                      "end": {
                        "line": 1,
                        "column": 73,
                        "offset": 72
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "z",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 73,
                        "offset": 72
                      },
                      "end": {
                        "line": 1,
                        "column": 76,
                        "offset": 75
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " components or full vector.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 76,
                        "offset": 75
                      },
                      "end": {
                        "line": 1,
                        "column": 103,
                        "offset": 102
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 103,
                    "offset": 102
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 103,
                "offset": 102
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Calculates the dot product from this vector to another as `x`, `y`, and `z` components or full vector.",
              "lineNumber": 1
            },
            {
              "title": "cat",
              "description": "Math",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "Vector.dot"
            },
            {
              "title": "param",
              "description": "Either a full vector or an `x` component.",
              "lineNumber": 7,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              },
              "name": "v"
            },
            {
              "title": "param",
              "description": "The `y` component.",
              "lineNumber": 8,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "y"
            },
            {
              "title": "param",
              "description": "The `z` component.",
              "lineNumber": 9,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "z"
            },
            {
              "title": "return",
              "description": "The dot product.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 6029,
              "column": 4
            },
            "end": {
              "line": 6040,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 6041,
                "column": 4
              },
              "end": {
                "line": 6044,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "v",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Either a full vector or an ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 28,
                            "offset": 27
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "x",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 28,
                            "offset": 27
                          },
                          "end": {
                            "line": 1,
                            "column": 31,
                            "offset": 30
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " component.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 31,
                            "offset": 30
                          },
                          "end": {
                            "line": 1,
                            "column": 42,
                            "offset": 41
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 42,
                        "offset": 41
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 42,
                    "offset": 41
                  }
                }
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              }
            },
            {
              "title": "param",
              "name": "y",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "y",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "end": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " component.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "end": {
                            "line": 1,
                            "column": 19,
                            "offset": 18
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 19,
                        "offset": 18
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 19,
                    "offset": 18
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            },
            {
              "title": "param",
              "name": "z",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "z",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "end": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " component.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "end": {
                            "line": 1,
                            "column": 19,
                            "offset": 18
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 19,
                        "offset": 18
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 19,
                    "offset": 18
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The dot product.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 17,
                            "offset": 16
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 17,
                        "offset": 16
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 17,
                    "offset": 16
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "function",
          "name": "Vector.dot",
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "class"
            },
            {
              "name": "Vector.dot",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.dot"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Gets a copy of the vector, returns a Vector object.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 52,
                        "offset": 51
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 52,
                    "offset": 51
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 52,
                "offset": 51
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Gets a copy of the vector, returns a Vector object.",
              "lineNumber": 1
            },
            {
              "title": "cat",
              "description": "Math",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "Vector.get"
            },
            {
              "title": "return",
              "description": "A copy of the vector.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 6046,
              "column": 4
            },
            "end": {
              "line": 6054,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 6055,
                "column": 4
              },
              "end": {
                "line": 6057,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A copy of the vector.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 22,
                            "offset": 21
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 22,
                        "offset": 21
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 22,
                    "offset": 21
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "function",
          "name": "Vector.get",
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "class"
            },
            {
              "name": "Vector.get",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.get"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The 2D orientation (heading) of this vector in radian.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 55,
                        "offset": 54
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 55,
                    "offset": 54
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 55,
                "offset": 54
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "The 2D orientation (heading) of this vector in radian.",
              "lineNumber": 1
            },
            {
              "title": "cat",
              "description": "Math",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "Vector.heading"
            },
            {
              "title": "return",
              "description": "A radian angle value.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 6059,
              "column": 4
            },
            "end": {
              "line": 6067,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 6068,
                "column": 4
              },
              "end": {
                "line": 6070,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A radian angle value.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 22,
                            "offset": 21
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 22,
                        "offset": 21
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 22,
                    "offset": 21
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "function",
          "name": "Vector.heading",
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "class"
            },
            {
              "name": "Vector.heading",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.heading"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Normalizes the length of this vector to the given parameter.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 61,
                        "offset": 60
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 61,
                    "offset": 60
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 61,
                "offset": 60
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Normalizes the length of this vector to the given parameter.",
              "lineNumber": 1
            },
            {
              "title": "cat",
              "description": "Math",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "Vector.limit"
            },
            {
              "title": "param",
              "description": "The value to scale to.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "high"
            }
          ],
          "loc": {
            "start": {
              "line": 6072,
              "column": 4
            },
            "end": {
              "line": 6080,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 6081,
                "column": 4
              },
              "end": {
                "line": 6086,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "high",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The value to scale to.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 23,
                            "offset": 22
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 23,
                        "offset": 22
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 23,
                    "offset": 22
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "function",
          "name": "Vector.limit",
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "class"
            },
            {
              "name": "Vector.limit",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.limit"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Calculates the magnitude (length) of the vector and returns the result as a float",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 82,
                        "offset": 81
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 82,
                    "offset": 81
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 82,
                "offset": 81
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Calculates the magnitude (length) of the vector and returns the result as a float",
              "lineNumber": 1
            },
            {
              "title": "cat",
              "description": "Math",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "Vector.mag"
            },
            {
              "title": "return",
              "description": "The length.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 6088,
              "column": 4
            },
            "end": {
              "line": 6096,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 6097,
                "column": 4
              },
              "end": {
                "line": 6102,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The length.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 12,
                            "offset": 11
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 12,
                        "offset": 11
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 12,
                    "offset": 11
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "function",
          "name": "Vector.mag",
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "class"
            },
            {
              "name": "Vector.mag",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.mag"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Multiplies this vector with ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 29,
                        "offset": 28
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "x",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 29,
                        "offset": 28
                      },
                      "end": {
                        "line": 1,
                        "column": 32,
                        "offset": 31
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ", ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 32,
                        "offset": 31
                      },
                      "end": {
                        "line": 1,
                        "column": 34,
                        "offset": 33
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "y",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 34,
                        "offset": 33
                      },
                      "end": {
                        "line": 1,
                        "column": 37,
                        "offset": 36
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ", and ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 37,
                        "offset": 36
                      },
                      "end": {
                        "line": 1,
                        "column": 43,
                        "offset": 42
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "z",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 43,
                        "offset": 42
                      },
                      "end": {
                        "line": 1,
                        "column": 46,
                        "offset": 45
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " components or another vector.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 46,
                        "offset": 45
                      },
                      "end": {
                        "line": 1,
                        "column": 76,
                        "offset": 75
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 76,
                    "offset": 75
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 76,
                "offset": 75
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Multiplies this vector with `x`, `y`, and `z` components or another vector.",
              "lineNumber": 1
            },
            {
              "title": "cat",
              "description": "Math",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "Vector.mult"
            },
            {
              "title": "param",
              "description": "Either a full vector or an `x` component.",
              "lineNumber": 7,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              },
              "name": "v"
            },
            {
              "title": "param",
              "description": "The `y` component.",
              "lineNumber": 8,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "y"
            },
            {
              "title": "param",
              "description": "The `z` component.",
              "lineNumber": 9,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "z"
            }
          ],
          "loc": {
            "start": {
              "line": 6104,
              "column": 4
            },
            "end": {
              "line": 6114,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 6115,
                "column": 4
              },
              "end": {
                "line": 6125,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "v",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Either a full vector or an ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 28,
                            "offset": 27
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "x",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 28,
                            "offset": 27
                          },
                          "end": {
                            "line": 1,
                            "column": 31,
                            "offset": 30
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " component.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 31,
                            "offset": 30
                          },
                          "end": {
                            "line": 1,
                            "column": 42,
                            "offset": 41
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 42,
                        "offset": 41
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 42,
                    "offset": 41
                  }
                }
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              }
            },
            {
              "title": "param",
              "name": "y",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "y",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "end": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " component.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "end": {
                            "line": 1,
                            "column": 19,
                            "offset": 18
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 19,
                        "offset": 18
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 19,
                    "offset": 18
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            },
            {
              "title": "param",
              "name": "z",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "z",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "end": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " component.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "end": {
                            "line": 1,
                            "column": 19,
                            "offset": 18
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 19,
                        "offset": 18
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 19,
                    "offset": 18
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "function",
          "name": "Vector.mult",
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "class"
            },
            {
              "name": "Vector.mult",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.mult"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Normalizes the length of this vector to 1.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 43,
                        "offset": 42
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 43,
                    "offset": 42
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 43,
                "offset": 42
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Normalizes the length of this vector to 1.",
              "lineNumber": 1
            },
            {
              "title": "cat",
              "description": "Math",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "Vector.normalize"
            }
          ],
          "loc": {
            "start": {
              "line": 6127,
              "column": 4
            },
            "end": {
              "line": 6133,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 6134,
                "column": 4
              },
              "end": {
                "line": 6137,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "function",
          "name": "Vector.normalize",
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "class"
            },
            {
              "name": "Vector.normalize",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.normalize"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Sets the ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 10,
                        "offset": 9
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "x",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 10,
                        "offset": 9
                      },
                      "end": {
                        "line": 1,
                        "column": 13,
                        "offset": 12
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ", ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 13,
                        "offset": 12
                      },
                      "end": {
                        "line": 1,
                        "column": 15,
                        "offset": 14
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "y",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 15,
                        "offset": 14
                      },
                      "end": {
                        "line": 1,
                        "column": 18,
                        "offset": 17
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ", and ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 18,
                        "offset": 17
                      },
                      "end": {
                        "line": 1,
                        "column": 24,
                        "offset": 23
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "z",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 24,
                        "offset": 23
                      },
                      "end": {
                        "line": 1,
                        "column": 27,
                        "offset": 26
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " component of the vector using three separate variables, the data from a Vector, or the values from a float array.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 27,
                        "offset": 26
                      },
                      "end": {
                        "line": 1,
                        "column": 141,
                        "offset": 140
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 141,
                    "offset": 140
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 141,
                "offset": 140
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Sets the `x`, `y`, and `z` component of the vector using three separate variables, the data from a Vector, or the values from a float array.",
              "lineNumber": 1
            },
            {
              "title": "cat",
              "description": "Math",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "Vector.set"
            },
            {
              "title": "param",
              "description": "Either a vector, array or `x` component.",
              "lineNumber": 7,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Array"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  }
                ]
              },
              "name": "v"
            },
            {
              "title": "param",
              "description": "The `y` component.",
              "lineNumber": 8,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "y"
            },
            {
              "title": "param",
              "description": "The `z` component.",
              "lineNumber": 9,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "z"
            }
          ],
          "loc": {
            "start": {
              "line": 6139,
              "column": 4
            },
            "end": {
              "line": 6149,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 6150,
                "column": 4
              },
              "end": {
                "line": 6157,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "v",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Either a vector, array or ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 27,
                            "offset": 26
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "x",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 27,
                            "offset": 26
                          },
                          "end": {
                            "line": 1,
                            "column": 30,
                            "offset": 29
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " component.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 30,
                            "offset": 29
                          },
                          "end": {
                            "line": 1,
                            "column": 41,
                            "offset": 40
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 41,
                        "offset": 40
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 41,
                    "offset": 40
                  }
                }
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Array"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  }
                ]
              }
            },
            {
              "title": "param",
              "name": "y",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "y",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "end": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " component.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "end": {
                            "line": 1,
                            "column": 19,
                            "offset": 18
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 19,
                        "offset": 18
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 19,
                    "offset": 18
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            },
            {
              "title": "param",
              "name": "z",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "z",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "end": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " component.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "end": {
                            "line": 1,
                            "column": 19,
                            "offset": 18
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 19,
                        "offset": 18
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 19,
                    "offset": 18
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "function",
          "name": "Vector.set",
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "class"
            },
            {
              "name": "Vector.set",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.set"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Substract ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 11,
                        "offset": 10
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "x",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 11,
                        "offset": 10
                      },
                      "end": {
                        "line": 1,
                        "column": 14,
                        "offset": 13
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ", ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 14,
                        "offset": 13
                      },
                      "end": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "y",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "end": {
                        "line": 1,
                        "column": 19,
                        "offset": 18
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ", and ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 19,
                        "offset": 18
                      },
                      "end": {
                        "line": 1,
                        "column": 25,
                        "offset": 24
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "z",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 25,
                        "offset": 24
                      },
                      "end": {
                        "line": 1,
                        "column": 28,
                        "offset": 27
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " components or a full vector from this vector.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 28,
                        "offset": 27
                      },
                      "end": {
                        "line": 1,
                        "column": 74,
                        "offset": 73
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 74,
                    "offset": 73
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 74,
                "offset": 73
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Substract `x`, `y`, and `z` components or a full vector from this vector.",
              "lineNumber": 1
            },
            {
              "title": "cat",
              "description": "Math",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "Vector.sub"
            },
            {
              "title": "param",
              "description": "Either a full vector or an `x` component.",
              "lineNumber": 7,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              },
              "name": "v"
            },
            {
              "title": "param",
              "description": "The `y` component.",
              "lineNumber": 8,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "y"
            },
            {
              "title": "param",
              "description": "The `z` component.",
              "lineNumber": 9,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "z"
            }
          ],
          "loc": {
            "start": {
              "line": 6159,
              "column": 4
            },
            "end": {
              "line": 6169,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 6170,
                "column": 4
              },
              "end": {
                "line": 6180,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "v",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Either a full vector or an ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 28,
                            "offset": 27
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "x",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 28,
                            "offset": 27
                          },
                          "end": {
                            "line": 1,
                            "column": 31,
                            "offset": 30
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " component.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 31,
                            "offset": 30
                          },
                          "end": {
                            "line": 1,
                            "column": 42,
                            "offset": 41
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 42,
                        "offset": 41
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 42,
                    "offset": 41
                  }
                }
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              }
            },
            {
              "title": "param",
              "name": "y",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "y",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "end": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " component.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "end": {
                            "line": 1,
                            "column": 19,
                            "offset": 18
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 19,
                        "offset": 18
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 19,
                    "offset": 18
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            },
            {
              "title": "param",
              "name": "z",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "z",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "end": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " component.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "end": {
                            "line": 1,
                            "column": 19,
                            "offset": 18
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 19,
                        "offset": 18
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 19,
                    "offset": 18
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "function",
          "name": "Vector.sub",
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "class"
            },
            {
              "name": "Vector.sub",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.sub"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns data about this vector as a string.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 44,
                        "offset": 43
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 44,
                    "offset": 43
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 44,
                "offset": 43
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Returns data about this vector as a string.",
              "lineNumber": 1
            },
            {
              "title": "cat",
              "description": "Math",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "Vector.toString"
            },
            {
              "title": "return",
              "description": "The `x`, `y` and `z` components as a string.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 6182,
              "column": 4
            },
            "end": {
              "line": 6190,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 6191,
                "column": 4
              },
              "end": {
                "line": 6193,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "x",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "end": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": ", ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "end": {
                            "line": 1,
                            "column": 10,
                            "offset": 9
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "y",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 10,
                            "offset": 9
                          },
                          "end": {
                            "line": 1,
                            "column": 13,
                            "offset": 12
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " and ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 13,
                            "offset": 12
                          },
                          "end": {
                            "line": 1,
                            "column": 18,
                            "offset": 17
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "z",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 18,
                            "offset": 17
                          },
                          "end": {
                            "line": 1,
                            "column": 21,
                            "offset": 20
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " components as a string.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 21,
                            "offset": 20
                          },
                          "end": {
                            "line": 1,
                            "column": 45,
                            "offset": 44
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 45,
                        "offset": 44
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 45,
                    "offset": 44
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "function",
          "name": "Vector.toString",
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "class"
            },
            {
              "name": "Vector.toString",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.toString"
        }
      ],
      "events": [],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Static function. Calculates the angle between two vectors. Is meant to be called \"static\" i.e. ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 96,
                        "offset": 95
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "Vector.angleBetween(v1, v2);",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 96,
                        "offset": 95
                      },
                      "end": {
                        "line": 1,
                        "column": 126,
                        "offset": 125
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 126,
                    "offset": 125
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 126,
                "offset": 125
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Static function. Calculates the angle between two vectors. Is meant to be called \"static\" i.e. `Vector.angleBetween(v1, v2);`",
              "lineNumber": 1
            },
            {
              "title": "cat",
              "description": "Math",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "Vector.angleBetween"
            },
            {
              "title": "param",
              "description": "The first vector.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              },
              "name": "v1"
            },
            {
              "title": "param",
              "description": "The second vector.",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              },
              "name": "v2"
            },
            {
              "title": "return",
              "description": "The angle.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 10
            }
          ],
          "loc": {
            "start": {
              "line": 5866,
              "column": 2
            },
            "end": {
              "line": 5877,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5878,
                "column": 2
              },
              "end": {
                "line": 5880,
                "column": 4
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "v1",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The first vector.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 18,
                            "offset": 17
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 18,
                        "offset": 17
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 18,
                    "offset": 17
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              }
            },
            {
              "title": "param",
              "name": "v2",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The second vector.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 19,
                            "offset": 18
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 19,
                        "offset": 18
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 19,
                    "offset": 18
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The angle.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 11,
                            "offset": 10
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 11,
                        "offset": 10
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 11,
                    "offset": 10
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "function",
          "name": "Vector.angleBetween",
          "scope": "static",
          "memberof": "Vector",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "class"
            },
            {
              "name": "Vector.angleBetween",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "Vector.Vector.angleBetween"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Static function. Calculates the cross product of two vectors. Is meant to be called \"static\" i.e. ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 99,
                        "offset": 98
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "Vector.cross(v1, v2);",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 99,
                        "offset": 98
                      },
                      "end": {
                        "line": 1,
                        "column": 122,
                        "offset": 121
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 122,
                    "offset": 121
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 122,
                "offset": 121
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Static function. Calculates the cross product of two vectors. Is meant to be called \"static\" i.e. `Vector.cross(v1, v2);`",
              "lineNumber": 1
            },
            {
              "title": "cat",
              "description": "Math",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "Vector.cross"
            },
            {
              "title": "param",
              "description": "The first vector.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              },
              "name": "v1"
            },
            {
              "title": "param",
              "description": "The second vector.",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              },
              "name": "v2"
            },
            {
              "title": "return",
              "description": "The cross product.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 10
            }
          ],
          "loc": {
            "start": {
              "line": 5882,
              "column": 2
            },
            "end": {
              "line": 5893,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5894,
                "column": 2
              },
              "end": {
                "line": 5896,
                "column": 4
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "v1",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The first vector.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 18,
                            "offset": 17
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 18,
                        "offset": 17
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 18,
                    "offset": 17
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              }
            },
            {
              "title": "param",
              "name": "v2",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The second vector.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 19,
                            "offset": 18
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 19,
                        "offset": 18
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 19,
                    "offset": 18
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The cross product.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 19,
                            "offset": 18
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 19,
                        "offset": 18
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 19,
                    "offset": 18
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "function",
          "name": "Vector.cross",
          "scope": "static",
          "memberof": "Vector",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "class"
            },
            {
              "name": "Vector.cross",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "Vector.Vector.cross"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Static function. Calculates the Euclidean distance between two points (considering a point as a vector object). Is meant to be called \"static\" i.e. ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 149,
                        "offset": 148
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "Vector.dist(v1, v2);",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 149,
                        "offset": 148
                      },
                      "end": {
                        "line": 1,
                        "column": 171,
                        "offset": 170
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 171,
                    "offset": 170
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 171,
                "offset": 170
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Static function. Calculates the Euclidean distance between two points (considering a point as a vector object). Is meant to be called \"static\" i.e. `Vector.dist(v1, v2);`",
              "lineNumber": 1
            },
            {
              "title": "cat",
              "description": "Math",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "Vector.dist"
            },
            {
              "title": "param",
              "description": "The first vector.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              },
              "name": "v1"
            },
            {
              "title": "param",
              "description": "The second vector.",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              },
              "name": "v2"
            },
            {
              "title": "return",
              "description": "The distance.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 10
            }
          ],
          "loc": {
            "start": {
              "line": 5898,
              "column": 2
            },
            "end": {
              "line": 5909,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5910,
                "column": 2
              },
              "end": {
                "line": 5912,
                "column": 4
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "v1",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The first vector.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 18,
                            "offset": 17
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 18,
                        "offset": 17
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 18,
                    "offset": 17
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              }
            },
            {
              "title": "param",
              "name": "v2",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The second vector.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 19,
                            "offset": 18
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 19,
                        "offset": 18
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 19,
                    "offset": 18
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The distance.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 14,
                            "offset": 13
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 14,
                        "offset": 13
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 14,
                    "offset": 13
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "function",
          "name": "Vector.dist",
          "scope": "static",
          "memberof": "Vector",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "class"
            },
            {
              "name": "Vector.dist",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "Vector.Vector.dist"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Static function. Calculates the dot product of two vectors. Is meant to be called \"static\" i.e. ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 97,
                        "offset": 96
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "Vector.dot(v1, v2);",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 97,
                        "offset": 96
                      },
                      "end": {
                        "line": 1,
                        "column": 118,
                        "offset": 117
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 118,
                    "offset": 117
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 118,
                "offset": 117
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Static function. Calculates the dot product of two vectors. Is meant to be called \"static\" i.e. `Vector.dot(v1, v2);`",
              "lineNumber": 1
            },
            {
              "title": "cat",
              "description": "Math",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "Vector.dot"
            },
            {
              "title": "param",
              "description": "The first vector.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              },
              "name": "v1"
            },
            {
              "title": "param",
              "description": "The second vector.",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              },
              "name": "v2"
            },
            {
              "title": "return",
              "description": "The dot product.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 10
            }
          ],
          "loc": {
            "start": {
              "line": 5914,
              "column": 2
            },
            "end": {
              "line": 5925,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5926,
                "column": 2
              },
              "end": {
                "line": 5928,
                "column": 4
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "v1",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The first vector.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 18,
                            "offset": 17
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 18,
                        "offset": 17
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 18,
                    "offset": 17
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              }
            },
            {
              "title": "param",
              "name": "v2",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The second vector.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 19,
                            "offset": 18
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 19,
                        "offset": 18
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 19,
                    "offset": 18
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The dot product.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 17,
                            "offset": 16
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 17,
                        "offset": 16
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 17,
                    "offset": 16
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "function",
          "name": "Vector.dot",
          "scope": "static",
          "memberof": "Vector",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "class"
            },
            {
              "name": "Vector.dot",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "Vector.Vector.dot"
        }
      ]
    },
    "path": [
      {
        "name": "Vector",
        "kind": "class"
      }
    ],
    "namespace": "Vector"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Prints a message line to the console output in the ExtendScript editor.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 72,
                  "offset": 71
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 72,
              "offset": 71
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 72,
          "offset": 71
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Prints a message line to the console output in the ExtendScript editor.",
        "lineNumber": 1
      },
      {
        "title": "cat",
        "description": "Output",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Console",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "println"
      },
      {
        "title": "param",
        "description": "Any combination of Number, String, Object, Boolean, Array to print.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Any"
        },
        "name": "msg"
      }
    ],
    "loc": {
      "start": {
        "line": 6405,
        "column": 0
      },
      "end": {
        "line": 6413,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6414,
          "column": 0
        },
        "end": {
          "line": 6419,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "msg",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Any combination of Number, String, Object, Boolean, Array to print.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 68,
                      "offset": 67
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 68,
                  "offset": 67
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 68,
              "offset": 67
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Any"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "println",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "println",
        "kind": "function"
      }
    ],
    "namespace": "println"
  }
]